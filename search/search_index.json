{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Rocky Linux Wiki","text":""},{"location":"#about","title":"About","text":"<p>Rocky Linux is a community-driven Enterprise Linux distribution\u2014 stable enough for the largest enterprise to rely on it, and community-driven to ensure it stays accessible to all.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<p>Below is a list of links to common resources for Rocky Linux. For more, click the \"Links Directory\" at the top of this page.</p> <ul> <li>Website</li> <li>Public Repository</li> <li>Forums</li> <li>Reddit</li> <li>Documentation</li> <li>Rocky Linux Account Services</li> <li>Mail List</li> <li>Reporting Bugs</li> <li>Bug Tracker</li> <li>Rocky Linux Git Service</li> <li>RESF Git Service</li> <li>Docker Hub</li> <li>Quay.io</li> <li>Koji (Build Service)</li> <li>Peridot (Build Service)</li> <li>Mattermost</li> </ul>"},{"location":"#contact","title":"Contact","text":"Team Contact Channel Community community@rockylinux.org Design design@rockylinux.org ~design Development &amp; Release Engineering releng@rockylinux.org ~development Documentation ~documentation Infrastructure infrastructure@rockylinux.org ~infrastructure Security security@rockylinux.org ~Security Web web@rockylinux.org <p>For all other questions: hello@rockylinux.org</p> <p>Alternatively, you can use our mail lists</p>"},{"location":"#contributing","title":"Contributing","text":"<p>See our current Contributing section for information on how to contribute to the project.</p>"},{"location":"#special-thanks","title":"Special Thanks","text":"<p>We would like to thank all of those out there for their support on our project. It is thanks to you, our users, our mirrors, and our sponsors for your continued support that allows us to continue to grow. </p> <p>Our sponsors can be found here.</p>"},{"location":"irc/","title":"General Chat and IRC","text":"<p>This page goes over General Chat and IRC general information and etiquette.</p> <p>Note</p> <p>IRC (libera.chat) and Matrix are no longer bridged. You will find that if you join the Matrix channels, you will be asked to join us in other ways. It is recommended that you join us via Mattermost or via IRC.</p> <p>Mattermost is the primary communication tool for the Rocky Linux project. IRC is a common communication tool used in the open source community. This means that several channels of Mattermost and Libera IRC channels are bridged together to ensure the community can communicate effectively and not be splintered. Rocky Linux Infrastructure and other teams manage and maintain both the mattermost channels and the various Libera IRC channels such as <code>#rockylinux</code> and <code>#rockylinux-social</code>. A list of our channels can be found in <code>Bridge Information</code> section on this page.</p> <p>More information about Libera can be found here.</p>"},{"location":"irc/#contact-information","title":"Contact Information","text":"IRC Mattermost <code>Sokel/label/Sombra</code> <code>@label</code> <code>neil</code> <code>@neil</code> <code>tg</code> <code>@tgo</code> <code>pj</code> <code>@pj</code> <code>lexi</code> <code>@grammaresque</code>"},{"location":"irc/#bridge-information","title":"Bridge Information","text":"<p>Current mappings are below. Note that this is not an all inclusive list.</p> <p>Note</p> <p>As matrix and IRC are no longer briged, the Matrix section has been removed. There are no plans to bridge Matrix. If you wish to request or provide any kind of knowledge or help in maintaining a bridge, please file a ticket.</p> IRC Mattermost #rockylinux ~general #rockylinux-devel ~development #rockylinux-docs ~documentation #rockylinux-infra ~infrastructure #rockylinux-legal ~legal #rockylinux-security ~security #rockylinux-sig-altarch ~altarch #rockylinux-sig-kernel ~sig-kernel #rockylinux-social ~off-topic #rockylinux-testing ~testing #rockylinux-www ~web"},{"location":"irc/#general","title":"General","text":"<p>It is likely that there will be a lot of boxes running Rocky Linux and thus there will be fair amount of people who will occasionally look for help in the main Rocky Linux Mattermost <code>~General</code> channel or Rocky Linux main IRC channel <code>#rockylinux</code>, typically on what the distribution ships. It is important to maintain focus on a Rocky Linux specific matter as the channel typically does not have the ability nor bandwidth to support non-Rocky Linux topics.</p> <p>Here is a general rule of thumb:</p> <ul> <li>Unless a question or thread is about an application or program supplied in Rocky Linux, it is likely off topic (see the exceptions section)</li> <li>Discussing the usage of non-Rocky Linux packages or problems (which the Rocky Linux project has no control over) are off-topic (see exceptions)</li> <li>Polling for general usage/preferences or other opinion matter is considered off-topic</li> <li>Requesting support or discussing the usage of other distributions is considered off-topic (more info here)</li> </ul>"},{"location":"irc/#exceptions","title":"Exceptions","text":"<p>There are cases where it may do more harm than good to deny or to not provide assistance to a user who is using something that others may consider unsupported as a whole. While this is on a case by case basis and we are unable to list all exceptions, these are some of the more obvious exceptions:</p> <ul> <li> <p>If the question is related to software in EPEL</p> <ul> <li>If a problem is reproducible or its an issue out of our control, it is recommended to go <code>#epel</code> or EPEL's Matrix Channel.</li> </ul> </li> <li> <p>If the question is related to drivers from elrepo or rpmfusion</p> <ul> <li>It is common for users to be using hardware that is either not supported in a current Rocky Linux release or needs a better driver (e.g., nouveau -&gt; nvidia). Providing general assistance for getting such drivers should be considered semi-topical. Most users will support one another in this scenario. elrepo volunteers will be in the channel as well to assist users. Other issues should go to <code>#elrepo</code> or where topical, such as their Bug Tracker.</li> </ul> </li> <li> <p>If the question is related to CentOS Stream as it pertains to Rocky Linux</p> <ul> <li>There may be cases where discussion of CentOS Stream may occur. This typically happens when trying to determine behavior changes or what it may take to make a behavior change upstream that would then affect Rocky Linux. These should be treated as semi-topical. Note that CentOS Stream specific support may be found in <code>#centos-stream</code> on Libera IRC and channels within Matrix if they exist.</li> </ul> </li> </ul>"},{"location":"irc/#what-is-not-supported","title":"What is not supported?","text":"<ul> <li>Kernel Rebuilds</li> <li> <p>Other Derivatives/Forks</p> <ul> <li>This includes, but is not limited to RHEL, OEL, Alma, Springdale, SL</li> </ul> </li> <li> <p>Broken \"V\" Servers</p> </li> <li>Old minor/point releases of Rocky Linux (See our version policy)</li> <li>Upgrades or upgraded Rocky Linux systems (e.g., upgrading Rocky Linux 8 to 9, see our version policy)</li> <li>Upgrades of the default python version (e.g. python 3.6 to 3.9 or python 3.9 to 3.11)</li> <li>Upgrades of the default glibc version provided</li> <li>Politics or Profanity</li> <li>Distro X is better/worse than Rocky Linux</li> <li> <p>Personal drama from other channels, namespaces, or other users</p> <ul> <li>IRC: Repeat offenders will be quieted or banned from the <code>#rockylinux*</code> namespace</li> <li>Mattermost: Repeat offenders will be banned from the Rocky Linux mattermost instance</li> </ul> </li> </ul>"},{"location":"irc/#etiquette","title":"Etiquette","text":"<p>This section goes over general etiquette expected of all users of Mattermost or IRC.</p>"},{"location":"irc/#how-to-ask-questions","title":"How to ask questions","text":"<p>When coming into the IRC or Mattermost channels, it's important to be able to field your question in a manner in which the other users will be able to understand the question and provide assistance. Here's some general ideas:</p> <ul> <li>Don't ask to ask - Just ask your question</li> <li> <p>Don't paste large quantities of text into the channel</p> <ul> <li>This can be disruptive to users on both sides of the IRC/MM bridge</li> <li>If at all possible, use a paste bin such as rpaste</li> </ul> </li> <li> <p>Limit edits - Refrain from unnecessary edits in Mattermost.</p> <ul> <li>Edits are not propogated to IRC at this time.</li> <li>Consider sending a new separate message instead with only the added content, as to allow users on our bridges to help more easily if possible.</li> </ul> </li> <li> <p>Be patient - You may not get an instant answer. We are all volunteers, so it may take minutes or hours to receive an answer to your question.</p> </li> <li>Read the Topic - The topic may contain useful information you may want to know about.</li> </ul>"},{"location":"irc/#expectations","title":"Expectations","text":"<p>As <code>#rockylinux</code> is the general Rocky Linux support and discussion channel on Libera, it is not a primary support area for learning Linux or general chatting and off topic matter. Off-topic matter should go to <code>#rockylinux-social</code> or <code>~off-topic</code>. With that being said, below is a list of things you should probably be aware of:</p> <ul> <li>The channels are filled with supporters of Rocky, end users, volunteers with wide ranges of skillsets and knowledge who use the distribution on a professional or personal level</li> <li> <p>Polite and on-topic people get answers to their queries</p> <ul> <li>Insulting, rude, or off topic users are generally ignored or warned for their behavior</li> <li>Consider the human, be civil - Treat people how you would want to be treated</li> <li>Those who are consistently disruptive (or \"trolls\") will be removed from the channel by a quiet or ban</li> </ul> </li> <li> <p>The channel can be busy with several threads running in parallel</p> </li> <li>We support what we ship</li> <li> <p>Do not be surprised if you are asked to provide some information about your system</p> <ul> <li><code>rpaste -s</code></li> <li><code>uname -a</code></li> <li><code>rpm -V packageName</code></li> <li>If you refuse to provide such information, volunteers may stop trying to assist you.</li> </ul> </li> </ul> <p>It is normal for a channel to not be all business all the time. Passing snarkiness or even random off topic matter can occur. However, it can be a problem if it takes over the channel, where a user is unable to get their question in or the discussion turns into animosity, insults, or rude behavior (see the above points).</p> <p>A recommendation would be to join the channel and observe for a while to get an idea of how the channel operates; try to avoid dropping in, asking a question, and disappearing.</p> <p>Note</p> <p>The channels are logged and routinely checked. What is seen in Mattermost is also seen in IRC and vice versa. It is also very likely we (channel operators) are not the only ones who monitor the channel. This means that your conversations are considered public.</p> <p>Persistent abusers and those who consistently act out in bad faith will receive a silence/quiet or a ban, if they have been repeatedly warned. If you find that you have been banned in IRC and do not know why, you may want to ask in <code>#rockylinux-ops</code> and an available channel operator will try to assist you.</p> <p>Please also see our Code of Conduct.</p>"},{"location":"irc/#irc-for-beginners","title":"IRC For Beginners","text":"<p>It is possible that you may have not used IRC before. Hopefully this guide will get you started.</p> <p>You will need an IRC client. There are many out there. Here are examples:</p> <ul> <li>ChatZilla (firefox add on)</li> <li>Pidgin</li> <li>Kiwi (web client)</li> <li>weechat (text client)</li> <li>irssi (text client)</li> </ul> <p>Once you have your IRC client setup/configured, you'll need to go to irc://irc.libera.chat/. To set your nickname, type <code>/nick nickname</code> in the box and press enter.</p> <p>Note that our channels require users to be registered on Libera in order to participate. Libera chat provides instructions for you to do so here. If you require assistance, you can type <code>/join #libera</code> and request help.</p> <p>Once you have registered and you are identified with <code>NickServ</code>, you can type <code>/join #rockylinux</code> or another related channel.</p> <p>Note that subsequent logins will require you to identify. <code>/msg nickserv identify password</code> will help you to ensure you don't get locked out of the <code>#rockylinux*</code> channels.</p>"},{"location":"irc/#irc-cloaks-for-liberachat-network","title":"IRC Cloaks for libera.chat network","text":"<p>Cloaks allow you to show your association with the Rocky Linux project and protect your hostname from being seen from others. Cloaks can be received from a project or just by the network upon request.</p> <p>If you would like to receive a cloak, contact neil or Louis on IRC or Mattermost.</p>"},{"location":"irc/#context","title":"Context","text":"<p>This section provides context to some things mentioned throughout this document that would've likely crowded the section entirely. These sections may end up on different pages in the future, but they are here for now.</p>"},{"location":"irc/#kernel-rebuilds","title":"Kernel Rebuilds","text":"<p>Kernel rebuilds are not recommended nor supported for Rocky Linux. Before building a custom kernel or even considering it, ask yourself the following questions:</p> <ul> <li>Is the functionality you need available by installing a kernel module from elrepo?</li> <li>Is the functionality you need available as a separate module from the kernel itself?</li> <li>Are you willing to maintain your own security posture?</li> <li>Are you sure? Rocky Linux and most other EL derivatives were designed to function as a complete environment. Replacing critical components can affect how the system acts.</li> <li>Are you ABSOLUTELY sure? 99.9% of the users no longer need to build their own kernel. You may simple need a kernel module/driver, in which case, you can use elrepo or build your own kernel module (kmod/dkms)</li> <li>Are you sure you don't just want a newer kernel version? Newer kernels can be found at elrepo and soon SIG/Kernel.</li> </ul> <p>Warning</p> <p>As a final warning, if you break the kernel, you are on the hook for your system. Rocky Linux volunteers or developers are unable to assist you with these issues.</p>"},{"location":"irc/#upgraded-systems","title":"Upgraded Systems","text":"<p>System Upgrades are generally unsupported. There are quite a few methods out there of users performing upgrades:</p> <ul> <li> <p>Updating the system release packages (e.g., centos-release to rocky-release, or updating rocky-release to another) and running a <code>yum distro-sync</code> or <code>yum update</code></p> </li> <li> <p>Example 1: replacing centos-* packages with rocky-* packages and running <code>yum update</code> or <code>yum distro-sync</code></p> </li> <li> <p>Example 2: updating rocky-* packages from 8 to 9, and then running <code>dnf update</code> or <code>dnf distro-sync</code></p> </li> <li> <p>Using scripts or tools that a user may not review that promise smooth upgrades from X to Y</p> </li> <li>Following guides that promise smooth upgrades from X to Y</li> </ul> <p>Regardless of the method, a system that has been \"upgraded\" is generally considered unsupported, and you will be recommended to build a new system and restore from backups. Users may try to help or assist with your system, but it may be difficult to do so.</p> <p>Note</p> <p>While the tool ELevate exists to help users transition from one major release of an Enterprise Linux to another, we have not formally tested it and we cannot officially provide assistance or feedback to the tool or an upgraded system. There may be users in the channel who have done so and can assist, but at this time it's still unsupported.</p>"},{"location":"irc/#outdated-or-end-of-life-releases","title":"Outdated or End of Life Releases","text":"<p>Outdated or End of Life releases are not generally supported. When you do not update, you are leaving your system in a vulnerable state, prone to bugs and effectively lower security posture. Do not be surprised if community members, volunteers, and channel regulars ask you to run:</p> <ul> <li><code>cat /etc/os-release</code></li> <li><code>cat /etc/rocky-release</code></li> <li><code>dnf repolist</code></li> <li><code>dnf update</code></li> </ul> <p>Only the latest available <code>X.Y</code> of a given version is supported at a given time. Check out the Rocky Linux section for more information for the latest available releases and our version policies.</p> <p>If you are stuck on a release due to vendor software locking or certifying only on a certain release, it is recommended that you speak with your software vendor and request information on when they plan on supporting/certifying a supported release for their software.</p>"},{"location":"irc/#broken-v-servers","title":"Broken V Servers","text":"<p>Our distribution, like others, use a variant of <code>dnf</code>. All Rocky Linux releases are shipped with <code>dnf</code> and a certain set of matching configuration files (like <code>.repo</code> files). This allows your system to work with the mirror system provided by the Rocky Linux project. Some downstream forks break these configurations and make their system incompatible with what we provide off the shelf.</p> <p>Regulars (developers/volunteers) will typically decline to help in this type of scenario. Below are examples of \"broken V servers\" where <code>dnf</code> is either missing, misconfigured, or outright crippled.</p>"},{"location":"irc/#vps","title":"VPS","text":"<p>So you have a VPS and you've discovered <code>dnf</code> is not working as it should. This means you are not using Rocky Linux. If you are using an installation \"based on\" Rocky Linux but <code>dnf</code> is missing, you don't have a real Rocky Linux installation. Common examples of providers who do this:</p> <ul> <li>OpenVZ</li> <li>cPanel</li> <li>Plesk</li> <li>webmin</li> <li>Direct Admin</li> <li>BlueQuartz</li> <li>Asterisk</li> <li>Trixbox</li> <li>Elastix</li> </ul> <p>The above tend to only install parts of Rocky Linux on their virtual servers and some are known for removing <code>dnf</code> from the system entirely or altering the settings in a way that is unconducive to a working Rocky Linux system. Typical changes are that they exclude locally modified packages from our base repositories. You can verify this by running <code>grep -ir exclude /etc/{yum,dnf}*</code> which will show what they are excluding. Some will also manage the box outside of the package manager.</p> <p>Why these providers do this is unclear. Regardless of their reasons, this approach is seen negatively as <code>dnf</code> has mechanisms to protect specific packages from change.</p> <p>Before you try anything, please STOP and ask your provider why they removed <code>dnf</code> and how are you supposed to keep your system up to date/secure without it.</p>"},{"location":"irc/#wait-youre-saying-i-was-lied-to","title":"Wait, you're saying I was lied to?","text":"<p>In essence, yes. A true Rocky Linux installation has a Rocky kernel and the <code>rocky-release</code> packages, as well as <code>dnf</code>, without modifications to the contents in <code>/etc/yum.repos.d</code> (other than possibly a local mirror or staged repositories). All dependencies will be satisified and with the exception of configuration files, they will be kept up to date and maintained.</p> <p>A true Rocky Linux system can:</p> <ul> <li>Be updated at any time</li> <li>Provide a list of usual groups that is reproducible across systems</li> <li>Has SELinux enforcing by default</li> <li>Has a working firewall by default</li> </ul> <p>You will be asked to run some commands by volunteers. Such as:</p> <ul> <li><code>dnf install rpaste -y ; rpaste --sysinfo</code></li> <li><code>cat /etc/os-release ; uname -a ; rpm -V dnf rocky-release rocky-repos ; ls /etc/yum.repos.d/ ; dnf repolist all</code></li> </ul> <p>The former produces a sysinfo output (the package is installed from extras). The second produces multi-line output that you can provide at https://rpa.st. Alternatively, you will be asked just to run <code>uname -a</code> which is typically sufficient enough.</p> <p>When it's clear it's not a Rocky Linux system, the regulars of the channel will not continue to offer further assistance. They do not wish to suggest a course of action that can potentially break your system further. Most regulars cannot and don't know all the ways hosting providers may have altered the functions which a Rocky Linux system provides by default.</p> <p>If you were lied to, we ask that you request your provider to mend their ways. You could ask your provider:</p> <ul> <li>Stop misrepresenting what they offer as Rocky Linux</li> <li>Deliver to you what they promised or receive a refund</li> </ul>"},{"location":"irc/#is-it-possible-to-get-dnf-back","title":"Is it possible to get dnf back?","text":"<p>Yes it is possible. However, it may come at a cost of breaking your system. Thus, we cannot provide such advice here.</p>"},{"location":"links/","title":"Link Directory","text":"<ul> <li>Website</li> <li>System Status</li> <li>Forums</li> <li>Wiki</li> <li>Documentation</li> <li>Rocky Linux Account Services</li> <li>Mail List</li> </ul>"},{"location":"links/#cloud-offerings","title":"Cloud Offerings","text":"<ul> <li>Amazon Web Services</li> <li>Google Cloud Platform</li> </ul>"},{"location":"links/#development","title":"Development","text":"<ul> <li>GitHub<ul> <li>Container Roots</li> <li>Image Kickstarts</li> </ul> </li> <li>RESF Git Service</li> <li>GitLab Server<ul> <li>RPM Sources</li> <li>Rocky Package Sources</li> <li>Module Sources</li> <li>Rocky Customizations</li> <li>Repo Comps</li> </ul> </li> <li>Bug Tracker</li> <li>Docker Hub</li> <li>Quay.io</li> <li>Vagrant</li> </ul>"},{"location":"links/#rocky-linux-8","title":"Rocky Linux 8","text":"<ul> <li>Distrobuild<ul> <li>Builds List</li> <li>Koji</li> </ul> </li> </ul>"},{"location":"links/#rocky-linux-9","title":"Rocky Linux 9","text":"<ul> <li>Peridot</li> <li>Peridot Development Instance</li> </ul>"},{"location":"links/#rocky-linux-10","title":"Rocky Linux 10","text":"<ul> <li>Koji</li> </ul>"},{"location":"links/#social","title":"Social","text":"<ul> <li>Mattermost</li> <li>IRC (libera.chat): IRC&lt;--&gt;Mattermost mappings</li> <li>Twitter</li> <li>LinkedIn<ul> <li>Company Page</li> <li>User Group</li> </ul> </li> <li>Reddit</li> <li>Twitch</li> <li>YouTube<ul> <li>on other channels</li> </ul> </li> <li>Other</li> <li>DistroWatch</li> </ul>"},{"location":"archive/","title":"Archives","text":"<p>This section of the wiki is meant as a historical archive of the original Rocky Linux wiki, as well as pages that are no longer considered relevant to the current wiki. This contains various documents that are considered either \"legacy\" or \"obsolete\", and are intended to be instructional in nature and will not reflect the current status of the project, its documentation, nor current wiki content. This content will not be updated beyond what is currently dropped here.</p>"},{"location":"archive/legacy/","title":"Legacy","text":"<p>This section contains all documents considered as \"legacy\", as archived from the original wiki, regardless of the team involved. Use the navigation menu to your left to view the various pages in this section.</p> <p>Please note that this section is likely not to be updated. Retired documents per team/wiki section will have its own retired/legacy section.</p>"},{"location":"archive/legacy/8_4_package_errors/","title":"Rocky Release 8.4 Package Errors","text":"<p>This page tracks package fixes/progress for the upcoming 8.4 release.  Packages are tracked in a table with package name, Koji build link, assignee, and notes.</p> <p>Packages that are fixed will be marked with a ~~strikethrough~~ to indicate they're done.</p> <p>Packages are considered fixed only after they have a successful build in Koji.</p> <p> </p> Package Koji Link Assignee Notes ~~spirv-tools-2020.5-3.20201208~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8403~~ ~~N/A~~ ~~Neil: Last time we had to tag to an older release of spirv-headers - we likely need to update this.~~ ~~python-cryptography~~ https://kojidev.rockylinux.org/koji/buildinfo?buildID=8353 Skip Grube Relies on new python-cryptography-vectors c8s branch; Neil: Removed unnecessary patch from 8.3 dotnet3/dotnet5 https://kojidev.rockylinux.org/koji/buildinfo?buildID=8326 Michael Young Import/patch issue?  Also might be memory issues with building large SRPM on i686 ; 2021-05-27 - see comment below ~~rhel-system-roles~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8376~~ ~~N/A~~ ~~No matching package to install: 'python3dist(ruamel.yaml)'~~ ~~pandoc~~ https://kojidev.rockylinux.org/koji/buildinfo?buildID=8340 Neil Hanlon / ashman / others ~~Need to bootstrap + build \"hscolour and it should be fixed  - Had to enable bootstrapping on ghc-rpm-macros (built as %{RELEASE}.1) and then build hscolour as well with a bootstrapping patch to not have a circular dependency on ghc-rpm-macros to hscolour.~~ ~~texlive~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8464~~ ~~Jordan Pisaniello~~ ~~Compiler error : ../../../texk/web2c/pdftexdir/pdftosrc.cc:91:25: error: 'unique_ptr' is not a member of 'std' (and others)~~ ~~xdp-tools~~ ~~https://kojidev.rockylinux.org/koji/taskinfo?taskID=80568~~ N/A ~~Compiler error libbpf support: FORCE_SYSTEM_LIBBPF is set, but no usable libbpf found~~ ~~libreoffice~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8315~~ ~~Skip Grube~~ Needs mdds-1.5 (c8s branch), then new liborcus, then can compile this ~~gupnp~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8213~~ ~~Skip Grube~~ ~~gupnp: need 'gssdp-devel &gt;= 1.0.5' first (new hidden dependency?)~~ ~~libdazzle~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8265~~ N/A ~~libdazzle: aarch64 error:  failed test \"test-recursive-monitor\" - see build.log for more info~~ ~~libuv~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8297~~ ~~N/A~~ ~~Several failed tests, but ONLY on i686~~ ~~libwacom~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8306~~ ~~Skip Grube~~ ~~libwacom:  need to update meson:  meson.build:1:0: ERROR:  Meson version is 0.49.2 but project requires &gt;= 0.50.0.~~ ~~libbpf~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8263~~ ~~N/A~~ ~~/usr/bin/strip:/builddir/build/BUILDROOT/libbpf-0.2.0-1.el8.x86_64/usr/lib64/st9U4xP0/libbpf-in.o[.gnu.build.attributes]: error: failed to copy merged notes into output: Bad value (???)~~ ~~bcc~~ ~~https://kojidev.rockylinux.org/koji/taskinfo?taskID=80556~~ N/A ~~Needs new kernel release~~ ~~gssdp~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8209~~ N/A ~~failing test \"test-functional\" ONLY on i686~~ ~~gnome-settings-daemon~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8204~~ ~~Skip Grube~ ~~Spec file is incorrectly configured or macro is being defined~~ ~~ghostscript~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8195~~ N/A ~~Compiler errors: from ./base/sjbig2.c:26:/usr/include/jbig2.h:93:11: note: expected 'Jbig2ErrorCallback' {aka 'int ()(void , const char , enum ,  int)'} but argument is of type 'void ()(void , const char , Jbig2Severity,  int32_t)' {aka 'void ()(void , const char *, enum ,  int)'} (and others)~~ ~~dnf~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8147~~ ~~Skip Grube~~ ~~No matching package to install: 'python3-hawkey &gt;= 0.55.0-5' (new hidden dep?)~~ ~~dlm~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8137~~ ~~N/A~~ ~~compiler errors: member.c:113:86: error: parameter 2 ('ring_id') has incomplete type~~ ~~corosync~~ ~~https://kojidev.rockylinux.org/koji/buildinfo?buildID=8122~~ ~~Skip Grube~~ ~~No matching package to install: 'libknet1-devel &gt;= 1.18' (hidden dep?  or something not compiled yet?)~~ ~~bpftrace~~ ~~https://kojidev.rockylinux.org/koji/taskinfo?taskID=80558~~ N/A ~~Compiler error - likely fixed by new libbpf(?)~~"},{"location":"archive/legacy/8_4_package_errors/#annotations","title":"Annotations","text":"<p>#### dotnet3.1   From Michael Young on 2021-05-27</p> <p>Hey @Skip Grube I have been quiet all week because dotnet is kicking my butt. I thought it would be as simple as redoing the patch. I have been working with dotnet3.1. It doesn't seem to like the minor version that is now in os-release for rocky 8.4. When I redid the patch and built with just the major version, it builds... But with the major and minor, it fails.</p> <p>Wanted to put a note here since I am going to be away from a computer until Monday and don't want to leave everyone hanging... Not sure if there is a date in mind besides as soon as possible. If anyone wants to take a stab at it, be my guest. Otherwise, I will keep plugging away at it... I think I am close to getting it to use the runtime I'd of rocky-8.4</p>"},{"location":"archive/legacy/bootstrap_i686/","title":"Bootstrap i686","text":"<p>Koji, by default, does not build packages as multiarch, it expects a i686 repo/buildroot as that is what mock expects. It appears that it requires a 32 bit bootstrap to start off. However, Enterprise Linux 8 does not have a 32 bit repo. To get around this, packages have to be bootstrapped using at least Fedora 28 (and Fedora 29 for couple of instances).</p>"},{"location":"archive/legacy/bootstrap_i686/#setup","title":"Setup","text":""},{"location":"archive/legacy/bootstrap_i686/#install-mock-and-configuration","title":"Install Mock and Configuration","text":"<p>Install mock...</p> <pre><code>% yum install epel-release\n% yum install mock createrepo_c httpd -y\n% useradd rpmbuild\n% usermod -aG mock rpmbuild\n</code></pre> <p>Add a proper mock configuration...</p> <pre><code>% cat &gt;&gt; /etc/mock/rocky-8-i686.cfg &lt;&lt; \"EOF\"\n# A lot of these values do not matter as they will be overridden later\n# with koji's mock settings\nconfig_opts['root'] = 'rocky-8-i686'\nconfig_opts['target_arch'] = 'i686'\nconfig_opts['legal_host_arches'] = ('i386', 'i486', 'i586', 'i686', 'x86_64',)\nconfig_opts['chroot_setup_cmd'] = 'install bash bzip2 coreutils cpio diffutils system-release findutils gawk gcc gcc-c++ grep gzip info make patch redhat-rpm-config rpm-build sed shadow-utils tar unzip util-linux which xz'\nconfig_opts['dist'] = 'el8'  # only useful for --resultdir variable subst\nconfig_opts['macros']['%dist'] = \".el8\"\nconfig_opts['%centos_ver'] = \"8\"\nconfig_opts['macros']['%centos_ver'] = \"8\"\nconfig_opts['macros']['%rhel'] = \"8\"\nconfig_opts['macros']['%el8'] = \"1\"\nconfig_opts['macros']['%redhat'] = \"8\"\nconfig_opts['macros']['%_vendor'] = \"redhat\"\nconfig_opts['macros']['%_vendor_host'] = \"redhat\"\nconfig_opts['macros']['%_host'] = \"i686-redhat-linux-gnu\"\nconfig_opts['macros']['%vendor'] = \"Rocky Linux\"\nconfig_opts['macros']['%packager'] = \"Louis Abel &lt;label@rockylinux.org&gt;\"\n#config_opts['package_manager'] = 'yum'\n\n# no ccache in base repo\n#config_opts['plugin_conf']['ccache_enable'] = False\n#config_opts['plugin_conf']['yum_cache_enable'] = False\n\nconfig_opts['yum.conf'] = \"\"\"\n[main]\ncachedir=/var/cache/yum\nkeepcache=1\ndebuglevel=2\nreposdir=/dev/null\nlogfile=/var/log/yum.log\nretries=20\nobsoletes=1\ngpgcheck=0\nassumeyes=1\nsyslog_ident=mock\nsyslog_device=\n\nexclude=*.x86_64\n\n# We are using Fedora 28 or 29 as our bases. 28 is what we use mainly. There are\n# a few cases where I needed 29 instead, but they were far and few between.\n\n# In majority of builds now with the current bootstrap, Fedora is rarely used.\n# Even though this is the case, we still need to exclude specific packages as\n# they have epochs or dnf decides to use Fedora instead for whatever reason.\n\n[base_29]\nname=fedora 29 base\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/releases/29/Everything/i386/os/\nenabled=0\ngpgcheck=0\ncost=2000\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n[updates_29]\nname=fedora 29 updates\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/updates/29/Everything/i386/\nenabled=0\ngpgcheck=0\ncost=2000\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n[base_28]\nname=fedora 28 base\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/releases/28/Everything/i386/os/\nenabled=1\ngpgcheck=0\ncost=2000\npriority=99\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n[updates_28]\nname=fedora 28 updates\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/updates/28/Everything/i386/\nenabled=1\ngpgcheck=0\ncost=2000\npriority=99\nexclude=gcc*,fedora-release*,gdbm-devel,gdbm,gdbm-libs,python3-libs,unbound*,gnutls*,python*,generic-release,fedora-repos,fedora-gpg-keys,perl*\n\n# These aren't ever used, but it doesn't hurt to have them here disabled.\n[modular]\nname=fedora 28 modular\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/releases/28/Modular/i386/os/\nenabled=0\ngpgcheck=0\ncost=2500\n\n[modular_updates]\nname=fedora 28 modular updates\nbaseurl=https://archives.fedoraproject.org/pub/archive/fedora-secondary/updates/28/Modular/i386/\nenabled=0\ngpgcheck=0\ncost=2500\n\n# Sometimes I enable this, but usually I just copy what's there into /reqs and\n# createrepo.\n[i686]\nname=i686 only\nbaseurl=file:///var/www/html/src/i686\nenabled=0\ngpgcheck=0\ncost=1000\n\n# Everything we're building into a single repo. This has higher priority.\n[recursive]\nname=recursive\nbaseurl=file:///var/www/html/src/reqs\nenabled=1\ngpgcheck=0\ncost=1000\npriority=1\nmodule_hotfixes=0\n\"\"\"\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#setup-the-recursive-repo","title":"Setup the recursive repo","text":"<p>So we can create an empty repo so mock/dnf is ok with that. However, that won't cut everything. We need a couple RPM's first. We can pull the noarch packages that centos has right now to get us started.</p> <pre><code>% mkdir -p /var/www/html/src/{reqs,logs,mirror,hidden}\n\n# Pull required RPM's\n% wget http://mirror.centos.org/centos/8.3.2011/AppStream/x86_64/os/Packages/redhat-rpm-config-123-1.el8.noarch.rpm\n\n# Generate repo data\n% createrepo /var/www/html/src/reqs\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#pull-required-hidden-deps","title":"Pull required hidden deps","text":"<p>We still need some hidden dependencies. And a lot of these can be built without a problem after the above has been setup. Below is a list, which can be found on our temporary copr. You should download the source RPM's and build them.</p> <p>You won't find a rocky-logos or rocky-release in copr. However you may find them in our koji. Highly recommended downloading them from koji and building them.</p> <pre><code>-rw-r--r-- 1 root root    569161 Apr  7 04:09 atf-0.20-11.el8.src.rpm\n-rw-r--r-- 1 root root   2198827 Apr  7 04:01 fonttools-3.28.0-2.el8.src.rpm\n-rw-r--r-- 1 root root    670398 Apr  7 04:34 kyua-0.13-1.el8.src.rpm\n-rw-r--r-- 1 root root 149325484 Mar 15 22:41 libabigail-1.4-2.el8.src.rpm\n-rw-r--r-- 1 root root    500728 Apr  7 04:19 lutok-0.4-10.el8.src.rpm\n-rw-r--r-- 1 root root   1107360 Aug  7  2020 nspr-4.25.0-2.el8_2.src.rpm\n-rw-r--r-- 1 root root 143424626 Apr  8 06:56 nss-3.53.1-17.el8.src.rpm\n-rw-r--r-- 1 root root    100839 Mar 14 22:38 pam_wrapper-1.0.7-1.el8.src.rpm\n-rw-r--r-- 1 root root    149272 Dec 21 03:56 polkit-gnome-0.106-0.2.20170423gita0763a2.el8.src.rpm\n-rw-r--r-- 1 root root   1507527 Mar 15 17:38 rocky-logos-83.0-1.el8.src.rpm\n-rw-r--r-- 1 root root     23678 Apr  9 04:04 rocky-release-8.3-5.el8.src.rpm\n-rw-r--r-- 1 root root   3527211 Apr  7 03:52 ttfautohint-1.8.1-3.el8.src.rpm\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#optional-pull-all-the-sources-from-the-vault","title":"Optional: Pull all the sources from the vault","text":"<p>You may need to pull all the sources from the vault. I used httrack to do this. Note that the link may die and you may need to build it yourself.</p> <p>Another thing is, after I pulled down the sources, I deleted all the old stuff and moved all the module packages.</p> <pre><code>% cd /var/www/html/src/mirror\n# -sN 0 helps ignore robots\n% httrack https://vault.centos.org/8.3.2011/BaseOS/Source/SPackages/ -sN 0\n% httrack https://vault.centos.org/8.3.2011/AppStream/Source/SPackages/ -sN 0\n% httrack https://vault.centos.org/8.3.2011/HighAvailability/Source/SPackages/ -sN 0\n% httrack https://vault.centos.org/8.3.2011/PowerTools/Source/SPackages/ -sN 0\n\n# Now we need to move some things\n% mv vault.centos.org/8.3.2011/BaseOS/Source/SPackages/ BaseOS\n% mv vault.centos.org/8.3.2011/AppStream/Source/SPackages/ AppStream\n% mv vault.centos.org/8.3.2011/HighAvailability/Source/SPackages/ HighAvailability\n% mv vault.centos.org/8.3.2011/PowerTools/Source/SPackages/ PowerTools\n% rm -rf vault.centos.org index.html\n\n# I don't want to build modules. I'm doing that in koji, so instead, I'm moving them away.\n% mkdir modules\n% find . -type f -regextype sed -regex '.*module.*\\.rpm' -exec mv {} modules/ \\;\n\n# Now I need to remove all the old stuff\n# You can use repomanage on directories that are not actual repos and it will operate properly.\n% for x in AppStream BaseOS HighAvailability PowerTools ; do rm $(repomanage --keep=1 ${x}) ; done\n</code></pre>"},{"location":"archive/legacy/bootstrap_i686/#actually-build","title":"Actually build","text":"<p>I have a kind of hacky script that takes care of this for me. You can feed it one at a time.</p> <pre><code># ~/bin/build-a-rpm\n#!/bin/bash\nPACKAGE=$1\nLOGDIR=/var/www/html/src/logs/${NAME//.src.rpm/}\nMOCKDIR=/var/lib/mock/rocky-8-i686\nmock -r rocky-8-i386 $1\n\nif [ $? -eq 0 ]; then\n  rm ${MOCKDIR}/result/*.src.rpm\n  cp ${MOCKDIR}/result/*.rpm /var/www/html/src/reqs\n  createrepo /var/www/html/src/reqs\n  echo $1 &gt;&gt; /tmp/DONE\nelse\n  mkdir ${LOGDIR}\n  cp ${MOCKDIR}/result/*.log ${LOGDIR}\n  echo $1 &gt;&gt; /tmp/FAIL\nfi\n</code></pre> <pre><code>% build-a-rpm /var/www/html/src/mirror/BaseOS/tar-1.30-5.el8.src.rpm\n</code></pre>"},{"location":"archive/legacy/build_steps/","title":"Rocky Build Process Overview (Revised)","text":"<p>UPDATE2: updated version of this document published 2021-01-04 , lots of conceptual work has been done, many more things finalized</p> <p>This is a simple document that explains going from RHEL sources to freshly (re)-built Rocky Linux packages.  It's not intended to be overly technical or specific at all, just an introduction (and general plan) to someone interested in how the process will work.</p>"},{"location":"archive/legacy/build_steps/#the-steps-going-from-rhel-8-source-to-rocky-8-binary-package","title":"The Steps: Going from RHEL 8 Source to Rocky 8 Binary Package","text":"<p>1:  Obtain the RHEL sources via SRPM or CentOS Git</p> <p>2-3: Import RHEL source into Rocky Linux Git, replace any protected trademarks / branding from the source</p> <p>4:  Produce a Rocky 8 Source RPM from the Rocky Linux Git repository for the package, likely using Koji/MBS/Mock RPM build tools</p> <p>5: Compile the source RPM to a Rocky 8 binary RPM using the build tools</p> <p>6: Sign and test the RPM in an automatic way</p> <p>7: Deploy it to the Rocky Linux repository, and distribute to users</p> <p></p> <p>Obviously, each of these steps has a lot more to it.  This document will not get in-depth about ways and means of accomplishing each step.  We prefer each of these to be as automated as possible.  We'll take a (short) look at each one in turn, and the various options available to achieve them:</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-1-obtain-the-source","title":"Step 1: Obtain the Source","text":"<p>This is fairly straightforward.  If you want to re-build RHEL 8, you need the source to RHEL 8.  There are 2 main ways to do this:</p> <ul> <li>Download source RPM files on a RHEL machine via yum/dnf</li> <li>Copy them from https://git.centos.org (which are identical to RHEL and have tagged versions)</li> </ul> <p>The packaging team has decided to go with option #2: copying from CentOS Git.  This minimizes potential legal questions with RHEL subscription terms, and is a simple operation to perform.  SRPM extraction can be used in the future in case of any issues with the CentOS Git site.</p> <p>Tools are now being developed to perform this step in an automated fashion.  CentOS (and Fedora) use an MQ messaging solution to indicate when new commits are made to a repository.  We intend to consume those published messages as well to get alerted when we should build a new package.</p> <p>We have news that https://git.centos.org will be the actual commit location for RHEL sources in the future, so we should be in good company!</p> <p>Future Doc: There will be another document explaining exactly what is in the CentOS Git branches, how to navigate, etc.</p> <p></p>"},{"location":"archive/legacy/build_steps/#steps-2-3-import-source-to-git-and-replace-branding","title":"Steps 2-3: Import source to Git, and replace branding","text":"<p>This is a big technical question-mark, and will need to be carefully considered.</p> <p>Each package in RHEL should have a corresponding Rocky Linux Git repository dedicated to it.  For example: Rocky Linux will have a bash repository, a python3 repository, a python3-gpg repository, etc.  One git repo for each package.  Yes, that is a lot of git repositories.</p> <p>The decision from our infrastructure team is to go with a (self-hosted) Gitlab instance.</p> <p>This section will outline some of the major technical hurdles being considered:</p>"},{"location":"archive/legacy/build_steps/#second-git-thats-private","title":"Second git that's private?","text":"<p>It is legally questionable to host raw RHEL material due to trademark issues.  There are a couple of options:</p> <ul> <li>Host a second, private git that holds raw RHEL sources waiting to be de-branded</li> <li>De-brand sources via script or patch as they are imported, and place the result into the main, public git repos</li> </ul> <p>Tentative Answer: Applying de-brand patches at the same time as import seems viable.  So no need for a separate private repo.</p>"},{"location":"archive/legacy/build_steps/#git-packagebinary-strategy","title":"Git package/binary strategy","text":"<p>Packages are distributed as specfiles, patches, and the upstream/original source as a tarball (.tar.gz, tar.bz2, etc.).  Text files are easy enough in git, but there are different strategies for storing these upstream tar files.</p> <p>Answer: The agreed-upon strategy is to use a lookaside caching mechanism, just like Fedora and CentOS proper.  The one used is called dist-git, and involves a separate script that downloads a tarfile that matches to a checked out git branch.</p> <p>If this doesn't work out, git-lfs is also a popular option for binary storage.</p>"},{"location":"archive/legacy/build_steps/#filesfolders-tagsbranches-layout-in-git","title":"Files/Folders, Tags/Branches layout in Git:","text":"<p>Should we stick to the folders/tags/branches layout in git.centos.org?  Or something quite different?  Should we place debranding metadata with the project, or somewhere else?  How about automated/scripted test cases?  There is a lot to consider here.</p> <p>Tentative Answer: Our Git layout will likely mirror certain branches of packages in git.centos.org, but with different names.  Debranding metadata will be kept separate, as well as metadata related to modular package builds.</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-4-produce-a-rocky-linux-source-rpm","title":"Step 4: Produce a Rocky Linux source RPM","text":"<p>Once in a Rocky repository, the contents of a package should correspond directly to its SRPM equivalent.</p> <p>The debranding should be complete by this point, so a build system (Koji) will be able to point to the repository, grab the source for it, and construct our Rocky SRPM using Mock and other RPM tools.</p> <p>Special attention will have to be paid to the \"modular/stream\" RPMs in RHEL 8.  The Modular Build System (MBS) service that interacts with Koji needs to be set up properly to accomodate this.</p> <p>Particulars of the build config will depend on the answers to steps 2-3 above:  What folder(s) will things be in, where will the binary tar file data be located, etc.</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-5-produce-a-rocky-linux-binary-rpm","title":"Step 5: Produce a Rocky Linux Binary RPM","text":"<p>This is pretty straightforward.  Once we have a valid source RPM, we use our build system to extract, compile, and produce a valid binary RPM.</p> <p>Again, special consideration is needed for modular/stream packages, and dependencies.</p> <p>Note about dependencies:  Not everything required to build the packages in RHEL is available in RHEL.  Some packages require other packages to be built first, and their -devel packages produced before another package will compile properly.  RHEL/CentOS do not maintain a public location for these \"extra\" dependencies, but Rocky Linux plans to.  There will likely be another document later spelling this information out in more detail.</p> <p>Once complete, we're ready to test, sign, and send it off to the official repository (and mirrors!).</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-6-sign-and-test","title":"Step 6: Sign and Test","text":"<p>RPMs produced by us should be cryptographically signed with a Rocky Linux key, which guarantees to users that the package was indeed built by the Rocky Linux project.</p> <p>The package will also need to be put through some testing - preferably automated.  The nature of the testing is yet to be determined, but we'll want to do some sanity checks at the bare minimum before unleashing it on the world.  (Is this package installable?  Did we accidentally miss any files?  Does it cause dnf/yum dependency conflicts? etc.)</p> <p></p>"},{"location":"archive/legacy/build_steps/#step-7-deploy-to-repository","title":"Step 7: Deploy to Repository","text":"<p>Once a package is complete and tested, it will be uploaded to the Rocky Linux repository, and picked up/cloned by a network of repository mirrors around the world.  The Rocky 8 source RPM will of course be uploaded as well.</p> <p>Users of the distro will then see it when they <code>dnf update</code> or <code>dnf install</code> !</p> <p></p>"},{"location":"archive/legacy/build_steps/#closing-note","title":"Closing Note:","text":"<p>This is version \"3\" of this document.  We are now about a month into the project, and have come a long way in our understanding!</p> <p>The technical folks examining this have learned much in a short time, and already have working proof-of-concept RPM pipelines(!)  Come join in ~Dev/Packaging on Mattermost and we're happy to discuss package/release pipeline direction.</p> <p>There are still several questions to answer, particularly in regards to steps 2-3.  Progress is being made, though.</p> <p>Spelling out what needs to be done is much easier than actually accomplishing it.</p> <p>This document remains a work-in-progress, as more technical information comes in.</p> <p>This document remains a rough draft, and is likely to go through more revision as we learn more.</p> <p></p> <p>Thanks,</p> <p>-Skip Grube (Mattermost)  (skip77 on IRC)</p>"},{"location":"archive/legacy/external_package_space/","title":"External Package Scratch Space","text":"<p>This is a staging area for current work on external dependencies.  Once confirmed working, items from these lists will be removed and added to the \"official\" Hidden/External Dependencies Wiki page.</p> <p>Packages listed should use the default \"c8\" branch, unless otherwise noted in parentheses</p> <p>(Remember: all perl deps built without \"module_hotfix\" dnf option, we want to build w/ default Perl 5.26 stream)</p> <p></p>"},{"location":"archive/legacy/external_package_space/#to-add-to-external-build-list-100","title":"To add to External build list 100:","text":"<pre><code># Build Deps 100:\n(empty, for now - moved to the official page)\n</code></pre>"},{"location":"archive/legacy/external_package_space/#to-add-to-the-external-build-list-101","title":"To add to the External build list 101:","text":"<pre><code># Build Deps 101:\n(empty, for now - moved to the official page)\n</code></pre>"},{"location":"archive/legacy/external_package_space/#to-add-to-the-external-build-list-102","title":"To add to the External build list 102:","text":"<pre><code># Build Deps 102:\n</code></pre>"},{"location":"archive/legacy/external_package_space/#still-being-figured-out","title":"Still being figured out:","text":"<p><pre><code>################\n**** Notes for Tycho build ****\n\napache-commons-codec namespace changed between 1.11 and 1.13\n\nFrom koji build log for 1.11 (https://koji.mbox.centos.org/pkgs/packages/apache-commons-codec/1.11/3.module_el8.0.0+39+6a9b6e22/data/logs/noarch/build.log)\n\n    \"Provides: apache-commons-codec = 1.11-3.module_el8.0.0+39+6a9b6e22 mvn(commons-codec:commons-codec) = 1.11 mvn(commons-codec:commons-codec:pom:) = 1.11 osgi(org.apache.commons.codec) = 1.11.0\"\n\n    Notice that it says it provides osgi(org.apache.commons.codec)\n\nFrom koji bild log for 1.13 (https://koji.mbox.centos.org/pkgs/packages/apache-commons-codec/1.13/3.module_el8.3.0+568+0c23fd64/data/logs/noarch/build.log)\n\n    \"Provides: apache-commons-codec = 1.13-3.module_el8.3.0+568+0c23fd64 mvn(commons-codec:commons-codec) = 1.13 mvn(commons-codec:commons-codec:pom:) = 1.13 osgi(org.apache.commons.commons-codec) = 1.13.0\"\n\n    Notice that it says it provides osgi(org.apache.commons.commons-codec)\n\nThe change from 'org.apache.commons.codec' to 'org.apache.commons.commons-codec' breaks the build of tycho\n\nPatching the files in the source file org.eclipse.tycho-tycho-1.4.0.tar.xz to refer to \"org.apache.commons.commons-codec\" resolved the build.\n    Files touched inside source file: org.eclipse.tycho-tycho-1.4.0/tycho-bundles/tycho-bundles-external/tycho-bundles-external.product\n                      org.eclipse.tycho-tycho-1.4.0/tycho-bundles/tycho-standalone-p2-director/p2 Director.product\n\nPatched tycho-bootstrap.sh as well\n\n\n\nSKIPS NOTE:\nPotentially patch in tycho .spec file:\nfind . -iname \"*.product\" -type f | xargs -n 1  -I {} sed -i 's/org\\.apache\\.commons\\.codec/org\\.apache\\.commons\\.commons\\-codec/g' \"{}\"\nfind . -iname \"*.sh\" -type f | xargs -n 1  -I {} sed -i 's/org\\.apache\\.commons\\.codec/org\\.apache\\.commons\\.commons\\-codec/g' \"{}\"\n#########################\n\n\n\n\n\nMaven issues - https://pagure.io/centos-infra/issue/210, https://bugzilla.redhat.com/show_bug.cgi?id=1897375\n--------------------------------------------------------------------------------------------------\nAttempt to install \"maven\" package as part of setting up mock environment, as mentioned in Bugzilla report results in packaging conflicts\n\n\nError: Transaction test error:\n  file /usr/share/java/maven-resolver/maven-resolver-api.jar from install of maven-resolver-api-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-api.pom from install of maven-resolver-api-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-resolver/maven-resolver-util.jar from install of maven-resolver-util-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-util.pom from install of maven-resolver-util-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-resolver/maven-resolver-spi.jar from install of maven-resolver-spi-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-spi.pom from install of maven-resolver-spi-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/org.eclipse.sisu.inject.jar from install of sisu-inject-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/org.eclipse.sisu.inject.pom from install of sisu-inject-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/org.eclipse.sisu.plexus.jar from install of sisu-plexus-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/org.eclipse.sisu.plexus.pom from install of sisu-plexus-1:0.3.3-6.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package sisu-0.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-resolver/maven-resolver-impl.jar from install of maven-resolver-impl-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-resolver/maven-resolver-impl.pom from install of maven-resolver-impl-1:1.1.1-2.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-resolver-1.4.1-3.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/java/maven-wagon/provider-api.jar from install of maven-wagon-provider-api-0:3.1.0-1.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-wagon-3.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n  file /usr/share/maven-poms/maven-wagon/provider-api.pom from install of maven-wagon-provider-api-0:3.1.0-1.module_el8.0.0+39+6a9b6e22.noarch conflicts with file from package maven-wagon-3.3.4-2.module_el8.3.0+568+0c23fd64.noarch\n----------------------------------------------------------------------------------------------------------\n\n\n\n\nTrying to build new version of maven with fix to known bug in it: https://bugzilla.redhat.com/show_bug.cgi?id=1897375\n\nmaven - c8-stream-3.6\n    No matching package to install: 'mvn(org.codehaus.modello:modello-maven-plugin) &gt;= 1.10.0'\n    No matching package to install: 'mvn(org.mockito:mockito-core) &gt;= 2'\n    No matching package to install: 'mvn(org.xmlunit:xmlunit-core)'\n    No matching package to install: 'mvn(org.xmlunit:xmlunit-matchers)'\n    dependency - slf4j-sources - produced by 'slf4j' branch c8-stream-3.6 - depends on maven??\n</code></pre> </p>"},{"location":"archive/legacy/external_package_space/#dependencies-that-we-need-to-find-packages-for","title":"Dependencies that we need to find packages for:","text":"<pre><code>## Dependencies I'm not sure about, and suggested(?) packages that might provide them:\n## (need to investigate these, and when found, add their packages to the list above)\n## Listed as dependency first, then possible package that it comes from after:\n\neclipse-pde  -&gt;  eclipse ??\n\nhibernate-jpa-2.0-api ??\nhsqldb -&gt; hsqldb-lib ??\n\npkgconfig(wayland-eglstream) ????\npkgconfig(wayland-eglstream-protocols) ????\nspringframework-beans ????\nqt5-qtbase-doc   qt5-qbase (?)\n\nmvn(avalon-framework:avalon-framework-api)   avalon-framework ??\nmvn(avalon-framework:avalon-framework-impl)  avalon-framework ??\n\nmvn(ch.qos.logback:logback-classic) ????\n\nmvn(com.fasterxml.jackson:jackson-base:pom:) jackson, or fasterxml-oss-partent ??\nmvn(com.fasterxml.jackson:jackson-parent:pom:) jackson, or fasterxml-oss-partent ??\n\nmvn(com.googlecode.json-simple:json-simple)   ????\nmvn(com.google.code.maven-replacer-plugin:replacer)  replacer ??\n\nmvn(com.jcraft:jsch.agentproxy.connector-factory) jsch ??\nmvn(com.jcraft:jsch.agentproxy.jsch)  jsch ??\n\nmvn(dom4j:dom4j)  -&gt; dom4j\n\nmvn(io.prometheus:simpleclient)  prometheus-simpleclient-java\nmvn(io.prometheus:simpleclient_common)  prometheus-simpleclient-java\nmvn(io.prometheus:simpleclient_hotspot)  prometheus-simpleclient-java\nmvn(io.prometheus:simpleclient_httpserver)  prometheus-simpleclient-java\n\nmvn(javax.ws.rs:javax.ws.rs-api)  glassfish-jax-rs-api ??\n\nmvn(logkit:logkit)  avalon-logkit ??\n\nmvn(net.sf.ehcache:ehcache-core)  ????\nmvn(net.spy:spymemcached)  ????\n\nmvn(org.apache.maven.scm:maven-scm-api)  maven-scm ??\nmvn(org.apache.maven.scm:maven-scm-manager-plexus)  maven-scm ??\n\nmvn(org.codehaus.modello:modello-maven-plugin)  modello ??\n\n\nmvn(org.mockito:mockito-core)  mockito ??\nmvn(org.xmlunit:xmlunit-core)  xmlunit\nmvn(org.xmlunit:xmlunit-matchers)  xmlunit\nmvn(org.yaml:snakeyaml)  snakeyaml\n</code></pre>"},{"location":"archive/legacy/faq/","title":"Frequently Asked Questions","text":"<p>Hello! You were likely directed here as an answer to your question in our Mattermost, IRC channels, or forums. It is likely your question is asked frequently. Below, we have the most common questions we receive and their accompanying answers.</p>"},{"location":"archive/legacy/faq/#what-license-is-rocky-linux-released-under","title":"What license is Rocky Linux released under?","text":"<p>3-Clause BSD</p>"},{"location":"archive/legacy/faq/#where-is-the-code-andor-build-instructions-for-your-docker-image","title":"Where is the \"code\" and/or build instructions for your docker image?","text":"<p>There is no \"code\" for the docker image we provide (as of Rocky Linux 8). A rootfs archive is created using imagefactory and extracted within a scratch container.</p> <p>The docker file is located here</p>"},{"location":"archive/legacy/faq/#how-is-rocky-linux-made","title":"How is Rocky Linux made?","text":"<p>Skip, a member of Release Engineering, has been spending time doing a write up of how Rocky Linux 8 is currently built, which includes information on the various tools (koji, pungi, MBS, git, et al) and how they all come together. You can view it here</p>"},{"location":"archive/legacy/hidden_deps/","title":"Hidden / External Dependencies","text":"<p>This page lists all hidden dependencies required to build the repos and what order they should be built in.</p>"},{"location":"archive/legacy/hidden_deps/#what-is-a-hidden-dependency","title":"What is a Hidden Dependency?","text":"<p>This is a general term for any package that is required, but not available in any CentOS repo.  However, these packages are available from git.centos.org alongside \"normal\" packages found in the repos.</p> <p>A further complication: there are hidden dependencies that depend on other hidden dependencies.</p> <p>For example, the well-known package bind depends on kyua, which is not present in any CentOS/RHEL repository.</p> <p>Building kyua depends on having lutok, which in turn depends on having atf.  None of these are present in a \"normal\" CentOS repo. (BaseOS/AppStream/PowerTools/Extras/HA/etc.)</p> <p>This can get extreme, with some packages requiring 5 (or more!) layers of these \"hidden\" deps.</p>"},{"location":"archive/legacy/hidden_deps/#when-should-these-be-built","title":"When should these be built?","text":"<p>That's an open question.  A safe time to build these would be starting after \"Build Pass 6\" (or possibly 7).  A strategy might be to build these completely on their own, or insert them into the \"normal package\" passes and build them concurrently.  Best way to do this is still an open question.</p>"},{"location":"archive/legacy/hidden_deps/#documenting","title":"Documenting","text":"<p>In an effort to document this, we are compiling layered \"lists\" of these hidden dependencies.  Very similar to the work being done under \"Build_Order\" to determine dependencies of the main repos.  You can almost think of these dependencies as another repo, similar to BaseOS/AppStream/PowerTools/etc.</p> <p>These lists are numbered, and are in order of dependency.  You need to build it smallest to largest.  For example:  In order to build the packages from list 98, you need the ones that were built in list 97. And list 97 depends on the products from list 96, etc.</p> <p>(The numbers are arbitrary and don't start at 1, so new layers don't require re-labeling of all the lists)</p> <p></p>"},{"location":"archive/legacy/hidden_deps/#the-lists","title":"The lists:","text":"<p>External Build List #92: | Package Name | CentOS git Branch | |:------------|-------------------------| | buildsys-macros | c8 | | centpkg-minimal | c8 |</p> <p>External Build List #93:</p> Package Name CentOS git Branch javapackages-tools c8-stream-201902  (note: bootstrap java tools.  contains a bunch of pre-compiled RPMs to satisfy depdencies) 04/08/2021 - pulled out of repo. Causing conflicts. perl-File-Find-Object-Rule c8 <p></p> <p>External Build List #94:</p> Package Name CentOS git Branch perl-Test-TrailingSpace c8 perl-XML-Filter-BufferText c8 <p></p> <p>External Build List #95:</p> Package Name CentOS git Branch perl-XML-SAX-Writer c8 perl-XML-SemanticDiff c8 <p></p> <p>External Build List #96:</p> Package Name CentOS git Branch perl-Class-Accessor-Chained c8 perl-DateTime-Event-Recurrence c8 perl-Module-Install-GithubMeta c8 perl-Set-Infinite c8 perl-strictures c8 perl-Sub-Quote c8 perl-Test-XML c8 <p></p> <p>External Build List #97:</p> Package Name CentOS git Branch perl-Class-ReturnValue c8 perl-Data-ICal c8 perl-DateTime-Event-ICal c8 perl-DateTime-Set c8 perl-File-Find-Object-Rule c8 perl-Moo c8 perl-Text-vFile-asData c8 perl-Tie-DataUUID c8 perl-UNIVERSAL-require c8 perl-XML-Fast c8 perl-XML-Spice c8 <p></p> <p>External Build List #98:</p> Package Name CentOS git Branch atf c8 javapoet c8 perl-Class-Inner c8 perl-Convert-Base64 c8 perl-CPAN-Changes c8 perl-Data-ICal-TimeZone c8 perl-DateTime-Format-ICal c8 perl-File-LibMagic c8 perl-Net-DAVTalk c8 perl-Text-LevenshteinXS c8 perl-Text-VCardFast c8 rubygem-coderay c8 tesla-polyglot c8 <code>--with jp_minimal</code> <p></p> <p>External Build List #99:</p> Package Name CentOS git Branch auto c8 beakerlib c8 centos-bookmarks c8 console-setup c8 datefudge c8 docbook5-style-xsl c8 eclipse-license2 c8 fasterxml-oss-parent c8-stream-10.6 felix-gogo-parent c8 felix-gogo-runtime c8 fonttools c8 gcab c8 imaptest c8 javapackages-tools c8-stream-201902/javapackages-tools-5.3.1-7.module+el8.2.0+5555+73059ce4 latexmk c8 libabigail c8 lutok c8 objectweb-asm (7.2) c8-stream-201902 objectweb-asm (7.3) c8-stream-rhel8 <code>--without junit5</code> (needed to build byte-buddy) opentest4j c8 pam_wrapper c8 perl-BSD-Resource c8 perl-Config-IniFiles c8 perl-Font-TTF c8 perl-Mail-IMAPTalk c8 perl-Mail-JMAPTalk c8 perl-Math-Int64 c8 perl-Net-CalDAVTalk c8 perl-NNTPClient c8 perl-PerlIO-gzip c8 perl-Test-Inter c8 perl-Test-Unit c8 perl-XML-Generator c8 polkit-gnome c8 psutils c8 python3-mallard-ducktype c8 python-blinker c8 python-cryptography-vectors c8 python-httpretty c8 python-pretend c8 rubygem-kramdown c8 sassc c8 shrinkwrap c8 ttembed c8 ttfautohint c8 tycho-extras c8 univocity-parsers c8 wordnet c8 xmlgraphics-commons c8-stream-rhel8 (requires workaround setting JAVA_HOME ) xpp3 c8 <p></p> <p>External Build List #100:</p> Package Name CentOS git Branch apache-commons-el c8 apiguardian c8 base64coder c8 batik c8-stream-rhel8-bootstrap byte-buddy c8-stream-201902 cbi-plugins c8 decentxml c8 ecj c8 eclipse-ecf c8 <code>--with bootstrap</code> eclipse-emf c8 <code>--with bootstrap</code> felix-gogo-command c8 felix-gogo-shell c8 felix-scr c8 golang-github-cpuguy83-go-md2man c8-stream-1.0 google-gson c8 hamcrest c8-stream-201902 icu4j c8-stream-rhel8 jackson-parent c8-stream-10.6 jboss-modules c8 jetty c8 <code>--with jp_minimal</code> junit5 c8 kyua c8 kxml c8 lucene c8 <code>--with jp_minimal</code> msv c8-stream-10.6 ocaml-fileutils c8 perl-File-MMagic c8 perl-List-Pairwise c8 perl-File-Slurp-Tiny c8-stream-5.26 perl-Module-Install-ExtraTests c8 sat4j c8 xml-maven-plugin c8 <p>External Build List #101:</p> Package Name CentOS git Branch catch c8 catch1 c8 ceres-solver c8 classloader-leak-test-framework c8 eclipse c8 <code>--with bootstrap</code> glassfish-jax-rs-api c8-stream-10.6 glslang c8 jackson-bom c8-stream-10.6 jarjar c8 java-comment-preprocessor c8 jboss-logmanager c8 maven-verifier-plugin c8 mdds (1.3) c8 mdds (1.4) c8s (-b imports/c8s/mdds-1.4.3-1.el8) mingw-w64-tools c8 mingw-libxml2 c8 mingw-pdcurses c8 mockito (2) c8-stream-201902 ocaml-calendar c8 ocaml-csv c8 ocaml-curses c8 ocaml-gettext c8 ocaml-libvirt c8 ocaml-xml-light c8 passivetex c8 PEGTL c8 perl-B-Hooks-EndOfScope c8 perl-DateTime-Format-IBeat c8 perl-Devel-Hide c8 perl-Encode-IMAPUTF7 c8 perl-ExtUtils-Config c8 perl-ExtUtils-Helpers c8 perl-ExtUtils-InstallPaths c8 perl-File-ShareDir-Install c8 perl-Test-File-ShareDir c8 perl-IO-CaptureOutput c8 perl-Crypt-OpenSSL-Guess c8 perl-Module-Install c8 perl-Module-Install-AuthorRequires c8 perl-Module-Install-AutoLicense c8 perl-Module-Install-ManifestSkip c8 perl-Module-Build-Tiny c8 perl-Module-Package c8 perl-Module-Manifest-Skip c8 perl-Net-CardDAVTalk c8 perl-Net-DNS-Resolver-Mock c8 perl-Net-DNS-Resolver-Programmable c8 perl-Net-IDN-Encode c8 perl-Net-LibIDN c8 perl-Object-Deadly c8 perl-Test-FailWarnings c8 perl-Test-File-ShareDir c8 perl-Test-InDistDir c8 perl-Test-MockModule c8 perl-Test-Needs c8 perl-Test-RequiresInternet c8 perl-Test-Without-Module c8 perl-Test2-Plugin-NoWarnings c8 perl-XML-XPathEngine c8 prometheus-simpleclient-java c8 properties-maven-plugin c8 python-bottle c8 python-hs-dbus-signature c8 python-pluggy c8-stream-3.8 <code>--without tests</code> python-sphinx c8 qt5-doc c8 relaxngcc c8-stream-10.6 replacer c8 screen c8 SFML c8 snakeyaml c8s spirv-headers c8 tesseract c8 ucpp c8 unicode-emoji c8 python-docutils c8 rapidjson c8-stream-8.0 rubygem-thread_order c8 perl-Expect c8-stream-5.26 perl-Perl-Version c8-stream-5.26 perl-Sort-Versions c8-stream-5.26 perl-Test-Output c8-stream-5.26 tycho c8-stream-rhel8-bootstrap (required a spec patch to build )"},{"location":"archive/legacy/koji_bootstrap/","title":"Koji Bootstrap (setup)","text":"<p>Usually builds use the internal Koji repository to satisfy dependencies. To start with, there are no packages so we need to bootstrap (as some packages needs themselves to build themselves).</p>"},{"location":"archive/legacy/koji_bootstrap/#tags-and-build-tags","title":"Tags and build tags","text":"<p>Create new tags that will be the new distribution. Let's call them rocky. <pre><code>koji add-tag dist-rocky8\nkoji add-tag --parent dist-rocky8 --arches=i686,x86_64,ppc64le,aarch64 -x mock.yum.module_hotfixes=1 dist-rocky8-build\nkoji add-target dist-rocky8 dist-rocky8-build dist-rocky8\n</code></pre></p>"},{"location":"archive/legacy/koji_bootstrap/#external-repositories","title":"External repositories","text":"<p>Repositories from Sherif: <pre><code>koji add-external-repo -m bare -t dist-rocky8-build centos-8-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os/\nkoji add-external-repo -m bare -t dist-rocky8-build centos-8-debuginfo-external http://debuginfo.centos.org/8/\\$arch/\n</code></pre></p>"},{"location":"archive/legacy/koji_setup/","title":"Overview","text":"<p>This how-to is WIP and based on https://docs.pagure.org/koji/</p> <p>The setup is as follows: * CentOS-8 installed * Firewall allowing communication between the hosts * Public network for access and private network for koji and kerberos communication between hosts * koji.gnulab.org/10.10.10.2 hosts koji, kojiweb, koji-hub,kojira, kerberos server, kerberos workstation \"for testing\" * builder1.gnulab.org/10.10.10.3 hosts kojid building daemon and kerberos workstation \"for testing\" * Your location machine should have kerberos workstation as well and a browser configured to use kerberos * SSL is setup for web facing services using let's encrypt, you need to sort this one out</p>"},{"location":"archive/legacy/koji_setup/#getting-kerberos-up-and-running","title":"Getting kerberos up and running","text":"<p>!!!THIS IS A QUICK GUIDE FOR TESTING ONLY!!!</p> <p>You will need to install kerberos for this setup, however I assume IPA will be in place and will be used</p> <p>On the koji.gnulab.org machine do the following: * Install he needed packages: <code>dnf install krb5-server.x86_64 krb5-workstation.x86_64 -y</code> * Edit /etc/krb5.conf to look like that <pre><code># To opt out of the system crypto-policies configuration of krb5, remove the\n# symlink at /etc/krb5.conf.d/crypto-policies which will not be recreated.\nincludedir /etc/krb5.conf.d/\n\n[logging]\n    default = FILE:/var/log/krb5libs.log\n    kdc = FILE:/var/log/krb5kdc.log\n    admin_server = FILE:/var/log/kadmind.log\n\n[libdefaults]\n    dns_lookup_realm = false\n    ticket_lifetime = 24h\n    renew_lifetime = 7d\n    forwardable = true\n    rdns = false\n    pkinit_anchors = FILE:/etc/pki/tls/certs/ca-bundle.crt\n    spake_preauth_groups = edwards25519\n    default_realm = GNULAB.ORG\n    default_ccache_name = KEYRING:persistent:%{uid}\n\n[realms]\n GNULAB.ORG = {\n     kdc = koji.gnulab.org\n     admin_server = koji.gnulab.org\n }\n\n[domain_realm]\n .gnulab.org = GNULAB.ORG\n gnulab.org = GNULAB.ORG\n</code></pre> Where GNULAB.ORG is your realm * Create kerberos DB and create your super secrete password for the DB: <code>kdb5_util create -s</code> * Edit kerberos ACL /var/kerberos/krb5kdc/kadm5.acl to look as follows: <pre><code>*/admin@GNULAB.ORG  *\n</code></pre> * Create the local admin: <code>kadmin.local -q \"addprinc admin/admin\"</code> * Start you services: <code>systemctl enable krb5kdc --now &amp;&amp; systemctl enable kadmin --now</code></p>"},{"location":"archive/legacy/koji_setup/#the-principles","title":"The principles","text":"<p>koji needs few principles in kerberos for authentication as follows:</p> <ul> <li>host/kojihub@GNULAB.ORG: Used by the koji-hub server when communicating with the koji client</li> <li>HTTP/kojiweb@GNULAB.ORG: Used by the koji-web server when performing a negotiated Kerberos authentication with a web browser. This is a service principal for Apache\u2019s mod_auth_gssapi.</li> <li>koji/kojiweb@GNULAB.ORG: Used by the koji-web server during communications with the koji-hub. This is a user principal that will authenticate koji-web to Kerberos as \u201ckoji/kojiweb@GNULAB.ORG\u201d. Koji-web will proxy the mod_auth_gssapi user information to koji-hub (the ProxyPrincipals koji-hub config option).</li> <li>koji/kojira@GNULAB.ORG: Used by the kojira server during communications with the koji-hub</li> <li>compile/builder1.gnulab.org@GNULAB.ORG: Used on builder1 to communicate with the koji-hub. This is a user principal that will authenticate koji-builder to Kerberos as \u201ccompile/builder1.gnulab.org@GNULAB.ORG\u201d. Each builder host will have its own unique Kerberos user principal to authenticate to the hub.</li> <li>snagy@GNULAB.ORG: for my testing and package owner</li> <li>HTTP/koji.gnulab.org@GNULAB.ORG: to allow the client to use HTTP \"I am not sure\"</li> </ul> <p>And we can start creating the needed principles: * run <code>kadmin.local</code> then the following: <pre><code>addprinc host/kojihub@GNULAB.ORG\naddprinc HTTP/kojiweb@GNULAB.ORG\naddprinc koji/kojiweb@GNULAB.ORG\naddprinc koji/kojira@GNULAB.ORG\naddprinc HTTP/koji.gnulab.org@GNULAB.ORG\naddprinc snagy@GNULAB.ORG\naddprinc kojiadmin@GNULAB.ORG\n</code></pre></p> <ul> <li>Now we will need to create keytab, keytab is used for non-password auth, also I guess once you do that, you won't be able to use passwords, but that is okay since most of those are services principals, not that you can use multiple files if you need to, run <code>kadmin.local</code> and then: <pre><code>    ktadd   -k /etc/koji.keytab host/kojihub@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab HTTP/kojiweb@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab koji/kojira@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab koji/kojiweb@GNULAB.ORG\n    ktadd   -k /etc/koji.keytab HTTP/koji.gnulab.org@GNULAB.ORG\n</code></pre></li> <li>Validation done by running <code>klist -k -t /etc/koji.keytab</code></li> <li>Run change permissions: <code>chmod 644 /etc/koji.keytab</code> <pre><code>root# klist -k -t /etc/koji.keytab\nKeytab name: FILE:/etc/koji.keytab\nKVNO Timestamp           Principal\n---- ------------------- ------------------------------------------------------\n   2 12/19/2020 15:00:53 koji/kojira@GNULAB.ORG\n   2 12/19/2020 15:00:53 koji/kojira@GNULAB.ORG\n   2 12/19/2020 15:01:08 koji/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:08 koji/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:14 HTTP/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:14 HTTP/kojiweb@GNULAB.ORG\n   2 12/19/2020 15:01:20 host/kojihub@GNULAB.ORG\n   2 12/19/2020 15:01:20 host/kojihub@GNULAB.ORG\n   2 12/19/2020 15:38:52 HTTP/koji.gnulab.org@GNULAB.ORG\n   2 12/19/2020 15:38:52 HTTP/koji.gnulab.org@GNULAB.ORG\n</code></pre></li> </ul>"},{"location":"archive/legacy/koji_setup/#setting-up-koji-echosystem","title":"Setting up koji echosystem","text":"<p>We will start by setting up the DB, koji-hub, kojiweb and then kojira</p>"},{"location":"archive/legacy/koji_setup/#the-database","title":"The Database","text":"<p>On the main server koji.gnulab.org, do the following: * We need to install postgreqsl: <code>dnf install postgresql-server -y</code> * Init postgresql db: <code>postgresql-setup --initdb --unit postgresql</code> * Start the service: <code>systemctl enable postgresql --now</code> * Adding Koji user: <pre><code>useradd koji\npasswd koji\n</code></pre> and set a random complex password * Lets create koji DB user: <pre><code>su - postgres\ncreateuser --no-superuser --no-createrole --no-createdb koji\ncreatedb -O koji koji\npsql -c \"alter user koji with encrypted password 'mysupercomplexpassword';\"\n</code></pre> * Let's setup koji: <code>dnf install koji -y</code> * load the DB into postgresql:     <code>su - koji   psql koji koji &lt; /usr/share/doc/koji*/docs/schema.sql</code> * Postgresql permissions Since my koji server lives with the postgresql, I am using socket communication instead of TCP/IP * Edit /var/lib/pgsql/data/pg_hba.conf as follows \"Order is important\": <pre><code># \"local\" is for Unix domain socket connections only\nlocal   koji        koji                    trust\nlocal   all             all                                     peer\n</code></pre> * Reload postgresql: <code>systemctl reload postgresql</code> * Create koji authenticiation for kerberos: <pre><code>su - koji\n\npsql &lt;&lt;EOF\nwith user_id as (\ninsert into users (name, status, usertype) values ('kojiadmin', 0, 0) returning id\n)\ninsert into user_krb_principals (user_id, krb_principal) values (\n(select id from user_id),\n'kojiadmin@GNULAB.ORG');\nEOF\n</code></pre> * Give the user admin permissions: <pre><code>    su - koji\n    psql\n    koji=&gt; select * from users;\n    koji=&gt; insert into user_perms (user_id, perm_id, creator_id) values (\"id of user inserted above\", 1, \"id of user inserted above\");\n</code></pre></p>"},{"location":"archive/legacy/koji_setup/#mntkoji-and-nfs","title":"/mnt/koji and NFS","text":"<ul> <li>Create the koji file system skeleton:</li> <li>Setup NFS and apache : <code>dnf install nfs-utils httpd -y</code> <pre><code>cd /mnt\nmkdir koji\ncd koji\nmkdir {packages,repos,work,scratch,repos-dist}\nchown apache.apache *\n</code></pre></li> <li>Start the service: <code>systemctl enable --now nfs-server</code></li> <li>Edit /etc/exports as follows: <pre><code>/mnt/koji 10.10.10.3(ro,sync,no_all_squash,root_squash)\n</code></pre></li> <li>Export the filesystem: <code>exportfs -ra</code></li> <li>View current state: <code>exportfs -v</code></li> <li>On the client install the NFS client packages: <code>dnf install nfs-utils nfs4-acl-tools -y</code></li> <li>Create the local dir: <code>mkdir /mnt/koji</code></li> <li>Mount the NFS: <code>mount -t nfs 10.10.10.2:/mnt/koji /mnt/koji</code></li> </ul>"},{"location":"archive/legacy/koji_setup/#kojihub","title":"Kojihub","text":"<ul> <li>Install kojihub <code>dnf install koji-hub mod_ssl -y</code></li> <li>Enable postgresql sweep function: <code>systemctl enable --now koji-sweep-db.timer</code></li> <li>Enable kerberos auth in /etc/httpd/conf.d/kojihub.conf by uncomment the section below as follows: <pre><code># uncomment this to enable authentication via GSSAPI\n &lt;Location /kojihub/ssllogin&gt;\n         AuthType GSSAPI\n         AuthName \"GSSAPI Single Sign On Login\"\n         GssapiCredStore keytab:/etc/koji.keytab\n         Require valid-user\n &lt;/Location&gt;\n</code></pre></li> <li>koji-hub configurations as follows in /etc/koji-hub/hub.conf: <pre><code>[hub]\n\nDBName = koji\nDBUser = koji\nKojiDir = /mnt/koji\nAuthPrincipal = host/kojihub@GNULAB.ORG\nAuthKeytab = /etc/koji.keytab\nProxyPrincipals = koji/kojiweb@GNULAB.ORG\nHostPrincipalFormat = compile/%s@GNULAB.ORG\nLoginCreatesUser = On\nKojiWebURL = https://koji.gnulab.org/koji\nNotifyOnSuccess = True\n</code></pre></li> <li>Install selinux policyutils: <code>dnf install policycoreutils-python-utils -y</code></li> <li>Lets fix some selinux stuff: <pre><code>    setsebool -P allow_httpd_anon_write=1\n    setsebool -P httpd_can_network_connect 1\n    setsebool -P httpd_use_nfs=1\n    semanage fcontext -a -t public_content_rw_t \"/mnt/koji(/.*)?\"\n    restorecon -r -v /mnt/koji\n  ```\n## Configure koji cli client\n* edit **/etc/koji.conf** as follows:\n</code></pre> [koji]</li> </ul> <p>server = https://koji.gnulab.org/kojihub weburl = https://koji.gnulab.org/koji topurl = https://koji.gnulab.org/ topdir = /mnt/koji authtype = kerberos krb_rdns = false plugins = runroot use_fast_upload = yes <pre><code>* restart httpd: ```systemctl restart httpd```\n* Test by running the following on koji server:\n    * kinit -p kojiadmin@GNULAB.ORG\n    * koji moshimoshi\n</code></pre> [root@koji ~]# kinit -p kojiadmin@GNULAB.ORG Password for kojiadmin@GNULAB.ORG: [root@koji ~]# koji moshimoshi hyl\u00f4, kojiadmin!</p> <p>You are using the hub at https://koji.gnulab.org/kojihub Authenticated via GSSAPI <pre><code>## Kojiweb\n* Install kojiweb: ```dnf install koji-web -y```\n* Edit **/etc/httpd/conf.d/kojiweb.conf** to allow kerberos:\n</code></pre></p>"},{"location":"archive/legacy/koji_setup/#uncomment-this-to-enable-authentication-via-kerberos","title":"uncomment this to enable authentication via Kerberos","text":"<p>      AuthType GSSAPI      AuthName \"Koji Web UI\"      GssapiCredStore keytab:/etc/koji.keytab      Require valid-user      ErrorDocument 401 /koji-static/errors/unauthorized.html  </p> <p><pre><code>* Edit Kojiweb configuration **/etc/kojiweb/web.conf**\n</code></pre> [web] SiteName = koji</p> <p>KojiHubURL = https://koji.gnulab.org/kojihub KojiFilesURL = https://koji.gnulab.org/kojifiles</p> <p>WebPrincipal = koji/kojiweb@GNULAB.ORG WebKeytab = /etc/koji.keytab WebCCache = /var/tmp/kojiweb.ccache KrbService = koji.gnulab.org KrbServerRealm = GNULAB.ORG LoginTimeout = 72 Secret = asdasdf12313ewdasfq234f LibPath = /usr/share/koji-web/lib LiteralFooter = True <pre><code>* restart apache: ```systemctl reload httpd```\n## Setting up the builder / kojid / koji-builder\nThis will configuration will be on the building node(s)\n\n* Install koji-builder: ```dnf install koji-builder -y```\n* Edit **/etc/kojid/kojid.conf** as follows:\n</code></pre> [kojid]</p> <p>topdir=/mnt/koji workdir=/tmp/koji server=https://koji.gnulab.org/kojihub topurl=https://koji.gnulab.org/kojifiles ; those are for building package from git.c.o and Mustafa's git allowed_scms=git.centos.org:/:off:get_sources.sh gitlab.rockylinux.bycrates.org:/:off:/bin/sh,/usr/bin/srpmproc_wrapper host_principal_format=compile/%s@GNULAB.ORG <pre><code>On koji main server, run the following commands:\n* Add the new builder:  ```koji add-host builder1.gnulab.org  x86_64```\n* Add the createrepo channel: ```koji add-host-to-channel builder1.gnulab.org createrepo```\n* I did adjust the capacity since it is a small machine: ```koji edit-host --capacity=8 builder1.gnulab.org```\n* Note, by default kojid uses DNS to talk to koji-hub, so you need to have SRV record in your DNS as follows:\n</code></pre> _kerberos._udp    IN SRV  10 100 88 kerberos.GNULAB.ORG. <pre><code>* Kojid looks for **/etc/kojid/kojid.keytab** by default, so you need to create a file with compile principle as above and place it in the right location on builder node(s)\n</code></pre> kadmin.local addprinc compile/builder1.gnulab.org@GNULAB.ORG ktadd -k /tmp/kojid.keytab compile/builder1.gnulab.org@GNULAB.ORG <pre><code>On the builder node, restart kojid: ```systemctl enable kojid --now```\n\n## Kojira\n\n* Install koji-utils: ```dnf install koji-utils -y```\n* Add kojira user and give it permission for repo\n</code></pre> koji add-user koji/kojira koji grant-permission repo koji/kojira <pre><code>* Edit **/etc/kojira/kojira.conf** as following:\n</code></pre> [kojira]</p> <p>server=https://koji.gnulab.org/kojihub topdir=/mnt/koji logfile=/var/log/kojira.log principal = koji/kojira@GNULAB.ORG keytab = /etc/koji.keytab <pre><code>* Start Kojira service: ```systemctl enable kojira --now```\n\n# Koji bootstrapping\n\nI went with the external repo method to bootstrap the setup, so I added external repos and create the following tags and targets, this work is based on: https://docs.pagure.org/koji/external_repo_server_bootstrap/\n\nOn the main node, run the following:\n* Add your final dist tag: ```koji add-tag dist-rocky8```\n* Create the build tag:\n```koji add-tag --parent dist-rocky8 --arches \"x86_64\" -x mock.yum.module_hotfixes=1 dist-rocky8-build```\n\n* Add the external repos, I hard coded the ARCH, but you can use \\$arch instaed of x86_64 in the repo URL:\n</code></pre> koji add-external-repo -m bare -t dist-rocky8-build centos-8-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/ koji add-external-repo -m bare -t dist-rocky8-build centos-8-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os koji add-external-repo -m bare -t dist-rocky8-build centos-8-debuginfo-external http://debuginfo.centos.org/8/\\$arch/ <pre><code>* I also created a small package for centospkg-minimal and srpmproc and create local repo, so adding that too:\n</code></pre> koji add-external-repo -m bare -t dist-rocky8-build centos-8-local-repo-external https://koji.gnulab.org/localrepo/\\$arch/ <pre><code>* Add the targets: ```koji add-target dist-rocky8 dist-rocky8-build dist-rocky8```\n* Create the bootstrapping groups for build and srpm-build\n</code></pre> koji add-group dist-rocky8-build build koji add-group dist-rocky8-build srpm-build <pre><code>* Add the bootstrapping packages:\n</code></pre> koji add-group-pkg dist-rocky8-build build bash buildsys-macros-el8 bzip2 centos-release centpkg-minimal coreutils cpio diffutils findutils gawk gcc gcc-c++ grep gzip info make module-build-macros patch redhat-rpm-config rpm-build scl-utils-build sed shadow-utils tar unzip util-linux which xz git srpmproc koji add-group-pkg dist-rocky8-build srpm-build bash buildsys-macros-el8 centos-release centpkg-minimal git redhat-rpm-config rpm-build scl-utils-build shadow-utils system-release srpmproc <pre><code>* Regenerating the repos ```koji regen-repo dist-rocky8-build```\n\n# Running a test\n\nI ran the following test to build package from git.centos.org:\n\n```koji add-user snagy```\n```koji add-pkg --owner snagy dist-rocky8 python36``` \"need to check if this is needed\"\n</code></pre> koji build dist-rocky8 'git+https://git.centos.org/git/rpms/python36.git?#f900ab6403fbd9c22e59f5d463fee210b3278fb3' ``` *  Results at: https://koji.gnulab.org/koji/taskinfo?taskID=321</p>"},{"location":"archive/legacy/mbs_installation/","title":"Overview","text":"<p>This how-to is WIP and based on https://pagure.io/fm-orchestrator</p> <p>The setup is as follows: * Currently we are testing mbs 2.32 * CentOS-8 installed * Firewall allowing communication between the hosts * Public network for access and private network for koji, psql and kerberos communication between hosts * mbs.gnulab.org/10.10.10.4 hosts mbs and fedmsg * SSL is setup for web facing services using let's encrypt and there is a directory services setup, you need to sort this one out</p>"},{"location":"archive/legacy/mbs_installation/#installing-mbs-and-fedmsg","title":"Installing mbs and fedmsg","text":"<p>!!!THIS IS A QUICK GUIDE FOR TESTING ONLY!!! * Currently we are installing using pip from the source, however the latest version is available at: https://copr.fedorainfracloud.org/coprs/nalika/rockylinux-tools/packages/ * Enable the current temp rockylinux-tools repo by running <code>dnf copr enable nalika/rockylinux-tools</code> * Install the needed packages: <code>dnf install epel-release -y &amp;&amp; dnf install fedmsg python3-gssapi git httpd mod_ssl python3-mod_wsgi python3-solv python3-pungi python3-psycopg2 mod_auth_gssapi -y</code> <pre><code>git clone https://pagure.io/fm-orchestrator.git\ncd fm-orchestrator\ngit checkout v2.32.0\npip3 install .\n</code></pre></p>"},{"location":"archive/legacy/mbs_installation/#starting-fedmsg","title":"Starting fedmsg","text":"<p>We need fedmsg-hub and fedmsg-relay to get things up and running \"as far as I can tell\" but I disable fedora's incoming messages and message signing * Edit /etc/fedmsg.d/endpoints.py and comment out <code>\"tcp://hub.fedoraproject.org:9940\"</code> * Edit /etc/fedmsg.d/module_build_service.py as following \"leave everything else as is\": <pre><code>            # \"tcp://stg.fedoraproject.org:9940\"\n        ]\n    },\n    # Start of code signing configuration\n    'sign_messages': False,\n    'validate_signatures': False,\n</code></pre> * Edit /etc/fedmsg.d/ssl.py and make sure validate_signatures is set to false <pre><code>config = dict(\n    sign_messages=False,\n    validate_signatures=False,\n</code></pre> * Edit /etc/fedmsg.d/base.py and set the <code>topic_prefix=\"org.gnulab\"</code> and <code>environment=\"prod\"</code> * Start fedmsg-hub and fedmsg-relay service <pre><code>systemctl enable fedmsg-hub --now\nsystemctl enable fedmsg-relay --now\n</code></pre></p>"},{"location":"archive/legacy/mbs_installation/#apache-configuration-for-mbs-frontend","title":"Apache configuration for mbs-frontend","text":"<ul> <li>Create a new file /etc/httpd/conf.d/mbs.conf with the following: <pre><code>&lt;IfModule mod_ssl.c&gt;\n&lt;VirtualHost *:443&gt;\n  ServerName mbs.gnulab.org\n  WSGIDaemonProcess mbs user=mbs group=mbs threads=5\n    WSGIScriptAlias / /etc/module-build-service/mbs.wsgi\n  WSGIPassAuthorization on\n    &lt;Directory /etc/module-build-service&gt;\n        WSGIProcessGroup mbs\n        WSGIApplicationGroup %{GLOBAL}\n        Require all granted\n    &lt;/Directory&gt;\n    &lt;Location /&gt;\n        AuthType GSSAPI\n        AuthName \"GSSAPI Single Sign On Login\"\n        GssapiCredStore keytab:/etc/koji.keytab\n        Require valid-user\n    &lt;/Location&gt;\n\n\nSSLCertificateFile /etc/letsencrypt/live/mbs.gnulab.org/fullchain.pem\nSSLCertificateKeyFile /etc/letsencrypt/live/mbs.gnulab.org/privkey.pem\nInclude /etc/letsencrypt/options-ssl-apache.conf\n&lt;/VirtualHost&gt;\n&lt;/IfModule&gt;\n</code></pre></li> <li>Create the wsgi file /etc/module-build-service/mbs.wsgi as follows: <pre><code>import logging\nlogging.basicConfig(level=logging.DEBUG)\nfrom module_build_service import app as application\n</code></pre></li> </ul>"},{"location":"archive/legacy/mbs_installation/#kerberos-settings","title":"Kerberos settings","text":"<ul> <li>Make sure that /etc/krb5.conf as the correct realm and settings as following: <pre><code># To opt out of the system crypto-policies configuration of krb5, remove the\n# symlink at /etc/krb5.conf.d/crypto-policies which will not be recreated.\nincludedir /etc/krb5.conf.d/\n\n[logging]\n    default = FILE:/var/log/krb5libs.log\n    kdc = FILE:/var/log/krb5kdc.log\n    admin_server = FILE:/var/log/kadmind.log\n\n[libdefaults]\n    dns_lookup_realm = false\n    ticket_lifetime = 24h\n    renew_lifetime = 7d\n    forwardable = true\n    rdns = false\n    pkinit_anchors = FILE:/etc/pki/tls/certs/ca-bundle.crt\n    spake_preauth_groups = edwards25519\n    default_realm = GNULAB.ORG\n    default_ccache_name = KEYRING:persistent:%{uid}\n\n[realms]\n GNULAB.ORG = {\n     kdc = koji.gnulab.org\n     admin_server = koji.gnulab.org\n }\n\n[domain_realm]\n .gnulab.org = GNULAB.ORG\n gnulab.org = GNULAB.ORG\n</code></pre></li> </ul>"},{"location":"archive/legacy/mbs_installation/#general-mbss-setup","title":"General mbs's setup","text":"<ul> <li>Create mbs user and set a password for it as following: <pre><code>useradd mbs\npasswd mbs\n</code></pre></li> <li>Fix the permissions for /etc/module-build-service/ to mbs: <code>chown -R mbs:mbs /etc/module-build-service/</code></li> </ul>"},{"location":"archive/legacy/mbs_installation/#postgresql-configuration","title":"Postgresql configuration","text":"<p>I am using the same database server for koji which is hosted on koji.gnulab.org * Create the required access by editing /var/lib/pgsql/data/pg_hba.conf as the following: <pre><code># IPv4 local connections:\nhost    mbs             mbs             10.10.10.4/32           md5\nhost    all             all             127.0.0.1/32            ident\n</code></pre> * Edit /var/lib/pgsql/data/postgresql.conf to allow listening on network <code>listen_addresses = 'localhost,10.10.10.2'</code> * Create mbs pgsql user and database <pre><code>createuser --no-superuser --no-createrole --no-createdb mbs\ncreatedb -O mbs mbs\npsql  -c \"alter user mbs with encrypted password 'mysupersecretepasswordmbs';\"\n</code></pre> * Restart pgsql <code>systemctl restart postgresql</code></p>"},{"location":"archive/legacy/mbs_installation/#mbs-configuration","title":"mbs configuration","text":"<ul> <li>Edit /etc/module-build-service/koji.conf as the follows: <pre><code>[koji]\n\n;configuration for koji cli tool\n\n;url of XMLRPC server\nserver = https://koji.gnulab.org/kojihub\n\n;url of web interface\nweburl = https://koji.gnulab.org/koji\n\n;url of package download site\ntopurl = https://koji.gnulab.org/\nauthtype = kerberos\nkrb_rdns = false\nuse_fast_upload = true\n\n[staging]\nserver = https://koji.gnulab.org/kojihub\nweburl = https://koji.gnulab.org/koji\ntopurl = https://koji.gnulab.org/\nauthtype = kerberos\nkrb_rdns = false\nuse_fast_upload = true\n</code></pre></li> <li>Edit /etc/module-build-service/config.py as follows: <pre><code># -*- coding: utf-8 -*-\n# SPDX-License-Identifier: MIT\nfrom os import environ, path\n\n# FIXME: workaround for this moment till confdir, dbdir (installdir etc.) are\n# declared properly somewhere/somehow\nconfdir = path.abspath(path.dirname(__file__))\n# use parent dir as dbdir else fallback to current dir\ndbdir = path.abspath(path.join(confdir, \"..\")) if confdir.endswith(\"conf\") else confdir\n\n\nclass ProdConfiguration(object):\n    DEBUG = True\n    # Make this random (used to generate session keys)\n    SECRET_KEY = \"74d9e9f9cd40e66fc6c4c2e9987dce48df3ce98542529126\"\n    #SQLALCHEMY_DATABASE_URI = \"sqlite:///{0}\".format(path.join(dbdir, \"module_build_service.db\"))\n    SQLALCHEMY_DATABASE_URI = 'postgresql://mbs:mysupersecretepasswordmbs@koji.gnulab.org/mbs'\n    SQLALCHEMY_TRACK_MODIFICATIONS = True\n    # Where we should run when running \"manage.py run\" directly.\n    HOST = \"0.0.0.0\"\n    PORT = 5000\n\n    # Global network-related values, in seconds\n    NET_TIMEOUT = 120\n    NET_RETRY_INTERVAL = 30\n\n    #DISTGITS = {\"git+https://git.centos.org\": (\"git clone {repo_path}\", \"get_sources.sh\")}\n    SYSTEM = \"koji\"\n    MESSAGING = \"fedmsg\"  # or amq\n    MESSAGING_TOPIC_PREFIX = [\"org.gnulab.prod\"]\n    KOJI_CONFIG = \"/etc/module-build-service/koji.conf\"\n    KOJI_PROFILE = \"koji\"\n    ARCHES = [\"x86_64\"]\n    ALLOW_ARCH_OVERRIDE = False\n    KOJI_REPOSITORY_URL = \"https://koji.gnulab.org/kojifiles/repos\"\n    KOJI_TAG_PREFIXES = [\"module\", \"scrmod\"]\n    KOJI_ENABLE_CONTENT_GENERATOR = True\n    CHECK_FOR_EOL = False\n    PDC_URL = \"https://pdc.fedoraproject.org/rest_api/v1\"\n    PDC_INSECURE = False\n    PDC_DEVELOP = True\n    SCMURLS = [\"git+https://git.centos.org/\", \"https://git.centos.org/\"]\n    YAML_SUBMIT_ALLOWED = False\n\n    # How often should we resort to polling, in seconds\n    # Set to zero to disable polling\n    POLLING_INTERVAL = 600\n\n    # Determines how many builds that can be submitted to the builder\n    # and be in the build state at a time. Set this to 0 for no restrictions\n    NUM_CONCURRENT_BUILDS = 5\n\n    ALLOW_CUSTOM_SCMURLS = False\n\n    RPMS_DEFAULT_REPOSITORY = \"git+https://git.centos.org/rpms/\"\n    RPMS_ALLOW_REPOSITORY = False\n    #RPMS_DEFAULT_CACHE = \"http://pkgs.fedoraproject.org/repo/pkgs/\"\n    RPMS_ALLOW_CACHE = False\n\n    MODULES_DEFAULT_REPOSITORY = \"git+https://git.centos.org/modules/\"\n    MODULES_ALLOW_REPOSITORY = False\n    MODULES_ALLOW_SCRATCH = True\n    ALLOW_ONLY_COMPATIBLE_BASE_MODULES = True\n\n\n    ALLOWED_GROUPS_TO_IMPORT_MODULE = set()\n\n    # Available backends are: console and file\n    LOG_BACKEND = \"file\"\n\n    # Path to log file when LOG_BACKEND is set to \"file\".\n    LOG_FILE = \"/tmp/module_build_service.log\"\n\n    # Available log levels are: debug, info, warn, error.\n    LOG_LEVEL = \"debug\"\n\n    # Allow stream override\n    ALLOW_STREAM_OVERRIDE_FROM_SCM = True\n\n    # Settings for Kerberos\n    KRB_KEYTAB = \"/etc/mbs.keytab\"\n    KRB_PRINCIPAL = \"mbs@GNULAB.ORG\"\n\n    # AMQ prefixed variables are required only while using 'amq' as messaging backend\n    # Addresses to listen to\n    AMQ_RECV_ADDRESSES = [\n        \"amqps://messaging.mydomain.com/Consumer.m8y.VirtualTopic.eng.koji\",\n        \"amqps://messaging.mydomain.com/Consumer.m8y.VirtualTopic.eng.module_build_service\",\n    ]\n    # Address for sending messages\n    AMQ_DEST_ADDRESS = \\\n        \"amqps://messaging.mydomain.com/Consumer.m8y.VirtualTopic.eng.module_build_service\"\n    AMQ_CERT_FILE = \"/etc/module_build_service/msg-m8y-client.crt\"\n    AMQ_PRIVATE_KEY_FILE = \"/etc/module_build_service/msg-m8y-client.key\"\n    AMQ_TRUSTED_CERT_FILE = \"/etc/module_build_service/Root-CA.crt\"\n\n    # Disable Client Authorization\n    NO_AUTH = False\n    AUTH_METHOD = \"kerberos\"\n    LDAP_URI = \"ldap://koji.gnulab.org\"\n    LDAP_GROUPS_DN = \"ou=group,dc=gnulab,dc=org\"\n    ADMIN_GROUPS = {\"packageradmin\"}\n    ALLOWED_GROUPS = {\"packager\"}\n    KOJI_CG_DEVEL_MODULE = True\n    KOJI_PROXYUSER = True\n    REBUILD_STRATEGY = 'only-changed'\n    REBUILD_STRATEGY_ALLOW_OVERRIDE = True\n    KOJI_CG_BUILD_TAG_TEMPLATE = \"{}-modular-updates-candidate\"\n    KOJI_CG_DEFAULT_BUILD_TAG = \"modular-updates-candidate\"\n    # Extra options set for newly created Koji tags\n    KOJI_TAG_EXTRA_OPTS = {\n        \"mock.package_manager\": \"dnf\",\n        # This is needed to include all the Koji builds (and therefore\n        # all the packages) from all inherited tags into this tag.\n        # See https://pagure.io/koji/issue/588 and\n        # https://pagure.io/fm-orchestrator/issue/660 for background.\n        \"repo_include_all\": True,\n        # Has been requested by Fedora infra in\n        # https://pagure.io/fedora-infrastructure/issue/7620.\n        # Disables systemd-nspawn for chroot.\n        \"mock.new_chroot\": 0,\n        # Works around fail-safe mechanism added in DNF 4.2.7\n        # https://pagure.io/fedora-infrastructure/issue/8410\n        \"mock.yum.module_hotfixes\": 1,\n    }\n    # DEFAULT_DIST_TAG_PREFIX = 'module_'\n</code></pre></li> <li>Create the logging file /tmp/module_build_service.log and set the correct permission: <pre><code>touch /tmp/module_build_service.log\nchown mbs:fedmsg /tmp/module_build_service.log\nchmod 664 /tmp/module_build_service.log\n</code></pre></li> <li>Restart services : <pre><code>systemctl restart fedmsg-hub\nsystemctl restart fedmsg-relay\nsystemctl restart httpd\n</code></pre></li> </ul>"},{"location":"archive/legacy/mbs_installation/#testing-the-module-build-service","title":"Testing the module build service","text":"<p>We will need to create a few tags for this to work, so on the koji admin machine, run the following commands: * Creating tags: <pre><code>koji add-tag module-centos-8.2.0-build\nkoji add-tag module-centos-8.3.0-build\n</code></pre> * Adding the external mirrors for the build tags: <pre><code>koji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-debuginfo-external http://debuginfo.centos.org/8/\\$arch/\nkoji add-external-repo -m bare -t module-centos-8.2.0-build module-cent-8.2-sheriflocalrepo-external https://koji.gnulab.org/localrepo/\\$arch/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-baseos-external http://mirror.centos.org/centos-8/8.3.2011/BaseOS/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-appstream-external http://mirror.centos.org/centos-8/8.3.2011/AppStream/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-devel-external http://mirror.centos.org/centos-8/8.3.2011/Devel/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-ha-external http://mirror.centos.org/centos-8/8.3.2011/HighAvailability/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-pt-external http://mirror.centos.org/centos-8/8.3.2011/PowerTools/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-cp-external http://mirror.centos.org/centos-8/8.3.2011/centosplus/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-cr-external http://mirror.centos.org/centos-8/8.3.2011/cr/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-extras-external http://mirror.centos.org/centos-8/8.3.2011/extras/\\$arch/os/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-fasttrack-external http://mirror.centos.org/centos-8/8.3.2011/fasttrack/\\$arch/os\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-debuginfo-external http://debuginfo.centos.org/8/\\$arch/\nkoji add-external-repo -m bare -t module-centos-8.3.0-build module-cent-8.3-sheriflocalrepo-external https://koji.gnulab.org/localrepo/\\$arch/\n</code></pre> * Add mbs user: <pre><code>koji add-user mbs\n</code></pre> * Fix the content generating for koji On Koji server, run the follwing commands <pre><code>koji call addBType module\nkoji grant-cg-access mbs module-build-service --new\n</code></pre></p> <p>Now, on mbs server, we will need to do the following: * Upgrade mbs db <code>mbs-manager db upgrade`` * Download the platform modules</code>git clone https://git.centos.org/modules/platform<code>* Switch to the needed branche and loading it <pre><code>git branch -a\ngit checkout c8-stream-el8.2.0\nmbs-manager import_module platform.yaml\ngit checkout c8-stream-el8.3.0\nmbs-manager import_module platform.yaml\n</code></pre> * Create the module build json file, for example **redis.json** <pre><code>  {\n    \"scmurl\": \"https://git.centos.org/modules/redis.git?#f042b198bcbc0fe410be219f27cd041deea7bcc3\",\n    \"branch\": \"c8-stream-5\"\n  }\n</code></pre> * Generate your kerberos ticket</code>kinit snagy<code>* Submit the job</code> curl -X POST -H \"Content-Type: application/json\" -u : --negotiate -d @redis.json https://mbs.gnulab.org/module-build-service/1/module-builds/``` * Check Tasks on koji</p>"},{"location":"archive/legacy/mock_building_guide/","title":"Mock building guide","text":""},{"location":"archive/legacy/mock_building_guide/#title-build-order-effort-how-to-help","title":"title: Build Order Effort:  How to Help","text":"<p>If you're interested in helping with Rocky Linux packaging effort, we could use you!  One of the critical things we need done is to figure out which order the packages need to be built, and determine any outside/external build dependencies.  Read more to see what we mean:</p>"},{"location":"archive/legacy/mock_building_guide/#what-needs-to-be-done","title":"What Needs to be Done?","text":"<p>Many source packages in RHEL/CentOS will not build properly by themselves.  Often, you need some RPMs produced from other packages built first, and available as dependencies.</p> <p>Our Mission: is to help the release engineering team by identifying these chains of dependencies, and figuring out which order we need to build things in.  Additionally, we need to identify any external dependencies that the package builds require.  All of this information must be documented so we can build the initial version of Rocky Linux (Based on RHEL/CentOS 8.3).</p> <p>We are building a complete copy of CentOS 8.3 (from the CentOS repositories) and taking notes on it.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#types-of-package-dependenciesfailures","title":"Types of Package Dependencies/Failures","text":"<p>1:  Devel dependencies within the distro</p> <p>These dependencies (often in the form of \"-devel\" RPMs) are not available in the regular CentOS repositories (BaseOS, AppStream, PowerTools), but must be produced by first building other packages.  For example, the package curl requires libmetalink-devel to build properly.   The libmetalink-devel RPM is not available in the default repositories, you must produce it by taking the libmetalink source RPM and compiling it. </p> <p>2:  Dependencies outside the distro</p> <p>Some packages require packages at build-time which are not in the CentOS/RHEL repositories at all.  These must be identified, compiled to RPMs, and made available to our build process.  Fortunately, these \"external\" dependencies are all located at https://git.centos.org .  They can be checked out with the proper branch and compiled to SRPMs and then RPMs. </p> <p>3:  Build time failures</p> <p>Some packages just fail to build for other reasons when using the default Mock build settings.   We must investigate these failures and figure out workarounds.  And most importantly, take notes on how we solved the issues.</p> <p>For example, some RPMs related to the Java maven tool will refuse to build without a <code>/etc/maven.conf</code> file present.  We can set our Mock tool up to create a blank maven.conf and work around this requirement.  We need to make a note of this, because it's something extra that needs to be done in order for the build to succeed.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#how-do-we-do-this","title":"How do we do this?","text":"<p>Building RPM packages in the modern era is done via the mock build tool.   ( https://github.com/rpm-software-management/mock )  Mock creates a blank chroot and installs a minimal system inside it.  It then builds the source RPMs via classic rpmbuild tool inside the chroot.</p> <p>This guarantees that only the packages that are actually required for the build process are present, and no extra dependencies accidentally creep in.</p>"},{"location":"archive/legacy/mock_building_guide/#using-and-installing-mock","title":"Using and Installing Mock","text":"<p>Mock is a simple tool written in Python, and is widely available.  It's in the EPEL repo under CentOS/RHEL 8, and is even available in some Debian based distros.  We are using Mock version 2.6 (default in EPEL 8) for our research builds here.</p> <p>Mock is easy to use: <code>mock -r /etc/mock/myconfig.cfg  --nocheck   --resultdir=/path/to/results    curl-7.61.1-14.el8.1.src.rpm</code></p> <p>The mock configuration lets you specify what gets put in your minimal chroot, and what repositories DNF will use when setting up the build.  Fortunately, we have a standardized mock config you can download and use yourself (linked below), so you don't have to go through and set everything up yourself.</p> <p>Log files will be written to your results path during the build.  If the build was successful, the resulting RPMs will also be present there.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#reading-mock-output","title":"Reading Mock Output","text":"<p>Mock produces log files with standard/consistent names during each build.  The most important ones that we care about are: root.log and build.log.</p> <p>Root.log details the process that was used to set up the chroot environment.  It shows what commands were issued, and especially what packages were installed.  A missing dependency will usually show up here, when mock will attempt to dnf install a dependency and not find it.</p> <p>Build.log details the actual package build process.  This includes the compilation step(s) for whatever langauge the packaged software was written in (C, C++, Java, Rust, etc.).  It also includes any other steps/scripts outlined in the .spec file that get performed.  Build failures that don't involve dependencies usually show up in here.</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#links-and-next-steps-how-to-start-helping","title":"Links and Next Steps (How to Start Helping!)","text":"<p>We are tracking the results of this effort on the Wiki.  If you click \"Browse\" in the top left, and navigate to Development -&gt; Build_Order , you'll see many pages that refer to \"Build passes\".</p> <p>A build pass is very simple:</p> <ol> <li>Use mock to attempt to build all ~3000 packages in CentOS, using only the default BaseOS, AppStream, and PowerTools repositories.</li> <li>Record which packages passed, and which ones failed to build.  As well as what RPM files were produced from doing the build pass. (this is what is in those wiki pages)</li> <li>Take the produced RPMs and add them to repositories, so the next build pass can use them as dependencies.</li> <li>DO IT AGAIN! (and again, and again...)</li> <li>Once we've built everything, we will use these pages as a reference.  We now know what order we need to feed these</li> </ol> <p>Fortunately, Skip Grube has a server and is executing these build passes.  We need help troubleshooting individual packages.  Read on...</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#where-we-need-help","title":"Where we need help:","text":"<p>We've done enough build passes now that we have most (but not all) of the dependencies lined up in order.  We need to investigate the remaining failed packages and determine why they are failing.</p> <p>We must answer questions like: Is the package failing because it needs a dependency?  Is it external, or will it be automatically produced in one of the build passes?  Is it failing because of some other error?</p> <p></p>"},{"location":"archive/legacy/mock_building_guide/#how-you-can-help-exactly-with-links","title":"How you can help exactly (with links!):","text":"<p>Step 0: Get familiar with the Mock build tool and its configuration.  Learn how to build SRPMs, and how to check out branches from git.centos.org, turn them into SRPMs, and compile them with Mock. </p> <p>Step 1: The latest build pass (as of this document) is #10.  So here are the build failures: https://wiki.rockylinux.org/en/team/development/Build_Order/Build_Pass_10_Failure</p> <p>Pick one to investigate, and make sure it's NOT on this list of packages we have already solved: https://wiki.rockylinux.org/en/team/development/Package_Error_Tracking </p> <p>Step 2: You can view the Mock build logs for that failed package under here:  https://rocky.lowend.ninja/RockyDevel/MOCK_RAW/ (sorted by repo and package name). </p> <p>Step 3: Once you've investigated the log(s), try to build the package yourself, in your own mock.  Our exact Mock configurations are available here: https://rocky.lowend.ninja/RockyDevel/mock_configs/ (sorted by build pass number), and SRPMs are available from CentOS here: https://vault.centos.org/8.3.2011/ (sorted by repo) </p> <p>Step 4: This is the tricky part, and involves troubleshooting skills.  Why exactly is the package failing?  How do you get the build to succeed?  This may involve hunting dependencies, fiddling with the .spec file in the SRPM, or playing with mock options. </p> <p>Step 5: If you solve one, please TELL US ABOUT IT!  Hop over to chat.rockylinux.org .  We hang out in the #Dev/Packaging channel, and are always listening!  Ping @Skip Grube  or  @Michael Young and let us know how you fixed it!  We'll add it to our knowledge base as soon as we can, and thanks!</p>"},{"location":"archive/legacy/modularity/","title":"Modularity","text":"<p>There are some packages that utilise a functionality called streams. Modularity makes it possible to have multiple versions of the same package in the same repository and enables version switching. To be able to build module packages, we are using something called <code>Module Build Service</code>, <code>MBS</code> for short. It is also called <code>fm-orchestrator</code>.</p> <p>Packages that have modular entries should not be built directly from their <code>dist/</code> repository as that will not tag that package correctly as a stream.</p> <p>The correct <code>{name}.yaml</code> file is generated during import with <code>srpmproc</code> and is derived from <code>SOURCES/modulemd.src.txt</code>.</p>"},{"location":"archive/legacy/modularity/#koji-setup","title":"Koji setup","text":"<p>MBS should be able to use content generators so Koji can manage artifacts. To enable content generation run the following queries against the database: <pre><code>insert into content_generator (name) values ('module-build-service');\ninsert into btype (name) values ('module');\n</code></pre></p> <p>Grant the <code>mbs</code> user on koji <code>cg-access</code> with: <pre><code>koji grant-cg-access mbs module-build-service\n</code></pre></p> <p>Also create a tag named <code>modular-updates-candidate</code> with: <pre><code>koji add-tag modular-updates-candidate\n</code></pre></p> <p>Modular packages should be added to this tag.</p>"},{"location":"archive/legacy/modularity/#mbs","title":"MBS","text":"<p>Latest MBS version is required. Version 2.32 lacks the <code>mock.yum.module_hotfixes=1</code> flag on the tags and DNF fail-safe mechanisms break the build.</p> <p>More info on Modularity here and how we utilise MBS</p>"},{"location":"archive/legacy/module_build_order/","title":"Module Build Order","text":"<p>Analysis of when to build the various modules:</p> <p>Modules consist of packages, some which require building non-modular packages (or even other modules) first. This is an attempt to group modules with a build order list, to ensure all the packages in a given stream will build.</p> <p></p> <p>Methodology: This list is produced by comparing a list of raw packages in a module, and the lists of succeeding packages in the build order pass lists.</p> <p>When all the packages in a module complete their build, we take a note of the last/latest package to build, and which build pass that was.</p> <p>The module should be built with the packages in that build pass, as that is when all packages are guaranteed to complete. (all dependencies fulfilled)</p> <p></p>"},{"location":"archive/legacy/module_build_order/#module-build-order-list","title":"Module Build Order List","text":"<p>(These modules have all their packages building successfully, and they will build properly in the listed build pass/batch)</p> <p>Build Pass 1: - 389-ds : 1 - freeradius : 1 - go-toolset : 1 - httpd : 1 - mailman : 1 - mercurial : 1 - perl-App-cpanminus : 1 - perl-DBD-MySQL : 1 - perl-DBD-Pg : 1 - perl-DBD-SQLite : 1 - perl-DBI : 1 - perl-FCGI : 1 - perl-YAML : 1 - php : 1 - python36 : 1 - redis : 1 - squid : 1 </p> <p>Build Pass 2: - inkscape : 2 - javapackages-runtime : 2</p> <p></p> <p>Build Pass 3: - gimp : 3</p> <p></p> <p>Build Pass 4: - ant : 4 - mod-auth-openidc : 4 - postgresql : 4</p> <p></p> <p>Build Pass 6: - mariadb : 6</p> <p></p> <p>Build Pass 9: - mysql : 9 - parfait : 9 - perl-IO-Socket-SSL : 9 - perl-libwww-perl : 9</p> <p></p>"},{"location":"archive/legacy/module_build_order/#unsure-modules","title":"Unsure Modules","text":"<p>(These modules still have packages failing, so we are not 100% sure which build pass they should go in) <pre><code>container-tools : unsure\nidm  : 6...?\njavapackages-tools : 9+\njmc : 9+\nllvm-libs : 1, but i686 packages failed (should be ok w/ MBS?)\nmaven : 9+\nnginx : 2?  (only 1 version not building)\nnodejs : almost nothing built yet\nperl : 10+ (most built by 9)\npki-core : 8+ (just a few failing)\npki-deps : 10+ (just a few failing)\npython27 : 4 (just a couple docs pkgs missing)\npython38-devel : 1 (1 pkg failing)\npython38 : 2 (1 pkg failing)\nrhncfg : ?\nruby : ?\nsatellite-5-client : ?\nscala : 10+ (1 pkg failing)\nswig : ?\nvirt-devel : 10+ (1 pkg failing)\n</code></pre></p> <p></p>"},{"location":"archive/legacy/module_build_order/#broken-modules","title":"Broken Modules","text":"<p>(These modules have NO packages completing their build, or very few.  They require more investigation) <pre><code>389-directory-server : N/A (investigate?)\navocado : N/A (?)\ncobbler : N/A\ndwm\nlibselinux-python.txt\nlibuv\nmariadb-devel (?)\nnextcloud\nrust-toolset\nsubversion\nvarnish\nzabbix\n</code></pre></p>"},{"location":"archive/legacy/mqtt_bus/","title":"CentOS MQTT message bus","text":"<p>Danger</p> <p>As of 2023-06-21, updates are no longer published to git.centos.org. This page will eventually be replaced with documentation on the Fedora MessageBus which contains the events for publishing into gitlab.com/redhat/centos-stream, and how we have implemented inside our build system.</p> <p>As such, the information below should be considered historical and may move to the Archive at some time in the future. Proceed with caution.</p> <p>CentOS provides a message bus which can be used for subscribing to certain messages on their git repository.</p> <p>More information, and setup on subscribing to their message bus can be found at https://wiki.centos.org/Sources?highlight=%28mqtt%29#Message_Broker_.28MQTT.29.</p>"},{"location":"archive/legacy/mqtt_bus/#example-message","title":"Example message","text":"<pre><code>git.centos.org/git.receive\n{\n  \"forced\": false,\n  \"agent\": \"pgreco\",\n  \"repo\": {\n    \"custom_keys\": [],\n    \"name\": \"kernel\",\n    \"parent\": null,\n    \"date_modified\": \"1553617543\",\n    \"access_users\": {\n      \"owner\": [\n        \"centosrcm\"\n      ],\n      \"admin\": [],\n      \"ticket\": [],\n      \"commit\": []\n    },\n    \"namespace\": \"rpms\",\n    \"priorities\": {},\n    \"close_status\": [],\n    \"access_groups\": {\n      \"admin\": [],\n      \"commit\": [],\n      \"ticket\": []\n    },\n    \"milestones\": {},\n    \"user\": {\n      \"fullname\": \"CentOS Sources\",\n      \"name\": \"centosrcm\"\n    },\n    \"date_created\": \"1553617543\",\n    \"fullname\": \"rpms/kernel\",\n    \"url_path\": \"rpms/kernel\",\n    \"id\": 918,\n    \"tags\": [],\n    \"description\": \" The Linux kernel \"\n  },\n  \"old_commit\": \"dbbb1cc79ab5878344c3e3df4b53b7ac7acdddfc\",\n  \"branch\": \"c7-sig-altarch-lts-5-4\",\n  \"authors\": [\n    \"Pablo Greco\"\n  ],\n  \"total_commits\": 1,\n  \"start_commit\": \"b7d48e1265407b755f7827d0245547847cdba375\",\n  \"end_commit\": \"b7d48e1265407b755f7827d0245547847cdba375\"\n}\n</code></pre>"},{"location":"archive/legacy/package_debugging/","title":"How to Help - Getting Started with Package Debugs","text":""},{"location":"archive/legacy/package_debugging/#intro-what-needs-to-be-done","title":"Intro - What needs to be done","text":"<p>The area we need help the most right now, and the easiest way to contribute, is to help troubleshoot failing package builds.</p> <p>We're rebuilding CentOS 8.3 as \"practice\", so we can figure out any issues that crop up with our official Rocky build ahead of time.  We are documenting any errors we find in the packages and how to fix them (to make it build).  This documentation will help our release engineering team when it comes time to do official builds.</p>"},{"location":"archive/legacy/package_debugging/#get-familiar-with-the-mock-build-tool","title":"Get Familiar with the <code>mock</code> build tool:","text":"<p>Check out the wiki on <code>mock</code>'s GitHub repository for some starter information that links out to additional reading at the bottom.</p> <p>The biggest and most relevant technical/intro page for our package debugging effort can be found on our Mock Building Guide here on the wiki.</p> <p>We are using the <code>mock</code> program to perform our builds, just like the real Rocky infrastructure will.  You should install it and get very used to it. Please use this guide to get started, and explain a bit about what we hope to achieve and why we have to build all these packages in a specific order.</p> <p>Please read those carefully, and maybe dip your toe in the water by feeding your mock an SRPM or 2 and compiling some things.</p> <p>Mock is really great, as it's an easy-to-call program that constructs an entire system inside a chroot to perform the build, then cleans it up afterwards.</p> <p>If you'd like a reference for Mock config files to look at or play with, there are some published here (that correspond with the \"Build Passes\" being done to test package builds). More information about the passes can be found here on the wiki at: <code>/team/development/Build_Order/Build_Pass_{1..X}_{Artifacts,Failure,RPMs,Successful}</code> ... (which will definitely be cleaned up later, we just want to avoid breaking any existing links at such a critical juncture).</p> <p>Once you're familiar with <code>mock</code> (and especially digging through its output logs), we have a list of failing packages that we need to investigate and come up with explanations and/or fixes for.</p>"},{"location":"archive/legacy/package_debugging/#helping-with-the-debug-effort","title":"Helping with the debug effort:","text":"<p>Once you are familiar with Mock, and especially with debugging its output, you can begin looking at failing packages. Some of this information is also on the Mock Build Howto page.</p> <ol> <li> <p>Find a failing package on the newest build pass failures page (currently Build Pass 10).</p> </li> <li> <p>Make sure the package hasn't already been looked at and/or fixed:  https://wiki.rockylinux.org/en/team/development/Package_Error_Tracking</p> </li> <li> <p>Let other debuggers know what you're working on!  We don't want to duplicate effort.  Hop on the ~Dev/Packaging channel on mattermost!</p> </li> <li> <p>Set your mock program up with the most recent configs that we are using.  You can use it to attempt the build in the same way as we do (with external dependencies, extra repos, etc.)</p> </li> <li> <p>Investigate the error(s):  You can use your own mock, as well as the log files from when the build failed, located here:  https://rocky.lowend.ninja/RockyDevel/MOCK_RAW/</p> </li> <li> <p>Figure out what's going on, and how to fix it.  It may take the form of special mock settings, or a patch added to the program + specfile.  Report your findings to the ~Dev/Packaging channel, and someone will record them on the Wiki Package_Error_Tracking page page.</p> </li> <li> <p>The idea is to shrink the Build Failures, and grow the Package_Error_Tracking page.  If necessary, we will commit build fixes to our patch repo for the different packages.</p> </li> </ol>"},{"location":"archive/legacy/package_error_tracking/","title":"Package Build Issues Tracking","text":"<p>This page is for tracking packages that are failing in the Rocky Linux Koji build system (dev/staging): https://kojidev.rockylinux.org .</p> <p>There are 2 tables.  The upper one is for packages currently under investigation.  The lower table is for packages that have been \"solved\".</p> <p>A package must be successfully built in Koji before it can be moved to the \"solved\" table.  This is to prevent confusion about potential fixes.  Koji is the ultimate arbiter of whether a package has been fixed or not.</p> <p>Note: the old package error tracking page centered around Skip G.'s CentOS \"practice builds\" is still available if you need to look at its notes: https://wiki.rockylinux.org/en/team/development/Package_Error_Tracking_older</p> <p></p>"},{"location":"archive/legacy/package_error_tracking/#methodology","title":"Methodology","text":"<p>The builds being done on kojidev are quite literally real-time progress as the Rocky Linux project races towards a beta release.</p> <p>To get there, we need to ensure that all of our packages build successfully.  Koji has a list of builds that have failed here:  https://kojidev.rockylinux.org/koji/builds?state=3&amp;order=-build_id  (You can also go to Koji, click on builds, and select \"State: Failed\" from the drop-down menu)</p> <p>You can select a package from the failing list that interests you, then click the \"task\" link that takes you to the failing details page, then click the failing part of the \"Descendants\" list.</p> <p>Now you can see the raw Mock build logs from the official build, and investigate. (root.log and build.log are usually the most interesting for debug purposes)  See if you can get the build to work on your system with Mock, and take notes on how you did it (patch, needs a dependency or different version of dependency, etc.)  When you have results, go back to the Dev/Packaging channel on chat.rockylinux.org , and report your findings.  Someone will update this page with the findings.</p> <p>It goes without saying that the more you know about using the Mock build tool, and the RPM package compilation process in general, the better you'll be able to help.  If you need more information about how to build/troubleshoot RPM packages for Rocky Linux, you'll probably want to start with our how to help guide (and read the other guides/material linked from there): https://wiki.rockylinux.org/en/team/development/Packaging_How_to_Help .</p> <p></p>"},{"location":"archive/legacy/package_error_tracking/#communication","title":"Communication","text":"<p>Most coordination of these efforts is done over the Mattermost packaging chat channel. (https://chat.rockylinux.org/rocky-linux/channels/dev-packaging , or if you prefer IRC: #rockylinux-devel-packaging on Freenode)</p> <p>If you're looking at a failing package, please tell everyone there!  That way we can avoid duplication of effort.  When you have a fix, or have discovered information that will help, someone with Wiki access will be happy to take your findings and publish them here.</p> <p> </p>"},{"location":"archive/legacy/package_error_tracking/#packages-being-investigated","title":"Packages Being Investigated:","text":"<p>This is a list of failing builds from kojidev.rockylinux.org that have been looked at, and notes added.</p> <p>This list is not grouped according to repo.</p> Package Notes bolt-0.9-1.el8 Using simple mock chroot (<code>isolation=simple</code>) solves permission issues, but there are still 2 tests that fail with signal 5 (SIGTRAP).  Investigation still ongoing graphviz-2.40.1-40 Fixed if <code>module_hotfixes=1</code> is turned off.  It pulls in the latest Ruby 2.7 and not the default Ruby 2.5 stream, which breaks the build marisa Probably caused by module_hotfixes being on. (Succeeded locally for Leigh + tjyang.  More investigation...?) python-requests Missing dependency 'python3-pytest-mock' (Succeeded locally for Leigh + tjyang.  More investigation...?) python-psycopg2 Failed locally also.  https://bugzilla.redhat.com/show_bug.cgi?id=1909674  Possible patch required?  https://src.fedoraproject.org/rpms/python-psycopg2/c/89f4b65570783ea763c37311e974296d3ff40d90?branch=master scrub <code>x86_64 passed</code>, aarch64 failed on tests (Succeeded locally for Leigh + tjyang.  More investigation...?) uglify-js Fixed if <code>module_hotfixes=1</code>. Fails when \u2018module_hotfixes\u2019 is enabled. This is caused by newer versions of NodeJS. Found a patch that is in newer versions of uglify-js which fixes this for any version of NodeJS.(Succeeded locally for Leigh + tjyang.  More investigation...?) <p> </p>"},{"location":"archive/legacy/package_error_tracking/#packages-that-have-been-fixed","title":"Packages that have been fixed:","text":"<p>These packages have been successfully built in Koji after investigation.  They are cut/pasted down here from the upper list once they succeed in Koji.  We are keeping their notes here intact in case of future issues.</p> Package Notes"},{"location":"archive/legacy/package_error_tracking_older/","title":"Package Build Issues Tracking","text":"<p>NOTE: This page is deprecated, and refers to Skip's CentOS 8.3 \"practice\" build.  It is being kept as a reference in case there are similar issues with the listed packages.</p> <p>The actual build is in progress, and Koji build errors are tracked on the main error tracking page: https://wiki.rockylinux.org/e/en/team/development/Package_Error_Tracking</p> <p></p>"},{"location":"archive/legacy/package_error_tracking_older/#_1","title":"Package Build Issues Tracking","text":"<p>This page details packages that have failed to build, or which something \"special\" had to be done to achieve a build.</p> <p>For example, a package which fails when building with the newest version of a dependency, and requires the forced-downgrade to the older build dependency would go here.</p> <p>This page is NOT for dependency issues, or tracking which order to build dependent packages in.  That information is being tracked under Development/Build_Order/ in this wiki.</p>"},{"location":"archive/legacy/package_error_tracking_older/#repositoriesbuilds","title":"Repositories/Builds","text":"<p>This page tracks build failures from these sources:</p> <ul> <li>CentOS BaseOS</li> <li>CentOS AppStream</li> <li>CentOS PowerTools</li> <li>External Dependencies</li> </ul> <p>\"External Dependencies\" means packages that are downloaded and built from git.centos.org , and don't belong in an official repository.  Many packages from the official repositories depend on these external dependency packages.</p>"},{"location":"archive/legacy/package_error_tracking_older/#methodology-and-links","title":"Methodology and Links","text":"<p>Right now, build passes are done from CentOS 8.3 SRPMs and Skip's build server: ( https://rocky.lowend.ninja/RockyDevel/ )</p> <p>Official Koji/MBS infrastructure is nearly complete and will of course be the official location for Rocky builds.  This unofficial work is being done to gather information that will help the official build go smoothly.</p> <p>All build \"passes\" are done via Mock, and their results are added to a repository on the build server.  These repositories are available to subsequent builds, so more packages get their dependencies and successfully build.</p>"},{"location":"archive/legacy/package_error_tracking_older/#links","title":"Links:","text":"<ul> <li>Build Result Repositories:  https://rocky.lowend.ninja/RockyDevel/ {BaseOS_final, BaseOS_devel, AppStream_final, AppStream_devel, PowerTools_final, PowerTools_devel, External_Deps}  (Repos are separated into what goes in the official repo, and other build artifacts produced from the build that aren't in the official repo)</li> <li>Mock Configurations:  https://rocky.lowend.ninja/RockyDevel/mock_configs/  - The mock config files used for each Build Pass.</li> <li>Mock Build logs and RPMs: https://rocky.lowend.ninja/RockyDevel/MOCK_RAW/ - Logs and result RPMs from the mock builds.  Separated by repo and package name/version.  Dig into here to find error logs and match them with build results listed in the wiki.</li> <li>Summarized build results: https://rocky.lowend.ninja/RockyDevel/deliverables/ - Results from each build pass.  What new packages succeeded, which ones failed, and what RPM files were created as a result of the build.  This information gets copied to the Wiki under Development/Build_Order/ for easy viewing, but is available in raw form here.</li> </ul>"},{"location":"archive/legacy/package_error_tracking_older/#a-note-on-modularity","title":"A Note on Modularity","text":"<p>The current method for package testing is very simplistic, and doesn't take into account modular-stream packages (new feature in RHEL 8).  While we don't produce modular metadata with this method to create proper modules, it's still possible to compile modular packages and use modular dependencies.</p> <p>Our Mock config uses the option <code>module_hotfixes=1</code> in the DNF repo config files, which causes DNF to consider all packages for build dependencies in Mock, even ones from modules that are not enabled.</p> <p></p>"},{"location":"archive/legacy/package_error_tracking_older/#package-build-tips-discovered-so-far","title":"Package Build Tips Discovered so far:","text":"<ul> <li> <p>Perl: Build everything (especially external dependencies!) against the default Perl 5.26 stream, NOT the latest available 5.30 stream.  Perl packages higher up the chain depend on 5.26.</p> </li> <li> <p>Maven:  Create blank maven.conf file : <code>config_opts['files']['/etc/java/maven.conf'] = \" \"</code> by changing mock config.  Maven-related packages have a script that checks for it and will fail if it's not present</p> </li> <li> <p>Various(SystemD): SystemD changed its version string output from a simple \"239\" to a more complicated \"239 (239-41.el8_3.1)\" starting with the listed version.  Breaks several package scripts.</p> </li> <li> <p>javapackages-tools: In order to produce \"maven-local-openjdk8\", you need a specific commit, more info under External Dependencies page.</p> </li> </ul> <p></p>"},{"location":"archive/legacy/package_error_tracking_older/#the-new-list","title":"The New List","text":"<p>This is a list of failing builds from kojidev.rockylinux.org that need help.  We're now focusing development efforts on helping the real builds, and not doing \"practice\" builds of CentOS.</p> <p>This list is not grouped according to repo.</p> Package Notes bolt-0.9-1.el8 Using simple mock chroot (<code>isolation=simple</code>) solves permission issues, but there are still 2 tests that fail with signal 5 (SIGTRAP).  Investigation still ongoing graphviz-2.40.1-40 Fixed if <code>module_hotfixes=1</code> is turned off.  It pulls in the latest Ruby 2.7 and not the default Ruby 2.5 stream, which breaks the build marisa Succeeded locally for Leigh + tjyang.  More investigation...? python-requests Succeeded locally for Leigh + tjyang.  More investigation...? python-psycopg2 Failed locally also.  Possible patch required?  https://src.fedoraproject.org/rpms/python-psycopg2/c/89f4b65570783ea763c37311e974296d3ff40d90?branch=master scrub Succeeded locally for Leigh + tjyang.  More investigation...? uglify-js Succeeded locally for Leigh + tjyang.  More investigation...?"},{"location":"archive/legacy/package_error_tracking_older/#the-old-list","title":"The (old) List","text":"<p>The following is a list of the packages we have investigated.  Notes are kept about why they failed, and any workarounds used to build them successfully.  Expect this to get updated as we gather more information!</p> <p>CentOS 8 BaseOS Repository:</p> Package Notes ~~efibootmgr-16-1.el8~~ ~~Patch: https://git.rockylinux.org/staging/patch/efibootmgr~~ ~~fwupdate-11-3.el8~~ ~~Patch: https://git.rockylinux.org/staging/patch/fwupdate~~ ~~libkcapi-1.2.0-2.el8~~ ~~Will not build in the default Mock systemd-nspawn container.  MUST use <code>mock --isolation=simple</code> option to build in traditional chroot~~ ~~libusbx-1.0.23-4.el8~~ ~~Patch: https://github.com/elguero/centos8-libusbx/commit/daaad4ad85e7306ad0f111558bb143a2e9700b6d (mock should already have git-core available~~ ~~python-cffi-1.11.5-5.el8~~ ~~Need to define %__python. Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~tpm2-abrmd-2.1.1-3.el8~~ ~~Patch: https://git.rockylinux.org/staging/patch/tpm2-abrmd~~ <p></p> <p>CentOS 8 AppStream Repository:</p> Package Notes ~~abattis-cantarell-fonts-0.0.25-4.el8~~ ~~Patched fontforge to fix segfault issue.  Builds fine using the patched fontforge in its BuildRequires~~ ~~apache-commons-logging-1.2-13.module_el8.0.0+39+6a9b6e22~~ ~~Needs to be built <code>--without avalon</code>~~ ~~brltty-5.6-28.el8~~ ~~Needs patch to change location of asoundlib.h in newer version of alsa. https://github.com/sjpp/centos8-brltty/commit/388ddcf6493d50ce34542c8badb1a54a9f811950 (see https://bugzilla.redhat.com/show_bug.cgi?id=1716389, https://src.fedoraproject.org/rpms/brltty/c/897ad85a69cd7fb53cabcbac2fbc7c0ca1719da7?branch=master)~~ ~~ceph-12.2.7-9.el8~~ ~~Need to define %__python. Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~cobbler-2.0.7.1-6.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~cogl-1.22.2-10.el8~~ ~~Fix was committed to Rocky Git. Possible fix: https://github.com/elguero/centos8-cogl/commit/a8b47440f5c7290d96d0b8786f48f323a8a950f9. Got further in the build by force-including these packages in buildroot: <code>libdrm-devel libXxf86vm-devel  mesa-libGL-devel mesa-libEGL-devel xml-common mesa-khr-devel</code> (matches centos koji build).  Still fails though.~~ ~~cyrus-imapd-3.0.7-19.el8~~ ~~Hidden dependencies added to the list, <code>perl-Encode-IMAPUTF7</code>. Will build once dependencies are satisfied.~~ ~~egl-wayland-1.1.4-1.el8~~ ~~We are unable to use the SRPM in vault.centos.org for <code>egl-wayland</code> due to a newer version of <code>mesa-libEGL-devel</code> being present (See https://github.com/NVIDIA/egl-wayland/commit/4a343a4b563e84c6258efbddf1d910f9dd6e0300). Building <code>egl-wayland</code> was resolved by checking out the latest code from git.centos.org (produces same version 1.1.4-1) that now contains a patch to fix this.~~ ~~gegl04-0.4.4-6.el8~~ ~~Need to patch SPEC file. Change <code>BuildRequires: pkgconfig(exiv2) &gt;= 0.25</code> to <code>BuildRequires: compat-exiv2-026</code>.~~ ~~gcc-toolset-9-dyninst~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-9-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-9'</code>~~ ~~gcc-toolset-9-gcc~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-9-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-9'</code>~~ ~~gcc-toolset-10-dyninst~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-10-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-10'</code>~~ ~~gcc-toolset-10-gcc~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-10-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-10'</code>~~ ~~gcc-toolset-10-systemtap~~ ~~This is a scl build.  In chroot, add <code>scl-utils-build</code> and <code>gcc-toolset-10-build</code>. Then define the <code>scl</code> macro as follows: <code>--define 'scl gcc-toolset-10'</code>~~ ~~google-guice-4.2.2-4.module_el8.~~ With javapackages-tool from branch c8-stream-201902 built without forcing anything into buildroot. ~~Hidden dependency (newer version): <code>objectweb-asm-7</code> added to list 101. Built successfully by forcing <code>plexus-utils-3.3.0-3.el8.noarch objectweb-asm-7.2-2.el8_3.noarch</code> into buildroot, and setting the _without macros found in the maven modules.~~ ~~grafana~~ ~~Tries to download dependencies. No network available in mock (normally unless enabled).  Crossing off list because latest version builds correctly.~~ ~~gstreamer1-plugins-base~~ ~~Dependency: <code>egl-wayland-devel</code>. Already fixed and should build during next pass~~ ~~HdrHistogram-2.1.11-2.module_el8.2.0+460+6583c1d0~~ ~~Hidden dependency: <code>replacer</code>. Already been added and should build in next pass.~~ httpcomponents-client-4.5.5-4.module_el8.0.0+39+6a9b6e22 Built using <code>--without memcached</code> and <code>--without ehcache</code> httpcomponents-client-4.5.10-* Successfully built. Needs <code>mockito-3.1.2-2.el8_3</code> - Added to list 101 (<code>byte-buddy</code> added to list 100, <code>hamcrest</code> added to list 100 and <code>objectweb-asm-7</code> (v7.3) added to list 99) httpcomponents-core-4.4.12-* Successfully built. Needs <code>mockito-3.1.2-2.el8_3</code> - Added to list 101 (<code>byte-buddy</code> added to list 100, <code>hamcrest</code> added to list 100 and <code>objectweb-asm-7</code> (v7.3) added to list 99) ~~istack-commons~~ ~~Dependency: <code>dom4j</code> - Need to get dom4j built.  Also had to force <code>plexus-utils-3.3.0-3.el8.noarch</code> into build root (override version 3.1)~~ ~~jackson-annotations~~ ~~Hidden dependency: <code>jackson-parent</code> (added to list 101)~~ ~~jackson-core~~ ~~Hidden dependency: <code>jackson-bom</code>. (added to list 101)~~ ~~jackson-databind~~ ~~Hidden dependency: <code>jackson-bom</code>. (added to list 101)~~ ~~jackson-jaxrs-providers~~ ~~Hidden dependency: <code>glassfish-jax-rs-api, jackson-bom</code>. (added to list 101)~~ ~~jackson-module-jaxb-annotations~~ ~~Hidden dependency: <code>jackson-parent</code> (added to list 101)~~ ~~jline~~ ~~Needs to be built against <code>jansi-1.17*</code>. Completed build by forcing jansi-1.17 and <code>plexus-utils-3.3.0-3</code> into the buildroot.  Should be ok when the module is built, as it specifies these in modulemd src.~~ ~~jmc~~ ~~Hidden dependency: <code>eclipse-pde</code>, provided by building <code>eclipse</code> which has its long list of hidden dependencies. (added to list 101)~~ ~~jolokia-jvm-agent~~ ~~Hidden dependency: <code>json-simple</code> (added to list 101)~~ ~~jss~~ ~~Patch committed to staging: https://git.rockylinux.org/staging/patch/jss~~ ~~liborcus-0.14.1-1.el8~~ ~~Hidden dependency: <code>mdds-1.4</code> is in branch <code>c8s</code> and is a specific tag, <code>imports/c8s/mdds-1.4.3-1.el8</code> (added to list 101)~~ libreoffice-6.3.6.2-3.el8 Should build once <code>liborcus-0.14-1-1.el8</code> is able to built. See above. ~~libucil~~ ~~Newer <code>alsa-libs</code> has moved the location of <code>asoundlib.h</code>. Patch: https://github.com/elguero/centos8-libucil/commit/cd15a416fc10456bab7a2ae67b2073d4a12a4b8c~~ ~~libvirt-python-4.5.0-2.module_el8.2.0+320+13f867d7~~ ~~Newer version is present.~~ ~~mariadb-java-client-2.2.5~~ ~~Hidden dependency: <code>replacer</code> (added to list 101)~~ ~~maven-3.5.4-5.module_el8.0.0+39+6a9b6e22~~ ~~Built <code>--without logback</code>.  Also disabled module_hotfixes and enabled maven-3.5 module to build.  Should be fine under MBS we think(?)~~ ~~maven-3.6.2-4.module_*~~ ~~Built <code>javapackages-tools</code> from c8-stream-201902 and was able to then build maven. ~~Hidden dependencies: <code>slf4j-sources</code> (artifact of building slf4j), <code>modello</code>, <code>mockito-core</code> (which has dependencies too, <code>byte-buddy</code> (needs <code>objectweb-asm-7</code>) and <code>hamcrest-core</code>), <code>xmlunit</code>.  Needed to disable module_hotfixes and enable maven:3.6 stream in mock, should build automatically using MBS~~ ~~maven-wagon-3.1.0-1.module_el8.0.0+39+6a9b6e22~~ ~~Built <code>--without scm</code> and <code>--without ssh</code>. Dependencies displayed in build pass 10 were not used in koji build which indicates that it was built without them by using these conditionals (https://koji.mbox.centos.org/pkgs/packages/maven-wagon/3.1.0/1.module_el8.0.0+39+6a9b6e22/data/logs/noarch/root.log)~~ ~~mesa-libGLU-9.0.0-15.el8~~ ~~Patch: https://github.com/elguero/centos8-mesa-libGLU/commit/87fc0e63afb3ac0eb65ff480ee6e616979f39927~~ ~~mod_wsgi~~ ~~Need to <code>--define 'python3_pkgversion 38'</code> macro (as specified in python38 module)~~ ~~mutter-3.32.2~~ Needed <code>pkgconfig(wayland-eglstream)</code> .  Appears to work after that is satisfied. ~~numpy-1.14.2-*~~ ~~These are part of the python27 module, and must be built <code>--with python2</code> and <code>--without python3</code> .  Should be fine when the module is built by MBS.~~ perl-File-HomeDir-1.00-14.module_el8.1.0+229+cd132df8 Missing <code>BuildRequires: perl(Module::Install)</code> (maybe ok when built as a module?) perl-JSON-2.97.001-2.el8 ~~Missing <code>BuildRequires: perl-tests</code>~~ No longer able to reproduce error. ~~perl-Module-Build-0.42.29-4.module_el8.3.0+406+78614513~~ ~~Needs <code>--define 'perl_bootstrap 1'</code> to build without the need for dependencies that have been removed from RHEL8~~ ~~perl-URI-1.7~~ ~~Needs <code>--define 'perl_bootstrap 1'</code> to build without the need for dependencies that have been removed from RHEL8~~ ~~pesign~~ ~~https://github.com/elguero/centos8 pesign/commit/8e0b2ac48129cfe51dd1d53531e77dbc34317dc7~~ plexus-containers Built now that javapackages-tool from c8-stream-201902 is present. ~~<code>[ERROR] COMPILATION ERROR : [INFO] ------------------------------------------------------------- [ERROR] /builddir/build/BUILD/plexus-containers-plexus-containers-2.1.0/plexus-component-metadata/src/main/java/org/codehaus/plexus/metadata/ann/AnnReader.java:[38,18] cannot find symbol  symbol:   variable ASM7 location: interface org.objectweb.asm.Opcodes</code>~~ ~~plexus-build-api-0.0.7-20.module_el8.0.0+30+832da3a1~~ ~~Newer version in Git should build properly~~ ~~plexus-interpolation-1.26-3.module_el8.~~ ~~Needs <code>JAVA_HOME</code> set. <code>config_opts['files']['/etc/profile.d/mystuff.sh'] = \"\"\" export JAVA_HOME=/ \"\"\"</code>~~ postgresql-jdbc-42.2.3-* Built fine localy ?? Maybe next build will pass. ~~prometheus-jmx-exporter-0.12.0-5.el8~~ ~~Hidden dependencies: <code>prometheus-simpleclient-java</code> and <code>snakeyaml</code> (added to list 101). <code>snakeyaml</code> depends on <code>base64coder</code> (added to list 100).  Build is successful~~ ~~prometheus-jmx-exporter-0.12.0-5.el8~~ ~~One of the hidden dependencies is <code>snakeyaml</code>. This version depends on <code>snakeyaml 1.26-2</code> which is in branch <code>c8s</code>.~~ ~~python-cups-1.9.72-21.el8.0.1~~ ~~Build with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~python-systemd~~ ~~Possible fix: https://github.com/elguero/centos8-python-systemd/commit/b015bd9c2673939465162cd8a03003222d00327e   Affected by version string in new Systemd running longer (\"239\" vs. \"239 (239.4-rhel)\"  Reference:  https://github.com/systemd/python-systemd/issues/90~~ ~~pytz-2019.*~~ ~~Need to <code>--define 'python3_pkgversion 38'</code> - part of the python38 module, so should be fine in MBS~~ ~~qt5-qtdoc-5.12.5-1.el8~~ ~~Hidden dependency <code>qt5-qtbase-doc</code>. Build <code>qt5-doc</code> from git.centos.org to satisfy.~~ ~~qt5-qtwayland-5.12.5-1.el8~~ ~~Missing <code>BuildRequires:  libXext-devel</code>. Fixed in git already.~~ ~~rhncfg-5.10.120-10.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Built with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~rust-1.41.1-1.module_el8.2.0+322+d7f93ccc~~ ~~Outdated SRPM - use rust-1.47 from CentOS repo (OK, removed from Skip's build server)~~ scipy-1.3.1-4* Need to <code>--define 'python3_pkgversion 38'</code> - otherwise it grabs python3 packages which does not satisfy dependency ~~SLOF~~ ~~Needs to be built for <code>ppc64le</code>. Spec requires that target arch.~~ ~~spacewalk-backend-2.8.48-4.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Built with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~spacewalk-usix-2.8.1-5.module_el8.1.0+210+a3d63f21~~ ~~Need to define %__python. Built with <code>--define '__python %__python3'</code> (see https://fedoraproject.org/wiki/Changes/PythonMacroError)~~ ~~subversion-~~ ~~Needs to be build <code>--without kwallet</code>. CentOS Koji logs shows kwallet is not present.~~ ~~varnish-6.0{2-1, 6-2}.~~ ~~Needs to be built <code>--with python3</code> and <code>--without python2</code>~~ ~~varnish-modules-0.15.0-~~ ~~Needs to be built <code>--with python3</code> and <code>--without python2</code>~~ ~~velocity-1.7-24.module_*~~ ~~Needs to be built <code>_without_hsqldb=1</code>, and point to jdk instead of jre in profile.d: <code>export JAVA_HOME=/usr/lib/jvm/java/</code> .  Both likely work when building the module.~~ ~~xdg-desktop-portal-gtk-1.6.0-1.el8~~ ~~It looks like it succeeded in build pass 10 (dependencies fulfilled)~~ ~~xorg-x11-docs-1.7.1-7.el8~~ ~~Hidden dependency: <code>passivetex</code>, built hidden dependency from branch c8. Dependecy satisfied and built.~~ ~~xorg-x11-server-1.20.{6-3, 8-6, 8-6.1}~~ ~~Dependency on <code>egl-wayland</code>, which is currently failing to build. We are unable to use the SRPM in vault.centos.org for <code>egl-wayland</code> due to a newer version of <code>mesa-libEGL-devel</code> being present (See https://github.com/NVIDIA/egl-wayland/commit/4a343a4b563e84c6258efbddf1d910f9dd6e0300). Building <code>egl-wayland</code> was resolved by checking out the latest code from git.centos.org (produces same version 1.1.4-1) that now contains a patch to fix this. Once <code>egl-wayland</code> was built, <code>egl-wayland-devel</code> is present to satisfy the dependency.~~ <p></p> <p>CentOS 8 PowerTools Repository:</p> Package Notes apache-commons-logging Builds using <code>--without avalon</code> ~~apache-ivy~~ ~~Enabled javapackages-tools-201801 module, and turned on javapackages-tools-201801 macros.  Should build fine with MBS.~~ assertj-core Builds using <code>--without memoryfilesystem</code> bsh Builds when using <code>--without desktop</code> ~~compat-guile18~~ ~~Incorrect syntax for <code>Obsoletes</code> in spec file. Patch: https://github.com/N3WWN/rocky-debranding/tree/master/compat-guile18/ROCKY/CFG~~ dejagnu Hidden dependency: <code>screen</code> (added to list 101) jaxen Built using <code>--without dom4j</code> Note: We have dom4j now in our externals repo and it builds fine with that as well. The original packge was built without dom4j. I would recommend building without dom4j if we want to match the package available from CentOS. maven-doxia Builds using <code>--without itext</code>, <code>--without markdown</code> and <code>--without fop</code> maven-doxia-sitetools Builds using <code>--without markdown</code> and <code>--without fop</code> maven-invoker-plugin Builds using <code>--without groovy</code> maven-plugin-testing Depends on <code>maven-wagon</code> from PowerTools. See below. Built successfully using maven-wagon in local repo with priority over RockyDevExternals maven-script-interpreter Builds using <code>--without groovy</code> maven-wagon Builds using <code>--without scm</code> and <code>--without ssh</code> ~~mingw-cairo~~ ~~Hidden dependencies: <code>mingw-w64-tools , mingw-libxml2</code>~~ ~~mingw-gstreamer1~~ ~~Hidden dependencies: <code>mingw-w64-tools , mingw-libxml2</code>~~ ~~mingw-harfbuzz~~ ~~Hidden dep: <code>mingw-w64-tools</code>~~ ~~mingw-sqlite~~ ~~Hidden dependency: <code>mingw-pdcurses</code>~~ pandoc Need to bootstrap Haskell compiler + dependencies (worked on...) ~~perl-B-Hooks-EndOfScope~~ ~~Hidden dependency: <code>perl-Devel-Hide</code>~~ ~~perl-DateTime-Format-Builder~~ ~~Hidden dependency: <code>perl-DateTime-Format-IBeat</code>~~ ~~perl-DateTime-Locale~~ ~~Hidden dependency: <code>perl-File-ShareDir-Install</code>, <code>perl-Test-File-ShareDir</code>~~ ~~perl-Devel-CheckLib~~ ~~Hidden dependency: <code>perl-IO-CaptureOutput</code>~~ ~~perl-JSON-XS~~ ~~Worked for me with above deps (gmk)~~ ~~perl-MIME-Charset~~ ~~Worked for me with above deps (gmk)~~ ~~perl-Module-Install-ReadmeFromPod~~ ~~Hidden dependency: <code>perl-Module-Install</code>, <code>perl-Module-Install-AuthorRequires</code>, <code>perl-Module-Install-AutoLicense</code>, <code>perl-Test-InDistDir</code>~~ ~~perl-Params-ValidationCompiler~~ ~~Hidden dependency: <code>perl-Test2-Plugin-NoWarnings</code>, <code>perl-Test-Without-Module</code>~~ ~~perl-Readonly~~ ~~Hidden dependency: <code>perl-Module-Build-Tiny</code>, <code>perl-ExtUtils-Config</code>, <code>perl-ExtUtils-Helpers</code>, <code>perl-ExtUtils-InstallPaths</code>~~ ~~perl-Term-Size-Any~~ ~~Worked for me with above deps (gmk)~~ ~~perl-Unicode-EastAsianWidth~~ ~~Hidden dependency: <code>perl-Module-Package</code>, <code>perl-Module-Install-ManifestSkip</code>, <code>perl-Module-Manifest-Skip</code>~~ ~~perl-XML-Twig~~ ~~Hidden dependency: <code>perl-XML-XPathEngine</code>~~ perl-gettext Incorrect syntax for <code>Obsoletes</code> in spec file. Patch: https://github.com/N3WWN/rocky-debranding/tree/master/perl-gettext/ROCKY/CFG perl-DateTime-Locale Hidden dependency: <code>perl-Test-File-ShareDir</code> (added to list 101) perl-Module-Install-ReadmeFromPod Hidden dependency: <code>perl-Module-Install-AuthorRequires</code> and <code>perl-Test-InDistDir</code> (added to list 101) pytest Built by using <code>--define 'python3_pkgversion 38'</code>, Hidden dependency: <code>python-pluggy</code> &gt;= 0.12 (added to list 101 along with build note) rubygem-rspec-core Hidden dependency: <code>rubygem-thread_order</code> (Added to hidden dependency list 101). Needs to be built with <code>module_hotfixes</code> disabled so that it builds against <code>rubygems-2.7.6.2</code> (https://pkgs.dyn.su/rocky-8/artifacts/) rubygem-rspec-mocks Hidden dependency: <code>rubygem-thread_order</code> (Added to hidden dependency list 101). Needs to be built with <code>module_hotfixes</code> disabled so that it builds against <code>rubygems-2.7.6.2</code> (https://pkgs.dyn.su/rocky-8/artifacts/) rubygem-rspec-support Hidden dependency: <code>rubygem-thread_order</code> (Added to hidden dependency list 101). Needs to be built with <code>module_hotfixes</code> disabled so that it builds against <code>rubygems-2.7.6.2</code> (https://pkgs.dyn.su/rocky-8/artifacts/) testng Builds with <code>--without groovy</code> and <code>--without snakeyaml</code> xbean Built <code>--without equinox</code>, <code>--without spring</code> and <code>--without groovy</code> xmvn Built <code>--without gradle</code> <p></p> <p>External Dependencies:</p> Package Notes dom4j Wacky package.  It must be built using a <code>jaxen</code> package that is built with dom4j support, which is not present in CentOS.  We had to bootstrap the dom4j build using <code>jaxen</code> from Fedora 29, which is compiled with dom4j support. perl-* Be SURE to build against Perl-5.26 (default stream), NOT Perl-5.30 (latest version available).  Required disabling module_hotfixes=1 option to force default Perl.  Maybe fixed by MBS...? maven-* Requires presence of an /etc/maven.conf , fails if not found.  Added a blank one in mock: <code>config_opts['files']['/etc/java/maven.conf'] = \" \"</code> as a workaround <p></p> <p>Older SRPM Errors These failures were looked at, but are older versions of the packages, and likely not needed:</p> Package Notes device-mapper-multipath-0.8.3-3.el8 Newest version of systemd gives extra information about version number - \"239 (239-41.el8_3.1)\" vs. the plain old \"239\".  So a script fails.  Will build against older versions of Systemd.  We have a newer version of this package that works, it may be Ok to skip. device-mapper-multipath-0.8.3-3.el8_2.3 Newest version of systemd gives extra information about version number - \"239 (239-41.el8_3.1)\" vs. the plain old \"239\".  So a script fails.  Will build against older versions of Systemd.  We have a newer version of this package that works, it may be Ok to skip. samba-4.11.2-13.el8 Requires python3-ldb version lower or equal to 2.0.999, however actual python3-ldb version is 2.1.3. We have a newer version of this package that works, it may be Ok to skip. (samba-4.12.3) sssd-2.2.3-20.el8 ERROR: sssd -&gt; requires pam_wrapper rpm (https://git.centos.org/rpms/pam_wrapper.git) We have a newer version of this package that works, it may be Ok to skip. bcc-0.11.0-2.el8 Unable to find clang-libs even though the dependency that should satisfy this is installed.  Only works with clang 9 or lower, but newer bcc with clang 10 seems ok.  Probably fine to skip. tigervnc-1.9.0-15.el8_1 <code>xorg-server 1.20.7+</code> requires the impelementation of a ddxInputThreadInit function. A patch that fixes this is in the latest version at git.centos.org and works with <code>xorg-server 1.20.8-6</code>. This is what is currently in the repo. (https://git.centos.org/rpms/tigervnc/c/4a81f2fc8757bea7ff2c1d8b1fd881a2bed6803c?branch=c8) The version in vault.centos.org was built against <code>xorg-server 1.20.3-11</code>. Suggest skipping this package. sbd-1.4.1-3.el8 Build error is being caused by a change in Pacemaker (https://bugzilla.redhat.com/show_bug.cgi?id=1850078). This has been fixed in newer versions. Suggest skipping. xorg-x11-drv-intel-2.99.917-38.20180618.el8 Missing in spec file <code>BuildRequires: libXv-devel</code>. Added it to chroot install. CentOS Koji logs show that this hidden dependency was installed for their build (https://koji.mbox.centos.org/pkgs/packages/xorg-x11-drv-intel/2.99.917/38.20180618.el8/data/logs/i686/root.log) webkit2gtk3-2.24.4-2.el8_1 Looks like a build error that is being caused by <code>libglvnd</code> being present. The original build used different subpackages which contained header files. These packages have been removed and appear to be in libglvnd. (See https://bugs.webkit.org/show_bug.cgi?id=204108) <code>webkit2gtk3-2.24.4-2.el8_1</code> &lt;--- This version was built against an older version of mesa and libglvnd. Newer versions have been rebased to <code>webkit2gtk3 2.28</code>. I would recommend skipping this package since there is a newer one present which works with the latest libraries. ~~spirv-tools-2019.5-1.20200129.git97f1d48.el8~~ ~~The <code>spirv headers</code> have changed and this no longer builds against the latest version present. Suggest skipping since there are newer versions that build fine.~~ spice-gtk-0.37-1.el8 Missing <code>BuildRequires: libdrm-devel</code> in spec file. Is present in subsequent updates. Added <code>libdrm-devel</code> to chroot install and was built. vulkan-tools-1.2.131.1-1.el8 Looks like a lot of newer vulkan headers and dependencies, like spirv, have been updated. Building against newer headers and libraries results in a build failure. Found a Debian post where someone was trying to rebuild the same version that we are trying to rebuild and the resolution was that newer versions have fixed the build issue. Suggest skipping since newer version is present. vulkan-validation-layers-1.2.13{1, 5}.* Same issue as vulkan-tools. Newer vulkan headers and dependencies being present results in a build failure with this older version.  Suggest skipping."},{"location":"archive/legacy/packaging/","title":"Packaging","text":"<p>This page details the packaging efforts for the Rocky Linux project.</p>"},{"location":"archive/legacy/packaging/#git-branching","title":"Git Branching","text":"<p>Currently git.c.o has a very specific branch system for packages on the site. This is what we understand so far about it:</p> Name Description c8 \"Stable Branch\" c8-stream \"Stable Modules\" c8s* Stream only <p>With this in mind, our focus should be on the c8 and c8-stream branches. We are currently unsure of the plans for 2022 with RHEL 9's release on how the branches will look or if the git system will change entirely. But for now, this is what we are working with.</p>"},{"location":"archive/legacy/packaging/#original-proposal","title":"Original Proposal","text":"<p>The original idea was to pull directly from Red Hat. There may be a case where we should still be watching RHEL's releases and try to match them with what's going on with with git.c.o to make sure things are consistent. If they are, git.c.o may be the correct route.</p>"},{"location":"archive/legacy/packaging/#repositories","title":"Repositories","text":"<p>Below will likely be the base repositories for Rocky Linux</p> Repo Name Usage Enabled by default Notes BaseOS Base packages Yes AppStream Modularity Yes Devel Devel packages No BuildRoot contexts + missing devel packages CodeReady PowerTools/CodeReady No extras Extras Yes isos ISO No RockyTools No Possibly mix into Devel <p>Repositories that are likely SIG's that may be implemented.</p> Repo Name HighAvailibility cloud configmanagement messaging nfv opstools storage virt desktop"},{"location":"contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to the project. There are many ways you can contribute to Rocky Linux, such as helping users on forums, Mattermost/IRC, mail lists to debugging packages, hunting bugs, and finding fixes. Other ways to contribute may be joining a Special Interest Group.</p> <p>See below for some of the ways you can contribute. Note that this information is subject to change.</p>"},{"location":"contributing/#helping-other-users","title":"Helping other users","text":"<p>As with most online and/or open source communities, getting started usually begins at the \"joining\" phase and just participating in topics that interest you. Here's some basic things you can do to get you going:</p> <ul> <li> <p>Join our Mattermost and search for channels that interest you</p> </li> <li> <p>Join our IRC channels, which are bridged with Mattermost.</p> </li> <li> <p>Check out our forums and reddit</p> </li> </ul>"},{"location":"contributing/#helping-with-bug-hunting-finding-fixes","title":"Helping with bug hunting &amp; finding fixes","text":"<p>There are occasions that Rocky Linux users may find problems that may or may not be reproducible on our upstream distributions RHEL and CentOS Stream. We encourage users to use our bug tracker to file bugs. Note that this is not meant to be a support system. We encourage users to ask for support on our forums, Mattermost, or IRC.</p>"},{"location":"contributing/#helping-with-general-testing","title":"Helping with general testing","text":"<p>In the same vein as bug hunting, the Testing Team is one of the most active groups in the project, with all communication in Mattermost. They work together on testing various aspects of Rocky Linux, including refining their openQA system, their various methods of testing to find bugs, and test functionality. They are always open to more users that can help them with these efforts.</p>"},{"location":"contributing/#help-with-or-join-the-epel-effort","title":"Help with or join the EPEL Effort","text":"<p>EPEL (or Extra Packages for Enterprise Linux) is a special interest group within the Fedora Project that maintains and manages a set of additional packages for Enterprise Linux such as Red Hat Enterprise Linux, Rocky Linux, and many others. It is a very common repository that many users enable and start using right away to get access to quality packages that are not found in the base distribution.</p> <p>Getting involved with EPEL is a great way to make Rocky Linux (and other Enterprise Linux distributions) more useful. Check out their help guide for more information. You can also participate in their Matrix channels.</p>"},{"location":"contributing/#join-a-special-interest-group","title":"Join a Special Interest Group","text":"<p>Joining a Special Interest Group can help augment Rocky Linux in many ways, such as additional packages, certain hardware or architecture support (such as SBC hardware), and much more. Joining a SIG can be rewarding as well as overall beneficial to the Enterprise Linux ecosystem.</p> <p>You can join a Special Interest Group in Rocky Linux, CentOS, or even the Fedora Project (such as the aforementioned EPEL SIG).</p> <p>If you are wanting to join a Rocky Linux Special Interest Group: We highly encourage reading the getting started guide as well as the Special Interest Group of the wiki if you are looking to join a Rocky Linux SIG.</p> <p>If you are wanting to join a CentOS Special Interest Group: Check out their SIG page for some information on their SIG's, which may contain information on how to participate. Participating in a CentOS SIG helps all Enterprise Linux distributions, not just CentOS Stream. Most SIG packages in CentOS should work and be applicable to Rocky Linux and other Enterprise Linux distributions.</p>"},{"location":"contributing/#other-participation-and-contribution-information","title":"Other Participation and Contribution Information","text":"<p>For a more detailed guide on getting started for general contributions, see our getting started guide.</p>"},{"location":"contributing/git/","title":"Rocky Linux Git Contributor Agreement","text":"<p>Account Services helps the Rocky Enterprise Software Foundation keep track of contributors as well as the projects that they work on. This agreement goes over the RESF Git Service (Gitea) and the Rocky Linux GitLab instance, as well as their overall usage and what is expected for contributors.</p> <p>We require that contributors of Rocky (RESF) accept the following agreement, as it provides access to the RESF Git Service.</p> <p>Please read carefully before accepting this agreement.</p>"},{"location":"contributing/git/#preface","title":"Preface","text":"<p>The RESF Git Service (Gitea) is a core part of the Rocky Enterprise Software Foundation. It is used to host code/software that is under the RESF or provide the teams within the Rocky ecosystem to manage their own projects, code, wiki, and so on. It will also act as a mirror for some repositories from the Rocky GitHub organizations and in some special cases, mirrors from the Rocky Linux GitLab instance.</p> <p>The Rocky Linux GitLab instance is a core part of the Rocky Linux build ecosystem, and thus a mode of the development process for the distribution and available software. Being a user of the Rocky Linux GitLab allows you (the user) to create repositories, open issues, and collaborate on Special Interest Groups, and fixing all types of issues within the ecosystem, such as assets or failed patches.</p> <p>This agreement does not cover, nor affect the ability to contribute to any of the Rocky GitHub organizations.</p>"},{"location":"contributing/git/#general-guidelines","title":"General Guidelines","text":"<p>As a contributor, there are guidelines in which you (the user) and others must follow. Below are a list of general things to be aware of:</p> <ul> <li> <p>Moderation is enforced - As is done in the Rocky Linux MatterMost chat, it is   important to mind your language and word choice. Speak to others as you would   want them to speak to you.</p> </li> <li> <p>A valid GPG key must be uploaded and used to sign your commits. Signed   commits, as a general rule, are considered required. Expect that most git   repositories will have unsigned commits disabled.</p> </li> <li> <p>Accounts that are not in use or have not logged in may be deactivated or   disabled</p> </li> <li> <p>Do not treat any git service as a general purpose Rocky Linux bug tracker.   All issues should be tracked at our current bug tracker at   https://bugs.rockylinux.org. Issues pertaining to a project under RESF may   have other guidelines.</p> </li> </ul>"},{"location":"contributing/git/#expectations","title":"Expectations","text":"<p>As a contributor, there are expectations for you (the user) and others who work in and interact with the git service. Below are a list of expectations we have of you:</p> <ul> <li> <p>Do not create personal repositories - If the repository is not for the RESF,   Rocky Linux, a SIG, a \"people\" page / area of work, or planned Rocky   contributions, it should not be created.</p> </li> <li> <p>You will retain ownership of your contributions - Anything contributed by you   (the user) will not be taken away from you or your name removed from said   contributions, as outlined in the Rocky Open Source Contributor Agreement.</p> </li> <li> <p>Git is not a Rocky Linux bug tracker - All issues related to Rocky Linux    should be tracked at our current bug tracker. Depending on the SIG, issues   with the software or otherwise can be tracked either with their repositories   or the bug tracker. This does not stop you (the user) from opening issues or   PR's to improve or fix other issues without opening a bug report in most   circumstances.</p> </li> <li> <p>Users must have GPG keys assigned to their account and their commits signed   for specific repositories as configured.</p> </li> </ul>"},{"location":"contributing/git/#repositoryproject-management","title":"Repository/Project Management","text":"<p>Git software generally has repositories that holds code. Almost, if not all git software also allows a user to not only contribute to other repositories, but also have their own repositories that are directly connected to their profile. In both Rocky Git instances, while we encourage contributions and work on the many projects within, a personal repository connected only to you is discouraged in most circumstances.</p> <p>Below are some general ideas of what is allowed for repository management:</p> <ul> <li>Allowed: Forking repositories, creating pull requests where needed</li> <li>Allowed: Creating repositories (if permitted) in groups you are part of</li> <li>Allowed: Creating repositories in your namespace for \"people\" material (such            as wiki, pages, and other material)</li> <li> <p>Allowed: Creating repositories in your namespace that may potentially move to            or become a or part of a project within the Rocky ecosystem</p> </li> <li> <p>Discouraged: Creating repositories under your namespace for your own use or                consumption.</p> </li> </ul> <p>If the repository is planned to be moved under a team, SIG or another manner, this is a valid case for having repositories under your namespace. The user should request the move when ready by one of the following:</p> <ul> <li>Submit an issue in a meta repository if applicable</li> <li>Open a ticket in the bug tracker if a meta repository does not exist or one   is not appointed</li> <li>Request directly in a public mattermost channel or another applicable medium   such as email.</li> </ul> <p>Repositories that are found to be personal in nature and do not reflect a given project, SIG, use for a \"people\" site or set of material, or repository (such as a fork) within the Rocky ecosystem may be archived or deleted.</p>"},{"location":"contributing/git/#account-lifecycle","title":"Account Lifecycle","text":"<p>As a general rule of access, the RESF Git Service requires the signing of this agreement to gain access. For the Rocky Linux GitLab, this is not the case as the user also needs to be part of the \"gitusers\" group.</p> <p>While there are other groups that facilitate more finer grained access into the various projects and groups, all users (contributors) will need to have signed this agreement and in the case of GitLab, be part of \"gitusers\" to login.</p> <p>Direct sign-ups or local git accounts are not permitted and no exceptions will be granted.</p>"},{"location":"contributing/git/#obtaining-access-to-the-resf-gitea-instance","title":"Obtaining Access to the RESF Gitea Instance","text":"<p>A user obtains access to the RESF Gitea instance as long as the following conditions have been met:</p> <ul> <li> <p>The user accepts the relevant contributor agreements in Account Services</p> </li> <li> <p>The user accepts this agreement</p> </li> </ul>"},{"location":"contributing/git/#obtaining-access-to-the-rocky-linux-gitlab","title":"Obtaining Access to the Rocky Linux GitLab","text":"<p>A user obtains access to the Rocky Linux git as long as the following  conditions have been met:</p> <ul> <li> <p>The user accepts the relevant agreements in Account Services</p> </li> <li> <p>The user will be part of a Special Interest Group or other general   development</p> </li> <li> <p>The user or sig sponsor requests access to the \"gitusers\" group by   contacting a sponsor in MatterMost - These sponsors can be found in   the gitusers group in Account Services or at our wiki:   https://wiki.rockylinux.org/guidelines/git_guidelines/</p> </li> <li> <p>The user accepts this agreement</p> </li> <li> <p>Upon acceptance and review, user will be added to the \"gitusers\" group   in Account Services and their account will then be enabled in the GitLab   instance.</p> </li> </ul>"},{"location":"contributing/git/#requesting-removal-of-access","title":"Requesting Removal of Access","text":"<p>A user that has access to any Rocky git can, at any time, request their account to be removed. This can be done by logging into the Rocky Linux bug tracker at https://bugs.rockylinux.org, clicking \"Report Issue\", selecting the \"Account Services\" item, and then selecting \"Account Removal Request.\"</p> <p>Note that you can also request a full account closure. Please see the following link for more information.</p> <p>https://wiki.rockylinux.org/team/infrastructure/idm_pdr/</p>"},{"location":"contributing/git/#revocation-of-access","title":"Revocation of Access","text":"<p>A user's access to any Rocky Git can be revoked at any time. Access can be revoked for but not limited to any of the following reasons:</p> <ul> <li> <p>Repeated breach of guidelines and expectations as outlined in this agreement</p> </li> <li> <p>Breach of the Rocky Open Source Contributor Agreement</p> </li> <li> <p>Spam/Bot Accounts - An account that is found to spam or perform bot-like                       activities will be removed. This also applies to the bug                       tracking system.</p> </li> <li> <p>\"Trophy\" Accounts - An account that is found just to have access to any Rocky                       Git that has no plans for contributions and is using it                       as a way of a status symbol will have their access                       removed.</p> <pre><code>              This also applies to accounts that are solely to make\n              small/trivial changes that does not bring any benefits to\n              the packages, software, and code produced for Rocky as a\n              whole. Pull requests that are found to not improve the\n              state of function of a package, software, or code, as\n              a general rule, are denied.\n</code></pre> </li> </ul>"},{"location":"contributing/git/#acceptance","title":"Acceptance","text":"<p>To access the RESF Git Service, you must accept this agreement to signify you agree to the guidelines and expectations as laid out above.</p> <p>To join the \"gitusers\" group, you must accept this agreement first before a sponsor can add or request your addition to \"gitusers\".</p>"},{"location":"contributing/rosca/","title":"Rocky Open Source Contributor Agreement","text":"<p>This Open Source Contributor Agreement (\"Agreement\") is between you (as defined below) and Rocky Enterprise Software Foundation (\"we\" or \"us\"). This Agreement applies to all Contributions (as defined below) submitted by you to a project owned or managed by us (each, a \"Project\"). By clicking submit on our applicable Project portal, you agree to the terms and conditions of this Agreement. Your assent to this Agreement is a prerequisite to contributing to any Project.</p> <ol> <li> <p>Definitions. The terms \"you\" (or \"your\") shall mean the copyright owner or the individual or legal entity authorized by the copyright owner that is granting the licenses under this Agreement. For legal entities, the term \"you\" includes any entity making a Contribution and all other entities that control, are controlled by, or are under common control with that entity. \"Contribution\" means any work of authorship, including any software (in object code or source code), image, audiovisual work, or documentation, and any modifications or additions to an existing work, submitted by you in connection with any product or other item developed managed or maintained by a Project (collectively, such software and other items, \"Work\").  The term \"submitted\" means any act of sent to a Project or its representatives, including communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by or on behalf of a Project.  uploading, submitting or distribution</p> </li> <li> <p>IP License. You hereby grant to the Rocky Enterprise Software Foundation (RESF) and those who receive or contribute software or other materials distributed or managed by a Project, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license under any applicable intellectual property rights in the Contributions, to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute the Contributions and any derivative works thereof, including as part of the Work or any other software or materials arising out of or related to the Project to which your Contribution was submitted.</p> </li> <li> <p>Authority. You represent that you are legally entitled to grant the licenses specified above. If your employer or other entity that you are associated with has rights to intellectual property that you create which includes your Contributions, you represent that you have received authorization to make Contributions and grant the foregoing licenses on behalf of that employer or entity in accordance with this Agreement.</p> </li> <li> <p>Notification. You will notify us of any facts or circumstances of which you become aware that would make the foregoing representations inaccurate in any respect or would call into question the grants of rights hereunder.</p> </li> <li> <p>Miscellaneous. This Agreement is the exclusive agreement between the parties with respect to the subject matter hereof. We may freely assign this Agreement. This Agreement shall be governed by the laws of the state of California. Nothing in this Agreement shall be construed to create an employment or agency relationship between you and us or any other recipients or contributors of products or other items distributed or managed by a Project.</p> </li> </ol>"},{"location":"contributing/start/","title":"Getting Started","text":"<p>Contributing to Rocky Linux should be easy and straight forward for any user who wishes to participate or would like to contribute in any way. This could be through a Special Interest Group, or it could just be to the core Rocky Linux distribution.</p>"},{"location":"contributing/start/#purpose","title":"Purpose","text":"<p>This page goes over the basic steps to signing up for an account with our Rocky Account Services and other basics with interacting with the Rocky ecosystem.</p>"},{"location":"contributing/start/#start-guide","title":"Start Guide","text":"<p>This section will go over the very basics of signing up for an account and filling in basic information in Rocky Account Services.</p>"},{"location":"contributing/start/#creating-an-account","title":"Creating an Account","text":"<p>Creating and managing your Rocky account starts at Rocky Account Services.</p> <ul> <li>Go to the Rocky Account Services page and click the register tab</li> <li>Fill in the necessary boxes presented, such as user name, first and last name, and email address, and click \"register\"</li> <li>You will receive an activation email. Activate your account.</li> <li>Login to your account on the Rocky Account Services page</li> </ul>"},{"location":"contributing/start/#profile-information","title":"Profile Information","text":"<p>When you login, you will be on your profile. Click \"Edit Profile\" below your email address to make changes to your profile.</p> <p>It is highly recommended that you fill out the following information on the \"Profile\" tab:</p> <ul> <li>Locale</li> <li>Timezone</li> <li>Chat nicknames (if applicable)</li> <li>Your github/gitlab username</li> </ul> <p>By default, if your email address has an account on libravatar, you will automatically have a profile picture assigned. If you do not, you can create one by clicking the \"Change Avatar\" button in the profile tab.</p> <p>It is highly recommended that you fill out the \"SSH &amp; GPG Keys\" tab. Your ssh keys should sync to both the Rocky Linux GitLab and RESF Git Service.</p> <p>It is highly recommended that you add an OTP to your account.</p>"},{"location":"contributing/start/#signing-agreements","title":"Signing Agreements","text":"<p>While editing your profile, there is an \"Agreements\" tab with all of the current agreements for Rocky. It is highly recommended that the following is reviewed and signed:</p> <ul> <li>Rocky Open Source Contributor Agreement</li> <li>Rocky Git Contributor Agreement</li> </ul> <p>See the details section for more information.</p>"},{"location":"contributing/start/#requesting-access-to-groups-in-rocky-account-services","title":"Requesting Access to Groups in Rocky Account Services","text":"<p>Groups in Rocky Account Services define roles, access, membership to a group, or any combination of the three. These groups can be for a Special Interest Group or a team in the Rocky Linux project or RESF ecosystem.</p> <p>In general, the baseline steps to requesting access starts here:</p> <ul> <li>Create your account in RAS</li> <li>Fill out your profile</li> <li>Sign the appropriate agreements</li> <li> <p>Find the group or groups you wish to join and find the sponsors</p> </li> <li> <p>Check out the Special Interest Group page</p> </li> <li> <p>Check out the IRC and Chat Page page</p> </li> <li> <p>Contact the sponsor directly or send a message to appropriate channel for the group</p> </li> </ul> <p>Each group will have different procedures for becoming part of the groups within Rocky Account Services. Most groups will require agreement(s) to be signed, others may be on a per-request basis. Each group should have \"sponsors\" that can be contacted with information on joining the groups. They can be contacted in the Rocky Linux Mattermost.</p> <p>Some sponsors may have additional documents they'll send you from the main wiki or their dedicated wiki that will detail the procedure they expect you to follow.</p>"},{"location":"contributing/start/#details","title":"Details","text":"<p>This section will go over a more detailed overview of various aspects of the Rocky Account Services as well as pieces of infrastructure you may interact with.</p>"},{"location":"contributing/start/#agreements","title":"Agreements","text":"<p>Agreements in Rocky Account Services are there to show that you understand and agree to the terms in how you are expected to use any Rocky-related service.</p> <p>You will find that 100% of the time, you will be required to sign at least one of the agreements, and that's the <code>Rocky Open Source Contributor Agreement</code>. If you plan on utilizing git.rockylinux.org or git.resf.org (as most contributors will), signing of the <code>Rocky Git Contributor Agreement</code> is a requirement.</p> <p>Before a sponsor or a team leader will add you to a group, they will have the ability to check your profile to verify that you have signed the appropriate agreements before proceeding. In the event your profile is set to private, this information may be requested from Core/RelEng. If you do not or cannot agree to the terms, you will not be able to contribute to any Rocky project. Even so, this does not stop you from contributing to github repositories at both the Rocky Linux github organization repositories of the RESF github organization repositories.</p>"},{"location":"contributing/start/#pull-requests","title":"Pull Requests","text":"<p>Should have:</p> <ul> <li>All commits GPG signed</li> <li>Head repo either branched from or rebased onto the development branch</li> <li>Any applicable Rocky Account Services agreements signed</li> </ul> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"events/","title":"Come meet Rocky Linux!","text":"<p>This is a list of approved events where Rocky Linux will have a presence.</p> Date Event Location Sponsor Level Participation Type Notes February 1-2 CentOS Connect Brussels, Belgium Sponsor Annual Planning Infrastructure Team February 3-4 FOSDEM Brussels, Belgium Attendee Exhibitor Booth Louis Abel, Krista Burdine, Pablo Greco, Neil Hanlon, Antoine LeMorvain, Sharif Nagy, Wale Soyinka March 14-17 SCaLE 21x Pasadena, CA, USA Silver Sponsor Exhibitor Booth, BOF Krista Burdine, Wale Soyinka, Steven Spencer April 12-13 Texas Linux Festival Austin, TX, USA Gold Sponsor Exhibitor Booth Speaker Team: Krista Burdine with Neil Hanlon and Chris Stackpole April 26-28 LinuxFest Northwest Bellingham, WA, USA Community Sponsor Exhibitor Booth Speaker: Neil Hanlon June 9-11 SouthEast LinuxFest Charlotte, NC, USA Silver Sponsor Exhibitor Booth, Friday Night After Party Speakers: Louis Abel, Krista Burdine, Neil Hanlon, Joseph Tate July 19-24 GUADEC Denver, CO, USA Supporter + Lanyard Sponsor Exhibitor Booth Speaker Krista Burdine August 7-11 Flock to Fedora Rochester, NY, USA Gold Sponsor Community Development August 14 Boston Python User Group Boston, MA, USA Guest Host Speaker Neil Hanlon September 24-28 Nerdearla 10th Anniversary Buenos Aires, Argentina Bronze Sponsor Booth Speaker Krista Burdine October 22-23 RISC-V Summit NA Santa Clara, CA, USA Attendee Developer Development Neil Hanlon, Louis Abel October 27-29 All Things Open Raleigh, NC, USA Attendee Community Development Speaker Krista Burdine November 15-16 Open.Libre.Free (The Ohio Linux Festival) Columbus, OH, USA Sponsor Exhibitor Booth Speakers: Anthony Navarro, Maxine Hayes November 17-22 SuperCompute 2024 (SC24) Atlanta, GA, USA Attendee Colocated booth with sponsor CIQ Neil Hanlon, Krista Burdine"},{"location":"guidelines/bug_tracker_guidelines/","title":"Bug Tracker Guidelines","text":"<p>These set of guidelines are what to expect using the Bug Tracker system. While we do not require contributors or bug reports to sign this as an agreement in account services nothing is stopping you from doing so to show confirmation that you have.</p>"},{"location":"guidelines/bug_tracker_guidelines/#preface","title":"Preface","text":"<p>Mants is a core part of the Rocky Linux distribution. Whether you're a bug reporter, a contributor, or perhaps on the Release Engineering team, the Bug Tracker is a utility for everyone to be able to read and engage with others to find solutions to issues affecting the software that is shipped and available in Rocky Linux.</p>"},{"location":"guidelines/bug_tracker_guidelines/#general-guidelines","title":"General Guidelines","text":"<p>As a reporter, there are guidelines in which you (the user) and others must follow when reporting issues or bugs on the Bug Tracker. Below are some things to be aware of:</p> <ul> <li> <p>Moderation is enforced - As is done in the Rocky Linux MatterMost chat, it is   important to mind your language and word choice. Speak to others as you would   want them to speak to you.</p> </li> <li> <p>The Bug Tracker is not a place for support - The Bug Tracker is meant for   issues, bugs, and problems with the packages and software that is provided in   Rocky Linux. Tickets opened that are asking for support on the operating   system or software will be closed. You are encouraged to go to our subreddit,   Libera IRC channel (#rockylinux), mattermost, or our forums.</p> </li> <li> <p>Custom compiled software and libraries, including those that either replace or   live side-by-side with system packages, is not supported. Majority, if not all   of those reports will be closed.</p> </li> </ul>"},{"location":"guidelines/bug_tracker_guidelines/#expectations","title":"Expectations","text":"<p>As a reporter, there are expectations in which you (the user) and others should adhere to in order to keep the queues clean and consistent, as well as the the reports readable so that the responsible party can address the issue in a proper manner.</p> <ul> <li> <p>Ensure your report goes to the correct project - There is a list of projects   that accept bug reports or issues. The drop down is on the top right. Choose   the one most appropriate to your issue.</p> </li> <li> <p>Ensure that you provide relevant information - When submitting a report that   may be a bug or issue, ensure that you provide relevant logs and output that   can help the responsible parties to address your issue. This includes:</p> <ul> <li>Logs from /var/log</li> <li>journalctl logs</li> <li>Console output in your shell/session</li> <li>An archive created by sosreport</li> <li>Patch files or workarounds</li> </ul> </li> </ul> <p>Do NOT attempt to submit arbritrary scripts as they will be rejected. This   includes but is not limited to sh, py, pl files.</p> <ul> <li>Do not submit support questions - The Bug Tracker is not a support desk; as   such the tickets will be closed if they are asking for assistance or support.   You are recommended to go to our reddit, Libera IRC channel (#rockylinux),   or our forum.</li> </ul>"},{"location":"guidelines/bug_tracker_guidelines/#types-of-tickets","title":"Types of Tickets","text":"<p>While reporting bugs and issues are common with bug trackers, the tracker also accepts other reports. Such as:</p> <ul> <li> <p>Account Removal - If you are requesting your account be removed or disabled,   this can be done in the Account Services section of the bug tracker.</p> </li> <li> <p>GitLab Request - There may be patch repos missing or something else may be   requested that involves a group or even a SIG.</p> </li> <li> <p>Rocky Services - This could be the bug tracker itself, the wiki, or other   pieces of infrastructure.</p> </li> </ul>"},{"location":"guidelines/git_guidelines/","title":"Git Guidelines","text":"<p>This document covers how the Rocky Enterprise Software Foundation (RESF) handles the use of Git in the ecosystem for the RESF and its projects such as Rocky Linux. It contains information about how various teams and the community interact and work with Git, as well as expectations and requirements.</p> <p>Note</p> <p>Usage of Git services hosted by the RESF are subject to the Rocky Git Contributor Agreement</p>"},{"location":"guidelines/git_guidelines/#contact-information","title":"Contact Information","text":"Owner Release Engineering (SIG/Core) / Infrastructure Mattermost Contacts <code>@label</code> <code>@mustafa</code> <code>@skip77</code> <code>@sherif</code> <code>@pgreco</code> <code>@neil</code> <code>@tgo</code> Mattermost Channels <code>~development</code> <code>~infrastructure</code> IRC Channels <code>#rockylinux-devel</code> <code>#rockylinux-infra</code> IRC Contacts <code>Sokel</code> <code>neil</code> <code>tg</code>"},{"location":"guidelines/git_guidelines/#general-information","title":"General Information","text":"<p>Git is a core component of the Rocky Linux build ecosystem, RESF projects, and thus a mode of the development process for the distribution and available software.</p> <p>Gitea is used for the RESF, its projects, its code, mirrored repositories, and potentially other components.</p> <p>GitLab is the software currently used to storing mostly RPM spec files, patches, configurations for debranding/modification to packages, as well as some scripts/utilities. Generally source code does not live here with the exception of src-git scenarios.</p> <p>GitHub is used for the RESF and Rocky Linux project organizations, which may contain branding, scripts/tools/utilities, or a handful of other useful code (such as ansible). There may also be forks of upstream projects (such as mock) to handle upstreaming changes to the Fedora Project (like EPEL).</p>"},{"location":"guidelines/git_guidelines/#expectations","title":"Expectations","text":"<p>This section goes over the expectations of using a Git service.</p>"},{"location":"guidelines/git_guidelines/#general-expectations","title":"General Expectations","text":"<p>Most of this information is covered in our <code>Git Contributor Agreement</code>, which generally covers the RESF Git Service and Rocky Linux GitLab. However, we are duplicating the information here for all readers.</p> <ul> <li>Moderation is enforced - As is done in the Rocky Linux Mattermost chat, it is important to mind your language and word choice whether in Git issues or the Bug Tracker.</li> <li>A valid GPG key must be uploaded and used to sign your commits - Signed commits, as a general rule are required. Expect that most projects will have unsigned commits disabled.</li> <li>Do not treat git as an issue tracker - All issues for Rocky Linux should be tracked at our Bug Tracker. As of this writing, issues are opened for build issues.</li> <li>Do not perform your work or changes on a system that is owned by your employer.</li> <li>Creating personal projects are discouraged (see exceptions)</li> <li>Ensure that your software or work are of a valid open source license (see related links above)</li> </ul>"},{"location":"guidelines/git_guidelines/#dos-and-do-nots","title":"Do's and Do not's","text":"<p>Below are a list of do's and do not's as part of our Git, whether some are duplicated information above or below this subsection. They are placed here for further emphasis.</p> <p>DO:</p> <ul> <li>Fork repositories and create pull requests where needed</li> <li>Ensure software/source code brought into the Git services are of a valid open source license</li> <li>Upload a valid GPG key and sign your commits</li> </ul> <p>DON'T:</p> <ul> <li>Treat any Git service as a Rocky Linux issue tracker</li> <li>Create personal projects under your namespace (see exceptions)</li> <li>Perform your work or changes on a system that is owned by your employer</li> </ul>"},{"location":"guidelines/git_guidelines/#exceptions","title":"Exceptions","text":"<p>Exceptions to personal projects under your namespace would be for code that will be utilized in some way for the Rocky ecosystem, whether directly, indirectly (e.g., for people.rocky). This can also be the case of using Peridot as a COPR-like service.</p>"},{"location":"guidelines/git_guidelines/#source-code-for-sigs-or-other-software","title":"Source Code (for SIGs or other software)","text":"<p>To be populated.</p>"},{"location":"guidelines/git_guidelines/#sig-groups-projects","title":"SIG Groups + Projects","text":"<p>This section covers SIG groups and projects that exist within the Rocky Linux git service. SIGs may have RPM specs, scripts, or even their own software. The sections below will cover the format and expectations of these groups and projects.</p>"},{"location":"guidelines/git_guidelines/#general-overview","title":"General Overview","text":"<p>A SIG is a Special Interest Group(s). SIGs are smaller groups within the Rocky community that focus on a small set of issues or exist solely for the awareness or focus on topics. This section does not cover the requirements of a SIG's existence.</p> <p>It is typical that a SIG may end up having repositories with packages that can add-on to a Rocky Linux system. However, some SIGs do not function in this manner. In the case that they do function in this manner, they will typically have a section in Rocky Linux GitLab under the SIG group.</p> <p>A SIG will always have an organization at the RESF Git Service.</p>"},{"location":"guidelines/git_guidelines/#structure-packaging","title":"Structure (Packaging)","text":"<p>Using the RPM Structure as a guide, the general idea is the same. A <code>patch</code> group may not be needed, but could be useful. An example of how a SIG could set up their group could be like this:</p> <pre><code>.\n\u2514\u2500\u2500 SIG\n    \u2514\u2500\u2500 messaging\n        \u251c\u2500\u2500 modules\n        \u251c\u2500\u2500 rpms\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 somemq\n        \u2514\u2500\u2500 somemq\n</code></pre> <p>In this example, source code for the software <code>somemq</code> would be under the <code>messaging</code> subgroup under <code>SIG</code>. And then an RPM spec for that software, for that SIG, would sit under <code>rpms</code> as expected. However, you can further organize this further if you wish.</p> <pre><code>.\n\u2514\u2500\u2500 SIG\n    \u2514\u2500\u2500 messaging\n        \u251c\u2500\u2500 modules\n        \u251c\u2500\u2500 rpms\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 somemq\n        \u2514\u2500\u2500 sources\n            \u2514\u2500\u2500 somemq\n</code></pre> <p>This isn't a strict requirement, but could be good for organization purposes.</p>"},{"location":"guidelines/git_guidelines/#access-to-a-sig-group","title":"Access to a SIG Group","text":"<p>SIG group access is typically obtained by contacting a sponsor (as found in Account Services) and requesting access to be a part of the SIG. Once you have been added to the group as well as the <code>gitusers</code> group, you will be able to do work within the SIG.</p>"},{"location":"guidelines/git_guidelines/#other-groups","title":"Other Groups","text":"<p>Other groups generally will not exist in the Rocky GitLab instance. Rather, they will (and should) exist in the RESF Gitea instance instead. These groups could contain repos for:</p> <ul> <li>A team's source code</li> <li>A team's set of tools or scripts</li> <li>Other miscellanous metadata</li> </ul> <p>Examples of groups would be:</p> <ul> <li>Infrastructure -&gt; This group contains repositories related for rocky infrastructure</li> <li>releng -&gt; Release Engineering repositories and code</li> <li>sig_core -&gt; Core Special Interest Group specifically for code and items related to Rocky Linux development and infrastructure</li> </ul>"},{"location":"guidelines/git_guidelines/#rpm-system","title":"RPM System","text":"<p>This section goes over the RPM system, such as importing, patching, and how it ultimately gets built into a binary RPM. This happens on git.rockylinux.org.</p>"},{"location":"guidelines/git_guidelines/#current-rpm-structure","title":"Current RPM Structure","text":"<p>The current RPM structure is designed to allow the orchestrator tool to import sources and then patch them accordingly if required. It also allows AppStream modules to be supported and manageable with their required YAML files.</p> <p>There are four primary groups:</p> <ul> <li>original: contains RPM spec data that are from Rocky, such as release and logos</li> <li>staging: contains RPM spec data for the staging channel, such as testing the tools in that they operate and function correctly, and to test the build process.</li> <li>release: contains RPM spec data for the release channel, which would be the actual release that users will consume.</li> </ul> <pre><code>.\n\u251c\u2500\u2500 original\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 patch\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 rpms\n\u251c\u2500\u2500 release\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 patch\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 rpms\n\u2514\u2500\u2500 staging\n    \u251c\u2500\u2500 modules\n    \u251c\u2500\u2500 patch\n    \u2514\u2500\u2500 rpms\n</code></pre> <p>Each group has three subgroups:</p> <ul> <li> <p>modules group is used to store repos that hold YAML files. The YAML files define the module that will exist in the AppStream repository.</p> </li> <li> <p>patch group is used to hold the configuration for distrobuild to pick up and patch or perform other tasks as it pertains to the RPM.</p> </li> <li> <p>rpms group is used as the final output/import of the RPM spec file and patches after it has been patched (if applicable) and is then used/picked up to build the SRPM and send to koji for build.</p> </li> <li> <p>src group (though not required) can be where a package's source can exist to help create patches if need be.</p> </li> </ul> <p>Note that SIGs or projects that plan on using the build system should be following this methodology.</p>"},{"location":"guidelines/git_guidelines/#rpm-patching-structure","title":"RPM Patching Structure","text":"<p>For the patch configuration, the layout must be followed strictly to ensure a SPEC file or its sources are modified accordingly. Here's an example below.</p> <pre><code>.\n\u2514\u2500\u2500 ROCKY\n    \u251c\u2500\u2500 CFG\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 browser.cfg\n    \u2514\u2500\u2500 _supporting\n        \u251c\u2500\u2500 Bug-1238661---fix-mozillaSignalTrampoline-to-work-.patch\n        \u251c\u2500\u2500 Bug-1526653---fix_user_vfp_armv7.patch\n        \u2514\u2500\u2500 firefox-rocky-default-prefs.js\n</code></pre> <p>At the top level, the ROCKY folder will hold two additional folders, CFG and _supporting.</p> <p>The CFG directory will contain files that end in <code>.cfg</code> that tell the orchestrator what to do to the imports coming in the form of an action.</p> <pre><code>Action {\n    file: \"OriginalFile\"\n    with_file: \"ROCKY/_supporting/RockyReplaceFile\"\n}\n</code></pre> <p>This goes into further detail at our Debrand HowTo page.</p>"},{"location":"guidelines/git_guidelines/#branch-strategy","title":"Branch Strategy","text":"<p>Typically when making a patch repo, the <code>main</code> branch is where everything should be. However, there are cases where this is not sufficient, especially in the case of major release version differences. Here's a general idea/example of how the branches will work:</p> <ul> <li><code>main</code> is the universal branch that is always used during a patch</li> <li><code>r8</code> is the Rocky 8 branch, specific to patching the corresponding RPM specs/patches for 8</li> <li><code>r9</code> would be for Rocky 9</li> <li><code>r9-beta</code> would be for Rocky 9 beta</li> <li>etc...</li> </ul> <p>In practice when the patch process occurs, the <code>main</code> branch is parsed first and applied, and then if there is a corresponding <code>rX</code> branch, it would apply that next. There are cases too where <code>main</code> can be empty and you'll just have an <code>rX</code> branch. This is acceptable and will still work.</p> <p>Note that with this strategy, merging branches is never recommended in most circumstances. Try to keep them separated where as best as possible and where absolutely needed. The only time branches should be merged or force-pushed is when going from <code>rXlh</code> to <code>rX-beta</code> or <code>rX-beta</code> to <code>rX</code>.</p>"},{"location":"guidelines/git_guidelines/#submitting-a-potential-patch","title":"Submitting a Potential Patch","text":"<p>There are a few ways to submit a patch to fix build issues in the main distribution. This section will break down some examples of ways you can put in a fix request for review.</p>"},{"location":"guidelines/git_guidelines/#patch-repo-doesnt-exist","title":"Patch Repo Doesn't Exist","text":"<p>If there is a package failing, or you are looking to submit a patch for example to allow something to compile correctly on another architecture (e.g., <code>armv7</code>/<code>armhfp</code>), or perhaps you found a piece of the base that was not debranded properly, generally a bug report should be opened at our Bug Tracker with relevant information and logs. Opening a project under your namespace can be done and can eventually be transferred in into <code>staging</code> after review.</p>"},{"location":"guidelines/git_guidelines/#patch-repo-exists","title":"Patch Repo ExistsResources","text":"<p>If there is a package failing because of a failing current patch, or a new patch is required, perhaps debranding must occur, you generally:</p> <ol> <li>Fork the repo into your namespace</li> <li>Make the relevant changes</li> <li>Apply for a merge request/pull request</li> </ol> <p>An appropriate bug tracking ticket should be opened, if not opened already (or automatically) to ensure there is documentation for this change.</p> Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"guidelines/maillist_guidelines/","title":"RESF Mailing List Guidelines","text":""},{"location":"guidelines/maillist_guidelines/#before-posting-to-a-list","title":"Before Posting to a list","text":"<p>There are a number of ways you can find help within your system. If you don't find the answer there, try to look into the list archives before posting a question. This is a high volume list and chances are that someone has already had the same problem you are now trying to fix. See Useful Resources below for a list of places to try. Refer to this presentation on mail etiquette that you should follow.</p>"},{"location":"guidelines/maillist_guidelines/#still-stuck","title":"Still stuck?","text":"<p>If you cannot find an answer after searching the archives or by using the resources described below, then writing to the list is a good idea. The guidelines below were written and adapted to make sure your message gets the attention it needs to be read and answered.</p> <p>Keep in mind that while there may be many users on the lists, your post may go unanswered, even when following these guidelines. (See section below re: nudging) Posting to the list should not be considered a guaranteed method of receiving support.</p>"},{"location":"guidelines/maillist_guidelines/#posting-guidelines","title":"Posting Guidelines","text":""},{"location":"guidelines/maillist_guidelines/#be-courteous","title":"Be Courteous","text":"<p>Be courteous and polite to fellow members in the list. Never swear or be rude to anyone. When you interact with people on any of the RESF mailing lists (or indeed on any communication platform), you are expected to act in accordance with our Community Charter and its values.</p>"},{"location":"guidelines/maillist_guidelines/#keep-it-short","title":"Keep it Short","text":"<p>Most RESF Lists maintain a maximum message length of 40 kilobytes. Remember that your message will be copied potentially thousands of times when being delivered into people's mailboxes. It is wise to keep your messages as short as possible.</p> <p>Avoid including log output (select only the most relevant lines, or place the log on a website or in a pastebin instead) or excessively quoting previous messages in the thread (trim the quoted text down to the most recent/relevant messages only).</p>"},{"location":"guidelines/maillist_guidelines/#no-attachments","title":"No attachments","text":"<p>Attachments to email make the messages much bigger. They create an enormous amount of extra Internet traffic when a mailing list sends the message and attachments to thousands of people worldwide. They also can create problems for the recipients, who may be limited to low-bandwidth connections. A reader may not know they are downloading an email with a very large attachment until it is too late, and they might be blocked from getting other mail until they finish that download, which makes them frustrated.</p> <p>Don't use attachments to your email. Instead, post a file in a pastebin, or elsewhere on the web, and include a URL to that file in your email, not the file itself.</p> <p>Lastly, we have to store the attachments. We don't want to store too many :-)</p>"},{"location":"guidelines/maillist_guidelines/#starting-a-new-subject","title":"Starting a New Subject","text":"<p>When you send in a new topic, do not start by replying to an existing message, but rather, start a new message to \"rocky@lists.resf.org\". This keeps messages organized by thread, for people who like to use threads (on high-volume mailing lists like this one, threads can be a great convenience).</p> <p>Furthermore, please do not recycle messages. Recycling messages is replying to an existing thread by changing the thread name. This creates confusion and diverts the number of people replying to the topic.</p> <p>For details see https://web.archive.org/web/20070219193422/http://mm.bbspals.org/message-recycling/</p>"},{"location":"guidelines/maillist_guidelines/#write-a-good-subject-line","title":"Write a Good Subject Line","text":"<p>Make a subject line that clearly tells us what you need. This is a point that can't be overemphasized. Try \"Crash after setting up disks in Rocky 8.5\" instead of \"Can't install!!\" Why? So that people with certain skills, looking for someone to help, will notice your message. That helps you get help from the right people quickly.</p> <p>On a high volume lists, many people just skim through the subject lines and only read the messages that catch their interest. So, by creating a good subject line, you increase the chances that your message is actually going to be read and eventually answered.</p>"},{"location":"guidelines/maillist_guidelines/#if-you-are-replying-to-a-message","title":"If You Are Replying to a Message","text":"<p>Make sure we can tell what you are replying to. Place each part of your reply after the text it addresses (i.e., NO Top-Posting, please see \"Wikipedia - Top Posting\" and links therein for more on this). Most mail readers automatically put a '&gt;' character in front of each replied-to line. It gives a conversational flow to the text, and people know what you're replying to. Trim irrelevant material. It makes it easier to read your reply and helps the reader to stay on subject. Using bottom, interleaved posting is recommended as it is more organised.</p> <p>The fact that you're sending the email from a smart-phone or similar device doesn't invalidate those guidelines. Please consider sending the reply at a later time when you have access to your regular email system or send a private reply instead.</p>"},{"location":"guidelines/maillist_guidelines/#replying-to-digests","title":"Replying to Digests","text":"<p>In a some high volume lists, you may choose to receive mails in digested mode. However when replying to such messages, please avoid just hitting the reply button. This creates meaningless messages like \"Re: Rocky-Mirror Digest, Vol 7, Issue 193\" which does not reflect what you are talking about. Please do the following:</p> <ol> <li>edit the subject to reflect what topic you are talking about</li> <li>snip out all the irrelevant parts of the digest other than the post to which you are directly replying</li> </ol>"},{"location":"guidelines/maillist_guidelines/#let-us-know-when-your-question-is-answered","title":"Let Us Know When Your Question is Answered","text":"<p>When you get a solution to your question (or find it yourself after posting to the list), reply to your original e-mail describing what solved your problem, adding a [SOLVED] to the end of the subject line. This will let people know that you don't need help any more with this and can look for other posts to help. Also, it makes a search in the archives easier when someone has a related problem in the future.</p>"},{"location":"guidelines/maillist_guidelines/#commercial-messages","title":"Commercial messages","text":"<p>Commercial messages, including job postings, are not currently allowed on the RESF mailing lists.</p>"},{"location":"guidelines/maillist_guidelines/#behavioral-guidelines","title":"Behavioral guidelines","text":"<p>If a mail has offended you personally, please send a private message to the person expressing how you feel, instead of sending it to the mailing list.</p> <p>Please remember that we have members from all genders and nationalities. No gender abuse is allowed on the list, and do not include any gender specific slang in your posts. Also do not indulge in racial or regional criticism. This is a very serious violation.</p> <p>Be careful when using sarcasm and humour. Without face to face communications your joke may be viewed as criticism. When being humourous, use emoticons (smileys) to express humour. (tilt your head to the left to see the emoticon smile) :-) = happy face for humour.</p> <p>Behave in a professional manner in the mailing lists. Any mistake could put you under the scanner and at the receiving end of much rebuke.</p> <p>While uncommon, list moderators and administrators do monitor the lists and will take action on users found to be in violation of these guidelines.</p>"},{"location":"guidelines/maillist_guidelines/#do-not-cross-post","title":"Do not Cross Post","text":"<p>Avoid posting to multiple lists simultaneously. Pick a mailing list that is most suitable for your post and just use that. CC'ing multiple lists should be avoided.</p> <p>Post to the the mailing list that is most suited to your purpose and then just copy the link to that page or mailing list and paste to all the other mailing lists you want to post to. This will reduce the amount of data duplicated - only one copy will be accessed by all who read it.</p> <p>http://en.wikipedia.org/wiki/Crossposting</p>"},{"location":"guidelines/maillist_guidelines/#stay-on-topic","title":"Stay on-topic","text":"<p>Make sure your topic is relevant to the chosen mailing list. For example, sending a political petition not related to the purpose of the list. In turn, replying on list to an off-topic post tends to magnify the problem.</p>"},{"location":"guidelines/maillist_guidelines/#unsubscribing","title":"Unsubscribing","text":"<p>To unsubscribe from the list you can visit the web page for the list at https://lists.resf.org or by sending an email to <code>$listname-leave@lists.resf.org</code></p>"},{"location":"guidelines/maillist_guidelines/#use-the-common-language","title":"Use the common language","text":"<p>Unless you are a RESF mailing list that is dedicated to users speaking that particular language, communicate in English. Other languages might be ignored merely because the users in these lists might only know English or use it as their common language. Refer to the Communicating and getting help page for more information on other mailing lists.</p> <p>Use standard language and not colloquial or regionally accepted abbreviations. Visit http://www.jargon.org for more such acronyms.</p> <p>Use the universally accepted standard English. Always do a spell check before mailing to the list. Grammar doesn't matter as long as one is understood. Do not use SMS language. Do not use dots(\".....\") to conclude the sentences as is common across social networks.</p>"},{"location":"guidelines/maillist_guidelines/#avoid-long-signatures-and-disclaimers","title":"Avoid long signatures and disclaimers","text":"<p>We find value in your main content rather than signatures. One or two lines would be optimal to convey messages that must be included in your signature and avoid huge disclaimers describing how your mail is private and confidential while sending things to the mailing list.</p>"},{"location":"guidelines/maillist_guidelines/#no-chain-letters","title":"No chain letters","text":"<p>Never send chain letters to the mailing list. A mail simultaneously sent to more than 10 users will not reach the list. This is to eliminate possible spammers/bulk mailers to reach the list.</p>"},{"location":"guidelines/maillist_guidelines/#do-not-use-all-capitals","title":"Do not use ALL CAPITALS","text":"<p>Using capital letters in your sentences is considered shouting. It is considered as being rude. If you want to emphasize on something use this or this.</p>"},{"location":"guidelines/maillist_guidelines/#avoid-repetitive-posting","title":"Avoid repetitive posting","text":"<p>Often people helping on the mailing lists are volunteers who, just like you, have busy lives. If you do not get a response within a few minutes or hours, avoid re-posting the same question repeatedly. Give a minimum of 24-48 hours for an answer, and if you don't have one by then, give a \"nudge\" to the list by replying to (not re-posting) your original message.</p> <p>Please read all your mails before replying to a mail. Someone may have already answered it.</p>"},{"location":"guidelines/maillist_guidelines/#useful-resources","title":"Useful resources","text":""},{"location":"guidelines/maillist_guidelines/#getting-help-from-your-system","title":"Getting Help From Your System","text":"<p>There are many ways to get information from your system. Get a terminal window by right clicking on the desktop. In the window type one of the following (without the '$', and substitute application-name with the name of the application you are having trouble with).</p> <pre><code>$ man application-name\n$ info application-name name\n$ locate stuff-you-want-to-know-about\n$ rpm -qd packagename\n</code></pre>"},{"location":"guidelines/maillist_guidelines/#documentation","title":"Documentation","text":"<p>The Rocky Linux Documentation Team is working hard to provide excellent documentation for the project. You can see their efforts in:</p> <ul> <li>Rocky Linux Documentation Index</li> <li>Rocky Linux Release Notes</li> <li>Rocky Linux Installation Guide</li> <li>Rocky Linux Migration Guide</li> </ul> <p>Rocky Linux is also based on Red Hat Enterprise Linux, so RHEL documentation should be helpful for users of EL distributions like Rocky.</p> <ul> <li>Red Hat Documentation Index</li> <li>Red Hat Enterprise Linux Manuals</li> </ul>"},{"location":"guidelines/maillist_guidelines/#list-archives","title":"List Archives","text":"<p>Mailing list archives can be browsed using Hyperkitty at the link below:</p> <ul> <li>Lists.resf.org Archives</li> </ul>"},{"location":"guidelines/maillist_guidelines/#mailing-list","title":"Mailing List","text":"<p>If you encounter any issues or problems regarding a mailing list setup or its operation, please contact the list administrators rather than posting to the list about the problem. For lists on resf.org, you may reach the list owners at $listname-owner@lists.resf.org. There is a link to the -owner address at the bottom of the listinfo page for each list.</p>"},{"location":"guidelines/maillist_guidelines/#search-it","title":"Search It!","text":"<ul> <li>https://duckduckgo.com</li> <li>https://google.com</li> </ul> <p>Try to narrow down search terms using a list name (e.g. <code>rocky users</code>) or by including site:lists.resf.org in your search query, which would search all the archives.</p>"},{"location":"guidelines/maillist_guidelines/#acknowledgements","title":"Acknowledgements","text":"<p>This document includes (in part or in whole) content adapted from Fedora's Mailing List Guidelines. We thank them for their continued work on these guidelines and commitment to nettiquite. Please see their own acknowledgements for more information</p>"},{"location":"include/content_bottom/","title":"Content bottom","text":"Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"include/releng/resources_bottom/","title":"Resources bottom","text":"Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"include/releng/version_table/","title":"Version table","text":"Rocky Linux 8Rocky Linux 9Rocky Linux 10 Version Release Kernel Release Date End of Life Supported 8.3 4.18.0-240 May 1, 2021 June 21, 2021 NO 8.4 4.18.0-305 June 21, 2021 November 15, 2021 NO 8.5 4.18.0-348 November, 15 2021 May 15, 2022 NO 8.6 4.18.0-372.9.1 May 15, 2022 November 11, 2022 NO 8.7 4.18.0-425.3.1 November 11, 2022 May 20, 2023 NO 8.8 4.18.0-477.10.1 May 20, 2023 November 11, 2023 NO 8.9 4.18.0-513.5.1 November 22, 2023 May 31, 2024 NO 8.10 4.18.0-553 May 31, 2024 May 31, 2029 Yes Version Release Kernel Release Date End of Life Supported 9.0 5.14.0-70.13.1 July 14, 2022 November 26, 2022 NO 9.1 5.14.0-162.6.1 November 26, 2022 May 16, 2023 NO 9.2 5.14.0-284.11.1 May 16, 2023 November 20, 2023 NO 9.3 5.14.0-362.8.1 November 20, 2023 May 09, 2024 NO 9.4 5.14.0-427.13.1 May 09, 2024 November 19, 2024 NO 9.5 5.14.0-503.14.1 November 19, 2024 June 04, 2025 NO 9.6 5.14.0-570.17.1 June 04, 2025 November, 2025 Yes Version Release Kernel Release Date End of Life Supported 10.0 6.12.0-55.12.1 June 11, 2025 November, 2025 Yes"},{"location":"include/testing/qa_content_example_only/","title":"Qa content example only","text":"<p>CONTENT EXAMPLE ONLY</p> <p>Content on this page may be copy-pasta from Fedora Quality Assurance documents and needs to be replaced and/or reviewed before publishing for applicability for Rocky Linux.</p>"},{"location":"include/testing/qa_data_loss_warning/","title":"Qa data loss warning","text":"<p>DATA LOSS</p> <p>Depending on installer choices this MAY destroy all the data on the test system. If you choose to complete the installation of the test system any/all data on the system may be lost. Please do not install on a system whose contents you need to keep.</p>"},{"location":"include/testing/qa_setup_boot_to_media/","title":"Qa setup boot to media","text":"<ol> <li>Obtain access to supported system and hardware class to be installed.</li> <li>Prepare appropriate media for the selected ISO to be tested.<ul> <li>Example: QA:Testcase Media USB dd</li> </ul> </li> <li>Boot the system from the prepared optical, USB media or virtual device attachment.<ul> <li>Examples: QA:Testcase Boot Methods Boot ISO, QA:Testcase Boot Methods DVD</li> </ul> </li> <li>In the boot menu select the appropriate option to boot the installer.</li> </ol>"},{"location":"include/testing/qa_testcase_bottom/","title":"Qa testcase bottom","text":"Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Quality Assurance documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"include/testing/qa_testcase_supported_systems/","title":"Qa testcase supported systems","text":"Supported Systems and Hardware Classes x86_64aarch64ppc64s309x <p>TBD</p> <p>TBD</p> <p>TBD</p> <p>TBD</p>"},{"location":"include/testing/rc_content_bottom/","title":"Rc content bottom","text":"Additional Information ContactDisclaimerAttributionLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at testing@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This work is heavily inspired by the Fedora Release Requirements documents which were made available under Attribution-Share Alike 4.0 International license unless otherwise noted.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"include/testing/rc_content_example_only/","title":"Rc content example only","text":"<p>CONTENT EXAMPLE ONLY</p> <p>Content on this page may be copied from Fedora Release Requirements documentation and needs to be replaced and/or reviewed before publishing for applicability for Rocky Linux.</p>"},{"location":"rocky/","title":"Rocky Linux General Information","text":"<p>This section of the wiki goes over general information for Rocky Linux. Treat this part of the wiki as a general resource area for frequently requested information. Please see the left hand side for the primary topics/pages.</p>"},{"location":"rocky/bugs/","title":"Reporting Bugs and RFE's","text":"<p>The Rocky Linux Project has several ways of reporting issues or requesting enhancements, depending on what the issue is and who it pertains to. This page aims to try to steer you in the right direction on where to go.</p>"},{"location":"rocky/bugs/#rocky-linux-core-distribution","title":"Rocky Linux (core distribution)","text":""},{"location":"rocky/bugs/#bugs","title":"Bugs","text":"<p>Note</p> <p>The bug tracker is not meant for general support questions. Do not be surprised if a maintainer closes the bug report immediately if it's found to be a general question rather than an actual bug report.</p> <p>Bugs are an inevitable part of any Linux distribution. Users may find problems and want a way to report the bug.</p> <p>All bug reports should be reported at our Bug Tracker.</p> <p>When reporting bugs, ensure you have read the Bug Tracker Guidelines so you can make a proper bug report.</p> <p>Note</p> <p>You may be asked to reproduce the issue on Red Hat Enterprise Linux. If the issue is reproducible on RHEL, you are encouraged to also open a bug report at the Red Hat Jira. The assignee on your bug report can do this for you also if you wish.</p>"},{"location":"rocky/bugs/#rfe-request-for-enhancement","title":"RFE (Request for Enhancement)","text":"<p>Requests for Enhancements to packages<sup>1</sup> are typically handled at the Bug Tracker. In some cases, this may not apply. A Special Interest Group may ask that an RFE be submitted elsewhere. See the SIG section later in this page.</p>"},{"location":"rocky/bugs/#rocky-linux-infrastructure-and-services","title":"Rocky Linux Infrastructure and Services","text":"<p>Rocky Linux Infrastructure have responsibility over several areas. Below is just some of what is maintained:</p> <ul> <li>Mirror Manager</li> <li>Account Services</li> <li>RESF Git Service</li> <li>Rocky Linux Git Service</li> <li>Mail List</li> <li>General Special Interest Group requests (such as resources)</li> </ul> <p>Infrastructure and Services encourages issues and requests to be submitted to their Infrastructure Meta tracker.</p>"},{"location":"rocky/bugs/#rocky-linux-special-interest-groups-sig","title":"Rocky Linux Special Interest Groups (SIG)","text":"<p>Each Special Interest Group may do things a bit differently from the next. In majority of cases, a SIG will receive a group at the RESF Git Service and a \"meta\" repository. However, a SIG can choose not to use this and note on their wiki of where to go.</p> <p>Examples of SIG's that use \"meta\" are below:</p> <ul> <li>SIG/AltArch</li> <li>SIG/HPC</li> <li>SIG/Kernel</li> </ul>"},{"location":"rocky/bugs/#other-resources","title":"Other Resources","text":"<p>If you have reproduced a bug or an issue in RHEL or even CentOS Stream, or you would like to request something for a future Enterprise Linux version (that will make it to Rocky Linux in a future version), you are encouraged to submit a report to the Red Hat Jira. Below are some quick links for submitting such requests.</p> <ul> <li>Red Hat Enterprise Linux - For RHEL bugs found in both Rocky Linux and RHEL</li> <li>CentOS Stream - Bugs or RFE's for CentOS Stream</li> </ul> <p>You may also see if a feature, package, or otherwise can be included into a SIG, plus, or extras repositories if they fit. You can also request a package to EPEL at the Red Hat Bugzilla.</p> <ol> <li> <p>Packages may be for a core Rocky Linux package or a Special Interest Group package. Note that if an RFE is put in for a Rocky Linux core package, it will most likely be rejected and you may be encouraged to request it upstream to CentOS Stream. If the RFE is to a package that contains <code>rocky-</code> in the name or it is a package that we actively patch, it may be considered. RFE's to prepare for upcoming features from Stream to RHEL (e.g. to prepare for said feature) is encouraged.\u00a0\u21a9</p> </li> </ol>"},{"location":"rocky/errata/","title":"Rocky Linux Errata","text":"<p>This page goes over general information about the Rocky Linux errata and its backend system.</p>"},{"location":"rocky/errata/#errata-resources","title":"Errata Resources","text":"<ul> <li>Errata Browser</li> <li>Errata API Endpoint</li> <li>Errata API Endpoint OpenAPI Specs</li> <li>Errata RSS Endpoint</li> </ul>"},{"location":"rocky/errata/#general-errata-information","title":"General Errata Information","text":"<p>Errata is generated via a system called \"Apollo\" together with the build system peridot. The Apollo system replaces the old errata system \"secparse\" and effectively generates the updateinfo.xml data that will appear in repositories. This provides information such as:</p> <ul> <li>Security advisories (RLSA)</li> <li>Bugfix advisories (RLBA)</li> <li>Enhancement advisories (RLEA)</li> </ul> <p>This information generally attempts to match the advisories provided by Red Hat. Errata for your system can be found by running <code>dnf updateinfo</code>.</p> <pre><code># dnf updateinfo\nLast metadata expiration check: 1:41:31 ago on Thu 22 Sep 2022 10:00:23 PM MST.\nUpdates Information Summary: available\n    1 New Package notice(s)\n    5 Security notice(s)\n        4 Important Security notice(s)\n        1 Moderate Security notice(s)\n    1 Bugfix notice(s)\n    1 Enhancement notice(s)\nSecurity: kernel-core-4.18.0-372.19.1.el8_6.x86_64 is an installed security update\nSecurity: kernel-core-4.18.0-372.9.1.el8.x86_64 is the currently running version\n</code></pre> <p>You can also run <code>dnf updateinfo list</code> to see the full list that applies to your system. If you use EPEL, you may see <code>FEDORA-EPEL</code> advisories as well.</p> <pre><code># dnf updateinfo list\nRLSA-2022:6159              Moderate/Sec.  curl-7.61.1-22.el8_6.4.x86_64\nFEDORA-EPEL-2022-232803ed1b enhancement    distribution-gpg-keys-1.77-1.el8.noarch\nRLSA-2022:5564              Important/Sec. kernel-4.18.0-372.16.1.el8_6.x86_64\nRLSA-2022:5819              Important/Sec. kernel-4.18.0-372.19.1.el8_6.x86_64\nRLSA-2022:5564              Important/Sec. kernel-core-4.18.0-372.16.1.el8_6.x86_64\nRLSA-2022:5819              Important/Sec. kernel-core-4.18.0-372.19.1.el8_6.x86_64\nRLSA-2022:5564              Important/Sec. kernel-modules-4.18.0-372.16.1.el8_6.x86_64\nRLSA-2022:5819              Important/Sec. kernel-modules-4.18.0-372.19.1.el8_6.x86_64\nFEDORA-EPEL-2022-42c9410b12 bugfix         koji-1.30.0-1.el8.noarch\nRLSA-2022:6159              Moderate/Sec.  libcurl-7.61.1-22.el8_6.4.x86_64\nFEDORA-EPEL-2022-42c9410b12 bugfix         python3-koji-1.30.0-1.el8.noarch\nFEDORA-EPEL-2022-42c9410b12 bugfix         python3-koji-cli-plugins-1.30.0-1.el8.noarch\nFEDORA-EPEL-2019-6adf1e0ef3 newpackage     python3-psutil-5.6.3-5.el8.x86_64\nRLSA-2022:6180              Important/Sec. rsync-3.1.3-14.el8_6.3.x86_64\nRLSA-2022:6206              Important/Sec. systemd-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-container-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-libs-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-pam-239-58.el8_6.4.x86_64\nRLSA-2022:6206              Important/Sec. systemd-udev-239-58.el8_6.4.x86_64\n</code></pre>"},{"location":"rocky/image/","title":"Rocky Linux ISOs and Images","text":"<p>For a given Rocky Linux release, ISOs and images are generated and provided to the community, providing different means of installing Rocky Linux, whether that be a full DVD iso image, a boot iso, live desktop images, or even cloud images.</p> <p>It is important to note that the images provided and what they provide may differ between major releases (such as provided packages, installable/installed groups, and so on).</p>"},{"location":"rocky/image/#about-iso-images","title":"About ISO Images","text":"Version boot minimal dvd Architectures Rocky Linux 8 Yes Yes Yes x86_64, aarch64 Rocky Linux 9 Yes Yes Yes x86_64, aarch64, ppc64le, s390x Rocky Linux 10 Yes Yes Yes x86_64, aarch64, ppc64le, s390x, riscv64 <p>Every Rocky Linux release gets a set of ISO's. These ISO's are made by the tooling used to make and finalize the distribution. For a given Rocky Linux release, they will live in an <code>isos</code> directory at the root of a Rocky Linux release.</p> <p>There are three formats for the ISO's. See the notes below.</p>"},{"location":"rocky/image/#notes-about-multiple-iso-images-what-is-what","title":"Notes about: Multiple ISO images, what is what?","text":"<p>There are multiple templated formats for each ISO you may see.</p> Format Type Context Rocky-X.Y-ARCH-TYPE ISO File Day of release ISO Rocky-X.Y-DATE-ARCH-TYPE ISO File Rebuilt ISO Rocky-ARCH-TYPE Symlink Symlink to the latest ISO <ul> <li>X is the major version</li> <li>Y is the minor version</li> <li>ARCH is the architecture</li> <li>DATE will be the date the ISO was built (if applicable)</li> <li>TYPE will be the type of ISO (boot, dvd, minimal)</li> </ul> <p>The first format is the most common and is the day-of-release ISO.</p> <p>The second format is in the case of rebuilt ISO's, typically in the case of addressing a bug or providing updated images (in the case of a newer kernel, a new secure boot shim, and so on).</p> <p>The third format is a symlink to the \"latest\" ISO, which is deprecated and will not appear in versions after Rocky Linux 9.</p>"},{"location":"rocky/image/#notes-about-what-does-each-iso-do","title":"Notes about: What does each ISO do?","text":"<p>Each ISO that is provided has a specific purpose.</p> <ul> <li>The <code>boot</code> image, or also known as the \"net install\" media, is used to perform Rocky Linux installations over the internet.</li> <li> <p>The <code>minimal</code> image is typically used to install a minimal Rocky Linux environment without downloading the entire DVD image or using the <code>boot</code> ISO to do so.</p> <ul> <li>The equivalent dnf group/environment would be <code>Minimal Install</code></li> <li>The equivalent dnf group/environment for a kickstart would be <code>@^minimal-environment</code> - This can also be used with dnf install as <code>@minimal-environment</code></li> </ul> </li> <li> <p>The <code>dvd</code> image, or also known as the \"everything\" or \"BaseOS\" media, contains everything needed to do a custom installation of Rocky Linux without needing an internet connection.</p> </li> </ul>"},{"location":"rocky/image/#notes-about-writing-the-isos","title":"Notes about: Writing the ISO's","text":"<p>There are many ways to write ISO's to a USB. See the below lists for what to and what not to use.</p>"},{"location":"rocky/image/#recommended","title":"Recommended","text":"<ul> <li> <p>Fedora Media Writer</p> <ul> <li>Windows</li> <li>MacOS</li> <li>On Fedora: <code>dnf install mediawriter</code></li> </ul> </li> <li> <p>dd for windows</p> </li> <li>Rawrite32</li> </ul>"},{"location":"rocky/image/#not-recommended-avoid","title":"Not Recommended (avoid)","text":"<p>The following are listed as do not use as they are known for breaking isohybrid images or causing other inconsistencies:</p> <ul> <li>rufus</li> <li>unetbootin</li> <li>multibootusb</li> <li>universal usb installer</li> </ul> <p>Warning</p> <p>Rufus can only work for Rocky Linux images if you use \"dd mode\". Do not use ISO mode as it will result in a broken installer. It is recommended by Release Engineering that you use a writer from the recommended section on this page.</p>"},{"location":"rocky/image/#about-cloud-images","title":"About Cloud Images","text":"<p>Every Rocky Linux release gets a set of cloud images that can be consumed into their cloud infrastructure as they see fit. They will live in an <code>images</code> directory at the root of a Rocky Linux release.</p> Version Generic Cloud EC2 Rocky Linux 8 Yes (x86_64, aarch64) Yes (x86_64, aarch64) Rocky Linux 9 Yes (x86_64, aarch64, others*) Yes (x86_64, aarch64) <p>There are two formats for the images:</p> Format Type Context Rocky-X-CLOUD{-TYPE}-X.Y-DATE-ARCH.FORMAT Image File Any given cloud image Rocky-X-CLOUD{-TYPE}.latest.ARCH.FORMAT Symlink Symlink to the latest image Rocky-X-CLOUD.latest.ARCH.FORMAT Symlink Symlink to the latest primary image <ul> <li>X is the major version</li> <li>Y is the minor version</li> <li>ARCH is the architecture</li> <li>DATE will be the date of when the image was produced (YYYYMMDD.X, X starts at 0)</li> <li>CLOUD will the type of cloud image (e.g., GenericCloud)</li> <li>TYPE will be the type of image such as Base or LVM, if applicable</li> <li>FORMAT will be <code>raw</code> or <code>qcow2</code></li> </ul> <p>The first format will always exist. Cloud images will appear in this format in majority of cases and there may be more than one at any given time. Updates can occur for newer kernels or to address issues in previous versions. This means the date will change frequently.</p> <p>The second format is a symlink to the latest cloud image of that variant and type, if applicable.</p> <p>The third format is symlinked to the latest available image. This allows users/mirrors/service providers to have an always available and deterministic download location that can be scripted if they wish to always pull the latest available. This is typically the \"Base\" variant.</p>"},{"location":"rocky/image/#about-live-images","title":"About Live Images","text":"<p>Every Rocky Linux release provides a set of live images that a user can download, boot, use, and optionally install to their systems. The live images are desktop oriented images that are primarily for desktop use cases and try to closely match similarly to what Fedora provides for their releases.</p> Version GNOME / Workstation KDE XFCE Architectures Rocky Linux 8 Yes No* Yes x86_64 Rocky Linux 9 Yes Yes Yes x86_64, aarch64 <p>* This image is not available either due to image/package issues or issues with the desktop environment in that version of Rocky Linux.</p>"},{"location":"rocky/image/#notes-about-missing-architectures","title":"Notes about: Missing architectures","text":"<p>There are plans to potentially provide ppc64le live images, as there are some POWER workstations out in the wild.</p>"},{"location":"rocky/image/#notes-about-kickstarts","title":"Notes about: Kickstarts","text":"<p>The kickstarts that help generate these live images can be found at https://git.resf.org/sig_core/kickstarts and the mirror at https://github.com/rocky-linux/kickstarts.</p>"},{"location":"rocky/image/#about-pi-images-maintained-by-sigaltarch","title":"About Pi Images (maintained by SIG/AltArch)","text":"<p>The raspberry pi images are exactly what's labeled on the tin, images for the means of installing to an sd card to run Rocky Linux on a raspberry pi. These images are supported by SIG/AltArch community members.</p> <p>These are provided in the SIG directories.</p> <p>The git repository that contains the kickstart and other data related to the creation of these images are located at https://git.resf.org/sig_altarch/RockyRpi.</p> <p>For general quickstart information, checkout the readme for the images.</p> Version README (direct) Rocky Linux 8 for Raspberry Pi README Rocky Linux 9 for Raspberry Pi README"},{"location":"rocky/packagekit/","title":"PackageKit Missing Items","text":"<p>You have been redirected here to answer why you cannot find certain packages in Rocky Linux.</p>"},{"location":"rocky/packagekit/#missing-package","title":"Missing Package","text":"<p>The package you are searching for is not available in Rocky Linux. There are a few reasons why this could be:</p> <ul> <li>We cannot include software that is encumbered by software patents</li> <li>We cannot include software that is not in the Base OS (you are encouraged to use EPEL and Special Interest Group repositories)</li> <li>In the case of a SIG, we cannot package proprietary software.</li> <li>Perhaps someone has not packaged it yet to be included in a SIG.</li> </ul>"},{"location":"rocky/packagekit/#missing-codecs","title":"Missing Codecs","text":"<p>The codecs you are searching for is not available in Rocky Linux. A codec is a program that allows the user to encode or decode a data stream in a specific format (think MP3/MOV/WMV). Upstream, and thus Rocky Linux, generally do not have such codecs.</p> <p>The question we generally receive is \"Why can't you provide it in a SIG or an extras?\" It's because of the following reasons:</p> <ul> <li>Many codecs are proprietary or patent encumbered</li> <li>Some codecs may not be encumbered, but may be under a license that is not acceptable</li> </ul> <p>We encourage users to either:</p> <ul> <li>Use formats such as OGG, Dirac, and FLAC</li> <li> <p>Consider finding a third party repository that provides such codecs such as rpmfusion</p> <ul> <li>Note that we cannot support you if you choose to use repositories that are not community approved.</li> </ul> </li> </ul>"},{"location":"rocky/packagekit/#missing-drivers","title":"Missing Drivers","text":"<p>Since Rocky Linux attempts to be compatible with Red Hat Enterprise Linux, we are limited to the hardware that their kernel configuration supports. We encourage you to use ELRepo where you can find kmod's + newer kernels or SIG/Kernel where there may be similar support.</p>"},{"location":"rocky/packagekit/#missing-fonts","title":"Missing Fonts","text":"<p>The font that you are looking for is not available in Rocky Linux. This is because we only include fonts that are available in our upstreams CentOS Stream and Red Hat Enterprise Linux.</p>"},{"location":"rocky/repo/","title":"Rocky Linux Repositories","text":"<p>There are several repositories that are provided by Rocky Linux and may differ between major releases. There are also community approved repositories as well, installable typically from the extras repository.</p>"},{"location":"rocky/repo/#about-enabled-and-disabled-repository-configuration-files","title":"About 'enabled' and 'disabled' repository configuration files","text":"<p>Please read <code>man 5 dnf.conf</code>, in particular the section of <code>enabled</code> under the <code>REPO</code> section. A line containing <code>enabled=0</code> or <code>enabled=1</code> will disable or enable a repository. This can also be modified using <code>dnf config-manager --set-enabled</code> or <code>--set-disabled</code>. When this is done, it is recommended to run <code>dnf clean all</code>.</p>"},{"location":"rocky/repo/#version-policy","title":"Version Policy","text":"<p>During a Rocky Linux minor release lifecycle as a package receives updates, the previous version will coexist in the repositories to allow a user to downgrade in case of a regression or other use cases (such as security only updates). Upon new minor release, all previous updates/versions that are not the latest are not carried over.</p> <p>Rocky Linux 9 does not currently support this policy and can be expected in a future Rocky Linux 9 version. Please see Peridot Issue #18.</p> <p>A more detailed explanation of the version policy can be found in our Version Guide.</p>"},{"location":"rocky/repo/#notes-on-difference-between-x-and-xy-in-mirrors","title":"Notes on: Difference between X and X.Y in mirrors","text":"<p>You may notice that on mirrors or our primary download location that there are X and X.Y directories. Rocky Linux sets the <code>releasever</code> dnf variable to the major version (e.g., 8, 9) rather than a minor version (8.6, 9.0, and so on). This effectively means that it will ask the mirror manager or configured baseurl for that version, which will always point to the latest available release at a given time. This helps simplify the user experience when installing software and updating systems throughout the life of a release.</p> <p>In the event a new release is available, the symlink is changed to point to the new directory, and mirror manager also undergoes changes to accomodate the new release, which should be transparent to most users.</p>"},{"location":"rocky/repo/#base-repositories","title":"Base Repositories","text":"<p>Each major release has a set of repositories that come default with the distribution. Below is a list of common repositories for each major release, including their repo id.</p> Repository repoid Rocky 8 Rocky 9 Rocky 10 Enabled BaseOS baseos Yes Yes Yes Yes AppStream appstream Yes Yes Yes Yes PowerTools powertools Yes No No No CRB crb No Yes Yes No HighAvailability ha (8) / highavailibility Yes Yes Yes No ResilientStorage rs (8) / resilientstorage Yes Yes No No"},{"location":"rocky/repo/#notes-on-crb","title":"Notes on: CRB","text":"<p>CRB is \"Code Ready Builder\" - PowerTools was a carryover from CentOS, which is still the equivalent of CRB in RHEL. <code>crb</code> will be the repository name going forward in Rocky Linux and other derivatives starting with version 9. Rocky Linux 8 matches CentOS's use of PowerTools in order to be as compatible as possible with what users expect.</p>"},{"location":"rocky/repo/#notes-on-lack-of-updates-repo","title":"Notes on: Lack of \"updates\" repo","text":"<p>In older major versions, it was normal to have an \"updates\" repo. Fedora for example still follows this. However, in EL8, EL9, and likely so on, there is no \"updates\" repository. This means all updates happen as is in the same repository. So if <code>bash</code> receives an update, it will land in <code>baseos</code> as there is no updates repository.</p>"},{"location":"rocky/repo/#extra-repositories","title":"Extra Repositories","text":"<p>There are extra repositories offered by Rocky Linux.</p> Repository repoid Rocky 8 Rocky 9 Rocky 10 Enabled Extras extras Yes Yes Yes Yes Plus plus Yes Yes Yes No RT (real time) rt Yes Yes Yes No NFV nfv Yes Yes Yes No SAP / SAP HANA sap / saphana No Yes Yes No Devel / devel devel Yes Yes Yes No"},{"location":"rocky/repo/#notes-on-extras","title":"Notes on: Extras","text":"<p>This repository contains packages that provide some additional functionality to Rocky without breaking upstream compatibility. For example, <code>rpaste</code> used for sending logs, configuration, or system information to our paste bin.</p> <p>These are not tested by upstream nor available in the upstream product.</p>"},{"location":"rocky/repo/#notes-on-plus","title":"Notes on: Plus","text":"<p>This repository contains packages that either:</p> <ul> <li>A) replace a core component via patched functionality</li> <li>B) build a component that was originally exclusive for one architecture (e.g., open-vm-tools built for x86_64 but not aarch64 in Rocky 8) or...</li> <li>C) providing packages that were built but not traditionally provided by upstream, and requested to be available by the community.</li> </ul> <p>Packages that fall under A and B will have a <code>.plus</code> added to their version tag. These are not tested nor available in the upstream product.</p>"},{"location":"rocky/repo/#notes-on-devel","title":"Notes on: Devel","text":"<p>The devel (development) repository are packages that are not normally provided in the base nor extra repositories for the purposes of providing dependencies or devel packages that may not be provided by upstream. As such, it is treated as a \"buildroot\" repository, as this repository may contain all packages that are provided for Rocky Linux. Additionally, the i686 architecture is provided for the cases of building multilib, as it is not a primary architecture released.</p> <p>This repository should only be enabled for package building/development purposes and should not be permanently enabled.</p>"},{"location":"rocky/repo/#notes-on-sig-repositories","title":"Notes on: SIG repositories","text":"<p>Some Special Interest Groups provide additional repositories that enhance the Enterprise Linux experience. These repositories are installable via <code>rocky-release-*</code> and <code>centos-release-*</code> packages found in the <code>extras</code> repository.</p> <p>All SIG repositories can be found here</p>"},{"location":"rocky/repo/#vault","title":"Vault","text":"<p>The vault is a historic archive of previous Rocky Linux releases. These previous releases, including ISOs and other images, are typically moved into the vault area of our tier 0 mirror between a day and a week once a new minor release version is available. The vault can be found here.</p> <p>Warning</p> <p>The vault is meant as a historic archive of previous releases of Rocky Linux and not for general use. These are versions that are NOT supported and are NOT recommended for general use as they contain unfixed bugs and unpatched security vulnerabilities.</p> <p>The community may not be able to assist you with issues with these releases, so it is recommended that you keep your systems up to date.</p>"},{"location":"rocky/repo/#community-approved-repositories","title":"Community Approved Repositories","text":"<p>As with Enterprise Linux and Fedora, there are additional community approved repositories for Rocky Linux. Below are repositories that are approved by Rocky Linux as well as the community.</p> Extra Packages for Enterprise Linux (EPEL) - EPEL is by for the most commonly used repository for Enterprise Linux. EPEL provides rebuilds of Fedora packages for every supported enterprise linux. Packages in this repository do not replace the base. You can install EPEL by running <code>dnf install epel-release</code> and the package will be installed from the extras repository. The package will automatically have EPEL enabled. Support for EPEL can be found in <code>#epel</code> on Libera. Community Enterprise Linux Repository (ELRepo) - ELRepo focuses on newer kernels and kmod driver packages to enhance hardware support for currently supported Enterprise Linux versions. This includes display, filesystem, network, storage drivers. You can install the necessary repo files by running <code>dnf install elrepo-release</code>. Note that the kernel repositories will have to be enabled. RPM Fusion - RPM Fusion provides software that the Fedora Project or Red Hat does not want to ship in Enterprise Linux and Fedora. These repositories do rely on EPEL. The policy is to not replace EPEL nor base packages. The free repository can be installed by running <code>dnf install rpmfusion-free-release</code>. Remi Repository - Remi maintains a large collection of RPMs, including latest versions of PHP, among other things. His FAQ can be found here. This is a collection of repositories. Using the <code>-safe</code> series of repositories will ensure that nothing from the base will be replaced or overwritten. However, be aware that these repositories do not play well with other third party repositories. You will need to use caution as you enable more repositories on your system. GhettoForge - GhettoForge provides packages not in other third party repositories. Packages that overwrite the base would be in the <code>gf-plus</code> repository. Please see usage for more information. Trinity Desktop Environment (TDE) - TDE provides Enterprise Linux packages for a KDE 3.5 style desktop environment. As of this writing, EL8 and EL9 repositories exist. You can find TDE support resources here. ZFS On Linux - The ZFS on Linux project is an implementation of OpenZFS, designed to work in a Linux environment. While this filesystem is very popular, it receives no testing or support from Rocky Release Engineering or Testing. Use at your own risk. Upstream centos-release-* - In the extras repository, there are <code>centos-release-*</code> packages that provide additional repositories from the Special Interest Groups of CentOS. As they are available in extras and should work on Rocky Linux, they are considered approved and community supported."},{"location":"rocky/repo/#notes-on-epel","title":"Notes on: EPEL","text":"<p>Using EPEL requires that the <code>CRB</code> or <code>PowerTools</code> repository is enabled on your system, as some EPEL packages depend on packages from that repo. There are multiple ways to enable the repository:</p> <ul> <li> <p>Using <code>dnf</code></p> <ul> <li>Rocky 8: <code>dnf config-manager --set-enabled powertools</code></li> <li>Rocky 9+: <code>dnf config-manager --set-enabled crb</code></li> </ul> </li> <li> <p>Modifying the repo files and setting <code>enabled=1</code></p> <ul> <li>Rocky 8: <code>/etc/yum.repos.d/Rocky-PowerTools.repo</code> under <code>[powertools]</code></li> <li>Rocky 9+: <code>/etc/yum.repos.d/rocky.repo</code> under <code>[crb]</code></li> </ul> </li> <li> <p>Running <code>dnf install epel-release</code> and then running <code>crb enable</code></p> </li> </ul> <p>We recommend checking out the EPEL Quickstart Guide for more information.</p>"},{"location":"rocky/repo/#notes-on-unlisted-repositories","title":"Notes on: Unlisted Repositories","text":"<p>If there is a repository that you use (or maintain) and you do not see it here, it is likely that we may not know of it. Unfortunately, this happens. If there are popular repositories that are used in the Enterprise Linux community that should be added to the list, you may drop us a line in Mattermost, IRC, or an issue to the wiki git repository.</p>"},{"location":"rocky/rss/","title":"Rocky Linux RSS Feeds","text":"<p>This page goes over the RSS feeds provided by the Rocky Linux project.</p>"},{"location":"rocky/rss/#about-rss-feeds","title":"About RSS Feeds","text":"<p>Rocky Linux RSS feeds are provided as an alternative way for users to observe updates that come to the many repositories for supported versions of Rocky Linux.</p> <p>RSS feeds will appear in the public mirror: RSS Feeds</p> <p>These feeds are generated by the Release Engineering (SIG/Core) Toolkit.</p>"},{"location":"rocky/rss/#notes-on-refresh-times","title":"Notes on Refresh Times","text":"<p>Every 30 minutes, the feeds are updated. If new packages were added to any of the repositories, they will appear right away on next refresh.</p>"},{"location":"rocky/rss/#notes-on-packages","title":"Notes on Packages","text":"<p>The feeds will show the most recent packages up to 30 days. If a package is older than 30 days, they will be dropped from the feed.</p>"},{"location":"rocky/rss/#notes-on-modules","title":"Notes on Modules","text":"<p>Some module packages may or may not appear in the feed. This is especially true for Rocky Linux 8. The RSS feed script is at this time not capable of taking into account of all modules. Notable exceptions to this are the default module streams.</p>"},{"location":"rocky/support/","title":"Getting Community Help & Support","text":"<p>The Rocky Linux Project has several places where users can find community support, depending on the nature of issue.</p> <p>Note</p> <p>This is for general support of Rocky Linux and is not meant for bug reporting. Please see our Reporting Bugs and RFE's page for more information.</p>"},{"location":"rocky/support/#rocky-linux-core-distribution","title":"Rocky Linux (core distribution)","text":"<p>Core distribution community support can be obtained at the following locations:</p> <ul> <li>Mattermost</li> <li>IRC (Libera) (<code>#rockylinux</code>)</li> <li>Forums</li> <li>Reddit</li> <li>Mailing List</li> </ul>"},{"location":"rocky/support/#rocky-linux-infrastructure-and-services","title":"Rocky Linux Infrastructure and Services","text":"<p>Rocky Linux Infrastructure have responsibility over several areas, such as mirror manager and Mattermost. Support or questions that pertain only to the infrastructure managed by the project can be asked at any of the following:</p> <ul> <li>Mattermost</li> <li>IRC (Libera) (<code>#rockylinux-infra</code>)</li> <li>Forums</li> </ul> <p>However, Infrastructure and Services encourages issues and requests to be submitted to their Infrastructure Meta tracker.</p>"},{"location":"rocky/support/#rocky-linux-special-interest-groups-sig","title":"Rocky Linux Special Interest Groups (SIG)","text":"<p>Each Special Interest Group has a channel on Mattermost. You are encouraged to join Mattermost and search for the relevant channel. Some examples are below.</p> <ul> <li>SIG/AltArch</li> <li>SIG/Kernel</li> </ul> <p>Some groups have places on the forums as well, though they may have low traffic.</p> <ul> <li>SIG/AltArch</li> </ul>"},{"location":"rocky/version/","title":"Rocky Linux Release and Version Guide","text":"<p>This page goes over the Rocky Linux Release Versions, their support, timelines, and how it affects our users.</p>"},{"location":"rocky/version/#current-supported-releases","title":"Current Supported Releases","text":"<p>Below is a table of Rocky Linux versions, with accompanying general release and (planned or are planned) end of life dates.</p> Release Codename Release Date Active Support Ends End of Life Latest/Current Version Rocky Linux 8 Green Obsidian May 1, 2021 May 31, 2024 May 31, 2029 8.10 (May 31, 2024) Rocky Linux 9 Blue Onyx July 14, 2022 May 31, 2027 May 31, 2032 9.6 (June 04, 2025) Rocky Linux 10 Red Quartz June 11, 2025 May 31, 2030 May 31, 2035 10.0 (June 11, 2025) <p>For more detailed information on each version, click any of the tabs below.</p> Rocky Linux 8Rocky Linux 9Rocky Linux 10 Version Release Kernel Release Date End of Life Supported 8.3 4.18.0-240 May 1, 2021 June 21, 2021 NO 8.4 4.18.0-305 June 21, 2021 November 15, 2021 NO 8.5 4.18.0-348 November, 15 2021 May 15, 2022 NO 8.6 4.18.0-372.9.1 May 15, 2022 November 11, 2022 NO 8.7 4.18.0-425.3.1 November 11, 2022 May 20, 2023 NO 8.8 4.18.0-477.10.1 May 20, 2023 November 11, 2023 NO 8.9 4.18.0-513.5.1 November 22, 2023 May 31, 2024 NO 8.10 4.18.0-553 May 31, 2024 May 31, 2029 Yes Version Release Kernel Release Date End of Life Supported 9.0 5.14.0-70.13.1 July 14, 2022 November 26, 2022 NO 9.1 5.14.0-162.6.1 November 26, 2022 May 16, 2023 NO 9.2 5.14.0-284.11.1 May 16, 2023 November 20, 2023 NO 9.3 5.14.0-362.8.1 November 20, 2023 May 09, 2024 NO 9.4 5.14.0-427.13.1 May 09, 2024 November 19, 2024 NO 9.5 5.14.0-503.14.1 November 19, 2024 June 04, 2025 NO 9.6 5.14.0-570.17.1 June 04, 2025 November, 2025 Yes Version Release Kernel Release Date End of Life Supported 10.0 6.12.0-55.12.1 June 11, 2025 November, 2025 Yes <p>See the Timeline and Terminology and Release Cadence sections for more information on how these dates are determined.</p>"},{"location":"rocky/version/#timeline-and-terminology","title":"Timeline and Terminology","text":""},{"location":"rocky/version/#terminology","title":"Terminology","text":"<p>Throughout this page, you will see terms such as \"major version\" or \"minor version\", among others. You will see these terms used throughout many discussions online forums, mail lists, or even our Mattermost. See below for their basic definitions.</p> Term Definition Major Version A major version is denoted by a whole number, such as \"Rocky Linux 9\". This number is left-most number in a version, such as 9.0, where \"9\" is the major version. These releases come with significant changes to its preceding major version. Minor Version A minor version is denoted by the right-most number in a version, such as \"Rocky Linux 9.3\". \"9\" being the major version, \"3\" being the minor version. These updates come with version upgrades, rebases, new software and features. Release Release typically refers to a major version release, such as \"Rocky Linux 9\". It is typically assumed it is referring to the latest/current version of that release. Minor Release Used as \"Minor Version\" in most cases. Active Support Active support, also known as \"full support\" is the period of time in which minor releases are provided every six (6) months, whilst providing new software, rebases, or other new features. When Active Support ends, a release receives maintenance-only updates."},{"location":"rocky/version/#timeline","title":"Timeline","text":"<p>Rocky Linux attempts to follow CentOS Stream development and Red Hat Enterprise Linux releases as close as possible. With this model, Rocky Linux releases should follow fairly close to our upstreams.</p>"},{"location":"rocky/version/#major-version-release","title":"Major Version Release","text":"<p>For a new Rocky Linux release, the following should be true:</p> <ul> <li>New major version is released with support of ten (10) years, starting at <code>.0</code>.</li> <li> <p>Release will have five (5) years of minor version updates or \"active support\"</p> <ul> <li>Each major version will come with two minor version releases a year: Every six (6) months</li> <li>Minor version releases will come with new features, software rebases, and sometimes brand new software</li> <li>Final minor version will be <code>.10</code></li> </ul> </li> </ul>"},{"location":"rocky/version/#minor-version-release","title":"Minor Version Release","text":"<p>For a new Rocky Linux minor version release, the following should be true:</p> <ul> <li>New minor version is released with new features and/or software</li> <li>Previous minor version is moved to the vault and is no longer supported</li> </ul> <p>However, when the minor version is <code>.10</code>, this means:</p> <ul> <li>Rocky Linux (and other Enterprise Linux derivatives) go into security maintenance for the next five (5) years</li> <li>This version of Rocky Linux will likely not receive new features, but new packages may appear occasionally</li> </ul>"},{"location":"rocky/version/#release-schedule","title":"Release Schedule","text":"<p>Based on Red Hat's life cycle policy, the month of May is when new major versions are released and every May and November a new minor version release is provided for prior supported releases. Rocky Linux attempts to follow this system as closely as possible.</p> <p>Below is a general guideline (based on Red Hat documentation) for the \"full support\" cycle for Rocky Linux.</p> Version Month .0 May .1 November .2 May .3 November .4 May .5 November .6 May .7 November .8 May .9 November .10* May <p>Upon each new minor release, (<code>X.Y+1</code>), the previous version is no longer supported and is moved to the vault.</p> <p>X.10</p> <p><code>X.10</code> is the final minor release and marks the end of \"active support\". When it is released, that version of Rocky Linux is now in maintenance mode for the next five (5) years until End of Life, receiving only maintenance related updates. CentOS Stream X will also cease development upstream, marking that upstream's end of life.</p>"},{"location":"rocky/version/#version-policy","title":"Version Policy","text":"<p>Rocky Linux attempts to follow closely with the updates of our one of our upstreams Red Hat Enterprise Linux. This means that updates aim to be released as on time as possible.</p> <p>For Rocky Linux 8 and 10: Previous versions of packages will coexist in the repositories to allow a user to downgrade in case of a regression or other use cases (such as security only updates).</p> <p>For Rocky Linux 9: This policy is not currently supported and can be expected in a future Rocky Linux 9 version. Please see Peridot Issue #18. Older versions of packages can by found in the vault.</p> <p>For all Rocky Linux versions: When a new minor release arrives, all previous updates/versions are not carried over and will be found in the vault.</p>"},{"location":"rocky/version/#general-update-timeline","title":"General Update Timeline","text":"<p>Updates for Rocky Linux are generally expected to be built and released between twenty-four (24) and fourty-eight (48) hours, assuming best effort allows the packages to build without any complications or unforeseen added dependencies by upstream mid-support cycle.</p> <p>Minor releases for Rocky Linux are generally expected to be built and released at least a week (7 days) after upstream, assuming best effort allows the packages to build without any complications and it passes the Testing Team OpenQA and general testing.</p> <p>Major releases for Rocky Linux are expected to be built and released when they are ready, assuming best effort allows the packages to build without any complications and passes the Testing Team OpenQA and other general testing. Major Releases have no guaranteed ETA.</p>"},{"location":"rocky/version/#end-of-life-and-unsupported-releaseversion-policy","title":"End of Life and Unsupported Release/Version Policy","text":"<p>A release or version of Rocky Linux is considered unsupported if:</p> <ul> <li>The Rocky Linux minor version has been superseded by another release or</li> <li>The Rocky Linux release is End of Life</li> </ul> <p>See below for examples of unsupported releases.</p>"},{"location":"rocky/version/#example-an-unsupported-version","title":"Example: An Unsupported Version","text":"<p>When a new Rocky Linux minor release arrives in May/November, the following is true:</p> <ul> <li>The previous version is no longer supported by Release Engineering and the community</li> <li>This version is no longer updated and is moved to the vault.</li> <li>This version does not receive bug fix nor security updates.</li> <li>You are recommended to update your system with <code>dnf update</code>.</li> </ul>"},{"location":"rocky/version/#example-an-end-of-life-release","title":"Example: An End of Life Release","text":"<p>When a Rocky Linux release has reached its End of Life date typically after ten (10) years (for example, May of 2029), the following is true:</p> <ul> <li>The release is no longer supported in full by Release Engineering and the community</li> <li>The final version is moved to the vault.</li> <li>This release no longer receives updates and thus no longer supported.</li> <li>You are recommended to install a supported Rocky Linux version and migrate your data.</li> </ul> <p>If you cannot install a new system and migrate and you still need support for your system or systems, you may be able to find a support provider.</p> <p>Warning</p> <p>Support providers will maintain their own packages and policies outside of the Rocky Linux ecosystem, and thus their policies do not apply here. The release is still considered EOL and unsupported by the Rocky Linux project. You are encouraged to work with your support provider for any assistance.</p>"},{"location":"rocky/version/#beta-to-stable-policy","title":"Beta to Stable Policy","text":"<p>Rocky Linux may release beta versions when possible. These are typically close to our upstreams where reasonably possible. These are released specifically to find bugs or issues in our build process. This also helps correlate issues with our upstreams in the event they also have bugs. These are provided to our Testing Team members and others in the community and are free to download and test by anyone in the community.</p> <p>However, when the stable minor version is released, updating from the beta to the stable version is not recommended nor is it supported, even for experienced users.</p> <p>The following is unsupported:</p> <ul> <li>Updating from a stable release to beta release</li> <li>Updating from a beta release to stable release</li> </ul>"},{"location":"rocky/version/#upgrade-policy","title":"Upgrade Policy","text":"<p>Upgrades are not generally supported by Release Engineering nor most of the Rocky community. If you wish to perform upgrades between releases, there is a tool called ELevate that may be able to help you. But as a note of caution, this has not been formally tested and we cannot provide official assistance.</p> <p>Note</p> <p>If you would like to see the project support major version upgrades, we encourage all interested parties to join our mattermost or our forums and open a conversation on the topic.</p> <p>Warning</p> <p>Some users have expressed success with doing upgrades with this tool. However, it is not formally tested by the Rocky Linux project and we cannot provide official assistance.</p>"},{"location":"special_interest_groups/","title":"Special Interest Groups","text":"<p>Special Interest Groups are a core component of the Rocky Linux community, in which various members of these groups can extend the Enterprise Linux experience, by way of packages, images, and/or other community engagement.</p> <p>For the case of this wiki, Special Interest Groups are recommended not to have direct wiki pages, but instead maintain their own wiki pages, maintained at the RESF Git Service.</p> <p>This page serves simply as an overview to Special Interest Groups. See the SIG Guide for specific information such as proposing a SIG, content management, and much more.</p> <p>See the Current SIGs page for a list of current Special Interest Groups that may or may not be active in the community.</p>"},{"location":"special_interest_groups/#special-interest-group-requirements","title":"Special Interest Group Requirements","text":"<p>We expect SIGs to satisfy some basic requirements, such as:</p> <ul> <li>The group should be related to Rocky Linux, a use-case for Rocky Linux or Enterprise Linux, or related to Enterprise Linux as a whole</li> <li>There must be feedback and control into the Rocky Linux community</li> <li>All communication as to the work of the SIG should be public - Some matters may have to be private, and as such should be out of band<ul> <li>It is expected that each SIG will have a public channel as <code>SIG/name</code> in mattermost. Optionally an IRC channel can also be linked to the Mattermost channel, if requested.</li> </ul> </li> <li>Code produced within the SIG must be compatible with a FOSS license presently used by Rocky Linux - If a new license is wanted, consult with Release Engineering/Core or the <code>~Legal</code> channel in mattermost.</li> <li>All documentation and information of the SIG should be on a wiki produced in the RESF Git Service.</li> <li>All documentation produced within the SIG must be a compatible documentation license</li> <li>Groups should be aware/watchful of the direction from the Release Engineering team/Core as it can affect how SIGs operate if they are producing compiled software.</li> <li>Groups should maintain minutes of past meetings and record decisions made within and without of those meetings for transparency</li> </ul>"},{"location":"special_interest_groups/#onboarding","title":"Onboarding","text":"<p>Each SIG is expected to implement the guidelines set forth in the SIG Onboarding Guide to welcome and facilitate contributions for new members.</p> <p>When onboarding a new member, follow the guidelines in the SIG Onboarding Guide - Leads.</p> <p>Leads are welcome and encouraged to maintain a customized set of instructions on the SIG wiki--especially for instructions that are unique to the SIG.</p>"},{"location":"special_interest_groups/#special-interest-group-wiki","title":"Special Interest Group Wiki","text":"<p>Each SIG should have a wiki that will have documentation for their particular group as well as information on how the group operates. Required information should be as follows:</p> <ul> <li>An \"about\" section on the index that explains what the group does/a group description</li> <li>Mission Statement</li> <li>How to Contribute / Onboarding Process</li> <li>Meeting Information (time, location, other information that they feel is important)</li> <li>Policies and Resources, if applicable</li> </ul>"},{"location":"special_interest_groups/#sig-membership-and-participation","title":"SIG Membership and Participation","text":"<p>The following rules apply for SIG membership:</p> <ul> <li>Mailing lists of SIGs are open and can be joined freely</li> <li>SIG members are appointed/approved by SIG sponsors/leaders - The sponsors/leaders typically have write permissions to relevant wikis and git repos</li> <li>SIG sponsors/leaders may be asked to be a mailing list moderator</li> <li>SIG channels will be public under a name such as <code>SIG/name</code> with an optional IRC channel to be bridged.</li> <li>Optionally: define if work with CentOS Stream will be applicable for the SIG</li> </ul> <p>Special Interest Groups (SIGs) in Rocky Linux are required to report quarterly, summarizing their accomplishments, challenges, and overall health. Below is a suggested outline and template for creating your quarterly report.</p> <p>Completion of these reports helps the Community team have a large selection of content to promote and market so the SIG can grow in membership and usage.</p>"},{"location":"special_interest_groups/#suggested-outline","title":"Suggested Outline:","text":"<ul> <li>Membership Update: Include details on new members, departures, and any changes in sponsors or leaders.</li> <li>Releases: List releases from the current quarter (or previous quarter if there have been no new releases).</li> <li>General Activity/Health Report: Provide a summary of the overall activity and health of the SIG.</li> <li>Issues: Identify any issues the SIG is currently facing and any actions being taken to address them.</li> </ul>"},{"location":"special_interest_groups/#markdown-template","title":"Markdown Template","text":"<pre><code># [SIG Name] Quarterly Report\n_**Quarter:** [Specify the quarter and year]_\n\n## 1. Membership Update\n* **New Members**:\n  - [Name], [Role]\n  - [Name], [Role]\n* **Departed Members**:\n  - [Name], [Role]\n* **Sponsor/Leader Changes**:\n  - [Name], [New Role]\n\n## 2. Releases\n* **Released in Current Quarter**:\n  - [Package/Version] - [Release Date]\n    - Short description of the release.\n  - [Package/Version] - [Release Date]\n    - Short description of the release.\n* **No new releases this quarter. Releases from previous quarter**:\n  - [Product/Version] - [Release Date]\n    - Short description of the release.\n\n## 3. General Activity/Health Report\n* **Project Updates**:\n  - Brief summary of ongoing projects.\n  - Goals achieved, milestones reached.\n* **Meetings Held**: \n  - [Date] - Summary\n  - [Date] - Summary\n* **Collaboration**:\n  - Summary of collaboration with other SIGs or external groups.\n\n## 4. Issues\n* **Current Issues**:\n  - Description of issue 1 and steps taken to address it.\n  - Description of issue 2 and steps taken to address it.\n* **Upcoming Challenges**:\n  - Description of any anticipated challenges in the next quarter.\n\n### Additional Notes\n* [Any additional notes or comments relevant to the report.]\n\n## Conclusion\n* Brief conclusion or call to action for SIG members.\n</code></pre>"},{"location":"special_interest_groups/#joining-a-special-interest-group","title":"Joining a Special Interest Group","text":"<p>Joining an established Special Interest Group should be simple. Each SIG will have its own process and outlines, but the general process can be seen here. Please see sponsors or other members of the Special Interest Group you're interested in if you can't find an answer to your question</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/current/","title":"Current SIGs","text":"<p>This section goes over the current SIGs that may have sponsors and are active or has community interest.</p> <p>Below are some that may be established with sponsors/members or are in progress to being established.</p> <p>If you want to join one of these SIGs, check out their Wiki for information on how to get in touch and become a member.</p>"},{"location":"special_interest_groups/current/#active-special-interest-groups","title":"Active Special Interest Groups","text":"SIG Purpose AltArch Maintains alternative architectures or devices (such as the raspberry pi) that are not directly supported by Rocky Linux Cloud Enables and supports running Rocky Linux inside of and as the base OS for public and private clouds Desktop and Gaming Supports and maintains the desktop and gaming experience for Rocky Linux FastTrack Provides fixes, customizations, upgrades, or improvements to existing Rocky Linux packages that the community would like to see HPC and AI Maintains High Performance Computing support for Rocky Linux and the workloads which run atop Performance Intensive Computing clusters (e.g., AI/big data) Kernel Maintains kernels (such as mainline or other long term support) and drivers Security Extra security features and security-hardened override packages (replacing those from the main distribution) for Rocky Linux and other EL distros <p>Below are those that have community interest, but no direct sponsors yet.</p> SIG Purpose Embedded Embedded Systems Hyperscale Hyperscale Computing Leapp Focuses on the leapp framework to facilitate upgrades between major versions of Rocky Legacy Supports and maintains legacy hardware support for Rocky Linux Database Databases of all shapes, sizes, and use cases Storage Storage applications running on Rocky Linux"},{"location":"special_interest_groups/sig_guide/","title":"SIG Guide Overview","text":"<p>Special Interest Groups are a core piece of the Rocky Linux community, in which various members of these groups can extend the Enterprise Linux experience, by way of packages, images, or other community engagement. Special Interest Groups are typically smaller groups within the main community for the distribution, with specific work on or awareness around a topic related to Rocky Linux and potentially the Enterprise Linux Community as a whole.</p> <p>This guide is for anyone in the Rocky community who are interested in starting, managing, working on/contributing to a Special Interest Group.</p> <p>Note that this guide is always evolving. Each guide page will have references to the resources at the bottom of each page. The list of pages in this guide are listed below:</p> <ul> <li>Proposing a SIG</li> <li>Onboarding members</li> <li>Managing Content</li> <li>Building Packages</li> <li>Automated Testing</li> <li>Releasing Packages</li> </ul> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/build/","title":"Building Packages","text":"<p>This section goes over building your packages/content in the Community Build System.</p>"},{"location":"special_interest_groups/sig_guide/build/#cbs-community-build-system","title":"CBS (Community Build System)","text":"<p>The Community Build System is an extension of Peridot, the build system that is used to build Rocky Linux. Users have an opportunity to use this build system for themselves (like OBS or Copr) or as part of a Special Interest Group.</p>"},{"location":"special_interest_groups/sig_guide/build/#building-in-the-cbs","title":"Building in the CBS","text":"<p>TBD</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/content/","title":"Managing Content","text":"<p>This section goes over how to manage content in git and the community build system.</p>"},{"location":"special_interest_groups/sig_guide/content/#importing-to-the-resf-git-service","title":"Importing to the RESF Git Service","text":"<p>All Special Interest Groups get an organization created in the RESF Git Service. Each organization will have a <code>meta</code> repository that can track issues or requests for the SIG as a whole. This is not a requirement and each SIG can dictate how issues or requests are handled.</p> <p>All Special Interest Groups also get a <code>wiki</code> repository in which they can manage their documentation and content for their <code>sig-X.rocky.page</code> website.</p> <p>There is no strict requirement on what repositories should and should not exist. It is up to the discretion of the SIG.</p>"},{"location":"special_interest_groups/sig_guide/content/#importing-to-the-rocky-linux-gitlab","title":"Importing to the Rocky Linux GitLab","text":"<p>Special Interest Groups that build and release packages will have a subgroup under <code>SIG</code>. This subgroup will have additional subgroups, <code>src</code>, <code>rpms</code>, <code>modules</code>.</p> <p>Additional Subgroups</p> <p>While this is the default layout, additional subgroups can be made at the root of the SIG group. It is expected that some SIG's may not have plans to build packages as they could have an entirely separate focus.</p> <p>Examples and Inspiration</p> <p>If you are ever confused on designing your imports and packages, you may look into other sig's or even Rocky Linux itself in the <code>staging</code> group.</p>"},{"location":"special_interest_groups/sig_guide/content/#src","title":"src","text":"<p>This area is typically for the rpm sources (spec file, metadata file, and so on), with support for dist-git/src-git coming soon. While this area is optional, it is highly likely you will be using it for managing rpm sources, and uploading the tarball sources to the lookaside.</p> <p>For the case of rpm sources, which is the most standard usage, imports start here. When an import occurs, these would appear in <code>rpms</code> as long as the peridot catalog configuration is made aware. Note that all rules from the <code>rpms</code> section below apply.</p> <p>rpm rules</p> <p>To repeat: All rules from the <code>rpms</code> section below apply. Please ensure that you read carefully.</p>"},{"location":"special_interest_groups/sig_guide/content/#rpm-format-rules","title":"RPM Format Rules","text":"<p>The expectation is that you will be designing repositories to be imported here in majority of cases. As this is likely, this is the expected format:</p> <p>The expected format is:</p> <ul> <li><code>SOURCES/...</code> -- light text files, scripts, patches, etc can come here (e.g., ones not in a tar ball)</li> <li><code>SPECS/name.spec</code> -- Your spec file comes here - note it should only be one spec file</li> <li><code>.name.metadata</code> -- Required, lists your source archives or otherwise that will be in lookaside. Empty if there are no sources to pull from lookaside.</li> </ul> <p>The metadata file format is expected to be:</p> <pre><code>SHA256SUM_STRING SOURCES/some_name\n</code></pre> <p>The left column is generally a hashed sum of the archive. This is the name of the file in lookaside. The right side is where the archive will be the location and name of where it will be copied to. For example, the <code>ipa</code> package source name is a sum in lookaside, and during processing, it will be renamed and copied to <code>SOURCES/freeipa-4.9.6.tar.gz</code>:</p> <pre><code>b7b91082908db35e4acbcd0221b8df4044913dc1 SOURCES/freeipa-4.9.6.tar.gz\n</code></pre> <p>Ensure that you are also using the correct branch names. See the <code>Branch Names</code> section later in this guide for further details.</p>"},{"location":"special_interest_groups/sig_guide/content/#rpms","title":"rpms","text":"<p>This area is specifically used for rpm sources (spec file, patches, light text files, and so on). This is where \"imports\" will occur and no manual intervention or manual commits are necessary. Any manual changes made will never be picked up by the build system.</p>"},{"location":"special_interest_groups/sig_guide/content/#modules","title":"modules","text":"<p>This area is specifically used for modularity. If you plan on maintaining multiple versions of a package and want to use modularity, this is the place to do it. The branch names should always match with rpms. For example, say your module is <code>idm</code> and you have a stream named <code>DL1</code>. The branch could be <code>rX-stream-DL1</code>.</p> <p>The name of the module does not necessarily have to match the actual package or package names. For example, the idm module. There is no package named <code>idm</code>, but each package as part of the module has the correct branch names as referenced in the source yaml for the module.</p> <p>The format expected:</p> <ul> <li><code>SOURCES/modulemd.src.txt</code> -- This is the initial module yaml data that will be transformed name.yaml. See this for an example.</li> <li><code>.name.metadata</code> - Just like rpms, a metadata file is required, even though it will be empty.</li> </ul> <p>As of this writing, the <code>name.yaml</code> file generated in the root may be done by the Rocky Automation account.</p>"},{"location":"special_interest_groups/sig_guide/content/#branch-names","title":"Branch Names","text":"<p>Branch naming is important. main is NOT an acceptable branch name under any cirumstances.</p> <p>You must use <code>rX</code> as the prefix, <code>X</code> being the major version number. All packages that are part of a SIG and will be in a peridot project together must have matching branch names.</p> <p>To support multiple versions, there will need to be multiple projects and branches need to be named appropriately. Multiple versions of a package cannot coexist in a single peridot project.</p>"},{"location":"special_interest_groups/sig_guide/content/#multiple-versions-multiple-projects","title":"Multiple Versions + Multiple Projects","text":"<p>There may be cases where:</p> <ul> <li>Multiple version of a package will exist in some form and/or</li> <li>Although the cases may be rare, sets of packages may not coexist with others and live in completely separate projects.</li> </ul> <p>If this applies to your SIG, you can use branch names and the proper configuration in peridot to make this separation possible. The names of the branches are used to separate packages if need be. See the ideal template:</p> <p><code>rX-sig-SIGNAME-VERSION</code></p> <ul> <li><code>rX-sig</code> is considered the SIG prefix</li> <li><code>SIGNAME</code> would be the name of the SIG (for example, <code>kernel</code>)</li> <li><code>VERSION</code> is required. This can be numerical or simply another name/acronym.</li> </ul> <p>Examples:</p> <pre><code>* Kernel SIG for kernel 5.15 (Rocky Linux 8): r8-sig-kernel-5.15\n* Kernel SIG for kernel 5.15 (Rocky Linux 9): r9-sig-kernel-5.15\n* Kernel SIG for kernel 6.1 on (Rocky Linux 8): r8-sig-kernel-6.1\n* Kernel SIG for kernel 6.1 on (Rocky Linux 9): r9-sig-kernel-6.1\n</code></pre>"},{"location":"special_interest_groups/sig_guide/content/#tagging","title":"Tagging","text":"<p>In the case of an rpm or a module, there should be tags associated, otherwise the build system may not pick up your builds. The general format for tags are as follows:</p> <ul> <li>RPM: <code>imports/rX[-SIGNAME-VERSION]/NEVR</code> (for example, <code>imports/r8/bash-4.4.20-2.el8</code> is acceptable)</li> <li> <p>Note: You cannot choose a tag/branch destined for one rocky release and build on another. Ensuring your tags and branches are in alignment will generally make things easier for you and other maintainers.</p> </li> <li> <p>Module: <code>imports/rX-stream-STREAM_NAME_OR_VERSION/MODULE_NAME-STREAM_NAME_OR_VERSION-X0Y00YYYYMMDDHHMMSS.ZZZZZZZZ</code></p> </li> <li>Note: X is the major version, Y is the minor version. MODULE_NAME and STREAM_NAME_OR_VERSION are required. Ensure you fill out the timestamp as appropriate. You may fill in the final Z's with a portion of the commit hash that you are using for the tag.</li> <li>Example: <code>imports/r8-stream-1.4/389-ds-1.4-8060020220204145416.ce3e8c9c</code></li> </ul>"},{"location":"special_interest_groups/sig_guide/content/#peridot-project-configuration","title":"Peridot Project Configuration","text":""},{"location":"special_interest_groups/sig_guide/content/#peridot-config-repository","title":"peridot-config repository","text":"<p>Each Special Interest Group will need a repository called <code>peridot-config</code> which will contain the content of the special interest group. This helps identify what repositories will exist and what exists in each repository. The default file is <code>catalog.cfg</code>. Below is just a simple example using SIG/Core.</p> <pre><code># kind: resf.peridot.v1.CatalogSync\npackage {\n  name: \"some-core-tool\"\n  type: PACKAGE_TYPE_NORMAL_SRC\n  repository {\n    name: \"core-common\"\n    include_filter: \"core-tool-mgt.noarch\"\n    include_filter: \"core-tool-keys.noarch\"\n  }\n}\n\npackage {\n  name: \"some-infra-tool\"\n  type: PACKAGE_TYPE_NORMAL_SRC\n  repository {\n    name: \"core-infra\"\n    include_filter: \"infra-tool-mgt.x86_64\"\n    include_filter: \"infra-tool-mgt.aarc64\"\n    include_filter: \"infra-tool-mgt.s390x\"\n    include_filter: \"infra-tool-mgt.ppc64le\"\n    include_filter: \"infra-tool-keys.noarch\"\n  }\n}\n</code></pre> <p>Below was a SIG/Cloud example.</p> <pre><code># kind: resf.peridot.v1.CatalogSync\nexclude_filter {\n  repo_match: \"^cloud-common$\"\n  arch {\n    key: \"*\"\n    glob_match: \"kernel-debug-devel-matched\"\n  }\n}\npackage {\n  name: \"kernel\"\n  type: 2\n  repository {\n    name: \"cloud-common\"\n    # use an include filter, then exclude same NA to force an empty repo\n    include_filter: \"kernel-debug-devel-matched.aarch64\"\n  }\n  repository {\n    name: \"cloud-kernel\"\n    include_filter: \"kernel-debug-devel-matched.aarch64\"\n    include_filter: \"kernel-debug-devel.aarch64\"\n. . .\n  }\n}\n</code></pre>"},{"location":"special_interest_groups/sig_guide/content/#dist-tags","title":"Dist Tags","text":"<p>It is expected that your SIG will have a \"shorthand\" name assigned to you (either by core or yourself during the proposal). This name will be part of the <code>dist</code> macro that gets applied to your builds in Peridot, which serve as identifiers of where the package was built and who the package was built for. Because of this, it is a requirement that the group project's packages all have it set for the entire scope of the group. For example, if the SIG's name is \"Messaging and Communication\", the shorthand would be \"mc\", and an example package would be named:</p> <p><code>erlang-22.0.7-1.el9.mc.x86_64.rpm</code></p> <p>Some single word SIGs can be abbreviated too. Like <code>hyperscale</code> can become <code>hs</code>. There may be cases where this isn't possible and exceptions can be granted. <code>cloud</code> is an example of this.</p> <p>Note: In majority of cases, this will be configured for the SIG and won't be user modifiable for consistency purposes.</p> <p>More examples of dist tags are below:</p> SIG Dist Tag altarch elX.altarch cloud elX.cloud core elX.core hyperscale elX.hs"},{"location":"special_interest_groups/sig_guide/content/#importing-to-s3","title":"Importing to S3","text":"<p>TBD. Please work with a member of Release Engineering (SIG/Core) for assistance for now. In a future peridot version, there should be more capabilities to enable users further.</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/onboarding/","title":"Onboarding New Members","text":"<p>Note</p> <p>Each Special Interest Group's onboarding should generally follow the guide below, however the specific implementation is left up to the SIG. Be sure to read the documentation for a the SIG you wish to join or, if in doubt, ask for help!</p>"},{"location":"special_interest_groups/sig_guide/onboarding/#sig-onboarding-guide","title":"SIG Onboarding Guide","text":"<p>Welcome to the Special Interest Groups (SIGs) here at Rocky Linux! This guide is crafted to help new members navigate through the onboarding process smoothly and efficiently. Joining a SIG allows you to contribute to the Rocky Linux ecosystem in a focused area, whether it involves Cloud, Containers, HPC, or any other special-interest area. </p>"},{"location":"special_interest_groups/sig_guide/onboarding/#step-1-create-a-rocky-account-services-account","title":"Step 1: Create a Rocky Account Services Account","text":"<p>Your journey begins with creating a Rocky Account Services (RAS) account, which grants you access to various Rocky Linux services and tools.</p> <ol> <li>Navigate to accounts.rockylinux.org in your web browser.</li> <li>Click on the \"Register\" button to start the account creation process.</li> <li>Fill in the required fields with your information, including a valid email address, which will be used for future communications.</li> <li>Read and accept the terms and conditions, then click \"Create Account.\"</li> <li>Check your email for a verification message from Rocky Linux and follow the instructions to activate your account.</li> </ol> <p>A more detailed guide can be found here.</p>"},{"location":"special_interest_groups/sig_guide/onboarding/#step-2-sign-contributor-agreement","title":"Step 2: Sign Contributor Agreement","text":"<p>As a new SIG member, you will need to sign the Rocky Linux Contributor Agreement, which outlines the responsibilities and guidelines for contributors, as well as the Rocky Git Contributor Agreement, which describes the parameters within which the git services are to be used. The Rocky Git Contributor Agreement is required in order to be able to access git.rockylinux.org and/or git.resf.org.</p> <ol> <li>Once logged into your RAS account, navigate to the \"Agreements\" section in your Profile.</li> <li>Locate the \"Rocky Contributor Agreement\" and review the terms carefully.</li> <li>Sign the agreement</li> </ol>"},{"location":"special_interest_groups/sig_guide/onboarding/#step-3-join-the-sig","title":"Step 3: Join the SIG","text":"<p>After setting up your RAS account and signing the necessary agreements, you're ready to officially join a SIG.</p> <ol> <li>Visit the SIG section on the Rocky Linux website or directly access the list of SIGs on the wiki .</li> <li>Select the SIG you are interested in joining and review its mission, goals, and current projects.</li> <li>Each SIG may have its specific onboarding steps, so look for any \"Join Us\" or \"Get Involved\" buttons.</li> <li>If required, submit your information through the provided forms or contact the SIG leaders directly as instructed.</li> </ol>"},{"location":"special_interest_groups/sig_guide/onboarding/#step-4-request-to-join-the-sig-and-attend-the-initial-meeting","title":"Step 4: Request to Join the SIG and Attend the Initial Meeting","text":"<p>Now that you've identified the SIG you wish to join and are aware of its goals and projects, the next step is to formally request joining the SIG and attend the introductory meeting.</p> <ol> <li> <p>Formal Request: If not already done in the previous steps, ensure you submit a formal request to join the SIG. This should be through a ticket filed on the SIG\u2019s space on https://git.resf.org/. In addition to any requirements and information requested by the SIG, you should mention your skills, interests, and how you plan to contribute to the SIG.</p> </li> <li> <p>Introduction Email / Message: Prepare a brief introduction about yourself, your background, and your interest in the SIG. Send this introduction to the provided contact or post it in the SIG's dedicated communication channel if applicable. Every SIG has a dedicated channel in Mattermost where lots of planning and communications occur.</p> </li> <li> <p>Attend the Initial Meeting: </p> <ul> <li>Meeting Schedule: Look for information on the SIG's meetings \u2013 dates, times, and how to join (e.g., video call link, physical location, etc.). This information is typically shared on the SIG's webpage, mailing list, or Rocky Linux's communication channels.</li> <li>Preparation: Before the meeting, prepare a short introduction and a summary of what you hope to achieve within the SIG. This could include projects you're interested in, expertise you bring, or ideas for new initiatives.</li> <li>Participation: During the meeting, take the opportunity to introduce yourself when welcomed to do so. Share your interests and how you wish to contribute. Be sure to listen actively to others and the ongoing projects or tasks discussed during the meeting.</li> </ul> </li> </ol> <p>Attending the initial meeting is a crucial step in integrating into the SIG. It allows you to meet other members, understand ongoing projects better, and find opportunities to contribute meaningfully. Active participation and engagement from the start will pave the way for a fruitful contribution to the Rocky Linux community through your chosen SIG. Welcome aboard, and we look forward to seeing you in the meeting!</p>"},{"location":"special_interest_groups/sig_guide/onboarding/#step-5-post-membership-tasks","title":"Step 5: Post-Membership Tasks","text":"<p>Your SIG leaders will facilitate the process of adding you to any necessary groups within the Rocky Linux ecosystem. This could include mailing lists, forum groups, or project teams.</p> <ol> <li>Provide your RAS account information to your SIG leader if requested.</li> <li>You'll receive invitations or confirmation messages for each group you\u2019re added to. Follow any given instructions to complete your integration.</li> <li>Check your email and your RAS dashboard regularly for updates or further instructions.</li> </ol>"},{"location":"special_interest_groups/sig_guide/onboarding/#final-thoughts","title":"Final Thoughts","text":"<p>Congratulations! You're now an official member of a Special Interest Group in Rocky Linux. Engage actively, share your ideas, and contribute towards making Rocky Linux better for everyone. Welcome aboard!</p> <p>If you have any questions or need further assistance during the onboarding process, don't hesitate to contact your SIG lead or send an email to community@rockylinux.org.</p>"},{"location":"special_interest_groups/sig_guide/onboarding_leads/","title":"Onboarding Guide for Leaders of a SIG","text":""},{"location":"special_interest_groups/sig_guide/onboarding_leads/#responsibilities","title":"Responsibilities","text":"<p>As a SIG leader, it is your responsibility to ensure a smooth onboarding experience for new members. This involves welcoming, collaborating with, and providing necessary resources to new contributors.</p>"},{"location":"special_interest_groups/sig_guide/onboarding_leads/#welcoming-and-sponsoring-new-members","title":"Welcoming and Sponsoring New Members","text":"<ol> <li>Review Requests:</li> <li>Regularly monitor formal requests to join the SIG on git.resf.org.</li> <li> <p>Ensure new members have completed all required steps, including account creation, signing agreements, and providing necessary information.</p> </li> <li> <p>Communication:</p> </li> <li>Promptly acknowledge receipt of membership requests and provide clear next steps.</li> <li> <p>Send a welcome email or message via Mattermost introducing the new member to the rest of the SIG.</p> </li> <li> <p>Add to Necessary Groups:</p> </li> <li>Guide the new member through joining any relevant mailing lists, forum groups, or project teams.</li> <li> <p>Grant necessary permissions on platforms such as git.rockylinux.org or git.resf.org.</p> </li> <li> <p>Facilitating Integration:</p> </li> <li>Introduce the new member during the next SIG meeting.</li> <li>Encourage active participation and discuss current projects or areas where help is needed.</li> <li>Ensure the new member understands how to access and use collaboration tools.</li> </ol>"},{"location":"special_interest_groups/sig_guide/onboarding_leads/#handling-active-and-emeritus-members","title":"Handling Active and Emeritus Members","text":"<ol> <li>Active Members:</li> <li>Regularly engage with members to ensure they are well-informed about SIG activities.</li> <li> <p>Provide support and address any issues or questions members might have.</p> </li> <li> <p>Emeritus Members:</p> </li> <li>Track member activity and contributions.</li> <li>If a member becomes inactive, reach out to understand their status and interest.</li> <li>Consider transitioning inactive members to emeritus status if they no longer participate.</li> </ol>"},{"location":"special_interest_groups/sig_guide/onboarding_leads/#getting-help","title":"Getting Help","text":"<p>When in doubt, the Community team is the best resource to help you out. Visit community.rocky.page for assistance or contact community@rockylinux.org.</p>"},{"location":"special_interest_groups/sig_guide/onboarding_leads/#summary","title":"Summary","text":"<p>Ensuring a structured and supportive process for onboarding and engaging members will foster a productive and collaborative SIG environment. Your role as a leader is crucial in making new members feel valued and integrated into the Rocky Linux community. Thank you for your leadership and dedication.</p>"},{"location":"special_interest_groups/sig_guide/proposal/","title":"Proposing a SIG","text":"<p>This page goes over proposing a Special Interest Group for the Rocky Linux ecosystem. Anyone can propose or participate in a Special Interest Group.</p>"},{"location":"special_interest_groups/sig_guide/proposal/#proposal","title":"Proposal","text":"<p>Creating a new Special Interest Group requires participation from a member of the Rocky Linux teams or a member of the Rocky Linux project board. A SIG must meet these requirements:</p> <ul> <li>The group should be related to Rocky Linux or a use-case for Rocky Linux or Enterprise Linux as a whole</li> <li>There must be feedback and control into the Rocky community</li> <li> <p>All communication as to the work of the SIG should be public - Some matters may have to be private, and as such should be out of band</p> <ul> <li>It is expected that each SIG will have a public channel as <code>SIG/name</code> in mattermost. Optionally an IRC channel can also be assigned.</li> </ul> </li> <li> <p>Code produced within the SIG must be compatible with a FOSS license presently used by Rocky Linux and upstream - If a new license is wanted and is not available in the upstream list, consult with Release Engineering/Core or <code>~Legal</code> in Mattermost.</p> </li> <li> <p>All documentation produced within the SIG must be a compatible documentation license.</p> <ul> <li>The group will receive a wiki that they can manage their documentation and group information on the RESF Git Service (using <code>sig-X.rocky.page</code> domain)</li> </ul> </li> <li> <p>Groups should be aware/watchful of the direction from the Release Engineering team/Core as it can affect how SIGs operate if they are producing compiled software.</p> </li> <li>A member of the SIG should also come from the Core/RelEng team, in the case that the SIG produces packages for use on a Rocky Linux system.</li> <li>General reports, requests, and communication, on at least a quarterly basis, will be required with the Rocky Linux project board</li> </ul> <p>It is also highly recommended to have packaged software (if applicable) to present in the proposal, e.g. on a Fedora Copr project or another setting.</p>"},{"location":"special_interest_groups/sig_guide/proposal/#proposal-process","title":"Proposal Process","text":"<p>It is up to the requestor to:</p> <ul> <li>Check and verify that the topic of interest is already covered by an existing Special Interest Group within Rocky Linux or CentOS Stream</li> <li> <p>Post an introductory RFC message:</p> <ul> <li>As an email to the rocky-devel mailing list and ask for comments or...</li> <li>As a message to <code>SIG/general</code> in mattermost</li> </ul> </li> </ul> <p>Upon approval or general acceptance, it is up to the requestor or a Core/RelEng member to open a ticket for creating the initial resources at the SIG/Core Tracker using a predefined template. Click \"New Issue\" and then choose \"Get Started\" for \"Requests for SIG Proposal\", which will take you to the template to fill out, which includes:</p> <ul> <li>An introduction of yourself and the request for resources for the SIG</li> <li>The initial proposal (this can be a copy and paste of the original proposal or another version related to the original request)</li> <li>The initial asks, such as groups in Rocky Account Services, RESF Git Service Organization, channels in mattermost, and a release package if required</li> <li>A checklist, which includes that you have read this guide                                                                                                                                                        </li> </ul>"},{"location":"special_interest_groups/sig_guide/proposal/#acceptance","title":"Acceptance","text":"<p>Upon acceptance, the request for resources will be completed and the ticket will be closed out.</p> <p>(To be continued)</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/release/","title":"Releasing Packages","text":""},{"location":"special_interest_groups/sig_guide/release/#release","title":"Release","text":""},{"location":"special_interest_groups/sig_guide/release/#rocky-release-packages","title":"rocky-release packages","text":"<p>It is expected with Special Interest Groups that are delivering packages to have associated release packages that provide:</p> <ul> <li>Repo file(s) for dnf</li> <li>GPG key associated with the signing of your packages</li> </ul> <p>Key/Package Restrictions</p> <p>The Special Interest Group cannot submit a key nor can they have access to the private key. A SIG cannot submit their own release package.</p> <p>During the initial request process, a GPG key is assigned to you in the build system to be used to sign your packages. A release package must be requested to be built and submitted to the extras repository. In the event that a release package was not requested nor fulfilled during the initial request, a new request can be opened at SIG/Core Issues.</p> <p>When submitting the request, click on the \"New Issue\" button and then click \"Get Started\" for \"Requests for SIG Release Package\" and fill out the template as shown, which includes:</p> <ul> <li>An introduction of yourself and the request for the release package</li> <li>Number of repositories and names</li> <li>Note if there are plans for multiple versions of software</li> <li>Note if there are modularity repositories</li> <li>Which major versions you are targeting (Rocky Linux 8, 9, and so on)</li> <li>Other details if needed</li> </ul>"},{"location":"special_interest_groups/sig_guide/release/#releasing-packages-for-your-sig","title":"Releasing Packages for your SIG","text":"<p>TBD. As of now, releasing requires feedback to Release Engineering (SIG/Core) to push out to mirrors.</p>"},{"location":"special_interest_groups/sig_guide/release/#directory-format-for-repositories-informational","title":"Directory Format for Repositories (Informational)","text":"<p>This is informational more than anything, but it is important for a SIG to know where their exported repositories will live.</p> <p>Repositories will be formatted as such:</p> <p><code>/pub/sig/MAJOR/NAME/ARCH/PKG_OR_REPO</code></p> <p>This basically means that the sig directory will live along side the main distribution directories, potentially at the root a mirror. At <code>/pub/rocky</code> you'll see each supported major version. At <code>/pub/sig</code> you'll also see major versions, with a different structure. Let's break it down.</p> <ul> <li><code>NAME</code> can be the name of the SIG or the abbreviation code (eg, cloud, kernel, mcs)</li> <li><code>MAJOR</code> is the major version that's being targeted (8, 9, so on)</li> <li><code>ARCH</code> is for the architecture</li> <li><code>PKG_OR_REPO</code> could be for the specific set of packages of just any repository. (For example, you could have a \"common\" directory alongside the others)</li> </ul> <p>Let's say for the sake of the example we need some repositories for mcs and we build for x86_64 and aarch64. It could look like this. This assumes the messaging and communication SIG has not only an ejabberd repository, but also a \"common\" repository that is perhaps shared with ejabberd and potentially another set of packages in the future.</p> <pre><code>.\n\u251c\u2500\u2500 rocky\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 8\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 9\n\u2514\u2500\u2500 sig\n    \u251c\u2500\u2500 8\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 mcs\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 aarch64\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 ejabberd\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 mcs-common\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 repodata\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 x86_64\n    \u2502\u00a0\u00a0         \u251c\u2500\u2500 ejabberd\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 mcs-common\n    \u2502\u00a0\u00a0             \u251c\u2500\u2500 Packages\n    \u2502\u00a0\u00a0             \u2514\u2500\u2500 repodata\n    \u2514\u2500\u2500 9\n        \u2514\u2500\u2500 mcs\n            \u251c\u2500\u2500 aarch64\n            \u2502\u00a0\u00a0 \u251c\u2500\u2500 ejabberd\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n            \u2502\u00a0\u00a0 \u2514\u2500\u2500 mcs-common\n            \u2502\u00a0\u00a0     \u251c\u2500\u2500 Packages\n            \u2502\u00a0\u00a0     \u2514\u2500\u2500 repodata\n            \u2514\u2500\u2500 x86_64\n                \u251c\u2500\u2500 ejabberd\n                \u2502\u00a0\u00a0 \u251c\u2500\u2500 Packages\n                \u2502\u00a0\u00a0 \u2514\u2500\u2500 repodata\n                \u2514\u2500\u2500 mcs-common\n                    \u251c\u2500\u2500 Packages\n                    \u2514\u2500\u2500 repodata\n</code></pre>"},{"location":"special_interest_groups/sig_guide/release/#mirror-list-queries-informational","title":"Mirror List Queries (Informational)","text":"<p>Queries to a mirror list for SIG repositories will be like the standard calls, but repo names will have a format of <code>sig-NAME-MAJOR</code>. <code>NAME</code> can be a simple SIG name or abbreviate or a combination, for example, <code>sig-mcs-common</code> or <code>sig-cloud</code>.</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"special_interest_groups/sig_guide/testing/","title":"Automated Testing","text":"<p>This page is currently TBD. The new build system is planned to have testing and the testing team may have options in the future.</p> Resources Account ServicesGit (RESF Git Service)Git (Rocky Linux GitLab)MirrorsMail Lists <p>URL: https://accounts.rockylinux.org</p> <p>Purpose: Account Services maintains the accounts for almost all components of the Rocky ecosystem</p> <p>Technology: Noggin used by Fedora Infrastructure</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://git.resf.org</p> <p>Purpose: General projects, code, and so on for the Rocky Enterprise Software Foundation.</p> <p>Technology: Gitea</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://git.rockylinux.org</p> <p>Purpose: Packages and light code for the Rocky Linux distribution</p> <p>Technology: GitLab</p> <p>Contact: <code>~Infrastructure</code>, <code>~Development</code> in Mattermost and <code>#rockylinux-infra</code>, <code>#rockylinux-devel</code> in Libera IRC</p> <p>URL: https://mirrors.rockylinux.org</p> <p>Purpose: Users can apply to be a mirror to host Rocky content (SIG or the base operating system)</p> <p>Technology: MirrorManager 2</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p> <p>URL: https://lists.resf.org</p> <p>Purpose: Users can subscribe and interact with various mail lists for the Rocky ecosystem</p> <p>Technology: Mailman 3 + Hyper Kitty</p> <p>Contact: <code>~Infrastructure</code> in Mattermost and <code>#rockylinux-infra</code> in Libera IRC</p>"},{"location":"team/","title":"Teams","text":""},{"location":"team/#about","title":"About","text":"<p>This section of the wiki os for Rocky Linux team documentation pages, if applicable. In most cases, the teams will have their own wiki sites.</p> <p>Info</p> <p>This is not meant for Special Intereset Group documentation. Please see the Special Interest Group section for more information.</p> <p>Use the navigation bar to the left or the links below to find team specific documentation.</p> <p>Infrastructure Team</p> <p>Release Engineering Team</p> <p>Testing Team</p> <p>Design Team</p> <p>Community Team</p> <p>Documentation Team</p>"},{"location":"team/community/","title":"Community Team","text":""},{"location":"team/community/#about","title":"About","text":"<p>The Community Team is responsible for interacting with and maintaining the Rocky Linux Community, in accordance with the Charter and By-Laws of the project.</p> <p>Everyone who is part of Rocky Linux is a member of the Community team, and is charged with upholding the standard of our community, specifically: being curteous and treating all people--within and without the RESF--with respect. While discourse is often necessary in projects with multiple voices, it is our responsibility to remember we are all human and are working together for the good of the community overall.</p> <p>In addition to the above, the community team runs outreach for Rocky, including managing social channels, moderating mailing lists, and more. This is an area that is always in need of participation and we welcome anyone who would like to be part of it.</p>"},{"location":"team/community/#management","title":"Management","text":"<p>This team is lead by the Team Leads listed below.</p>"},{"location":"team/community/#contact","title":"Contact","text":""},{"location":"team/community/#email","title":"Email","text":"<p>hello@rockylinux.org</p>"},{"location":"team/community/#mattermost","title":"Mattermost","text":"<p>Community</p>"},{"location":"team/community/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Team Lead / Community Manager Krista Burdine krista@resf.org @grammaresque grammaresque Deputy Team Lead Alexia Steinberg alexia@rockylinux.org @alexia alexia"},{"location":"team/community/#join-team","title":"Join Team","text":"<p>If you are interested in joining the Community Team in any capacity above membership, we ask that you join and begin supporting the community. If you want to work on a specific task such as social media, outreach, or anything else you can think of, bring it up in chat and we'll work with you to help guide your contribution.</p>"},{"location":"team/community/meeting-notes/","title":"Community Planning Meeting Notes","text":""},{"location":"team/community/meeting-notes/#meeting-notes","title":"Meeting Notes","text":"<p>Catch up on what initiatives the community side of the project is working on.</p> <p>Meeting Notes</p> <p>Anyone may participate! Look for Rocky Linux Community Team events in the RESF Public Calendar.</p>"},{"location":"team/community/past-events/","title":"Past Events","text":""},{"location":"team/community/past-events/#past-event-summaries","title":"Past Event Summaries","text":"<p>Please use this template to create summaries for each event.</p> <p>Did we meet you at one of these events?    1. Please add your name, link any related social media posts you made, or add a highlight to the relevant report.    2. If the report does not yet exist, use the above template to initialize the report and add to the directory docs/team/community/event-reports. Use naming convention ([YY][acronym or brief name].md).   3. Helpful ways to flesh out that initial document include looking up the event website and noting it in the \"Additional Resources\" section, and then adding Event Name, Event Dates, and Event Location to the appropriate places in the template.   4. Then modify this document with the link to that file. e.g., if the document is for SuperComputing '24, the link will look like this: (event-reports/24SC.md)   5. Submit PR against the development branch.</p> <p>It's okay if the document is very sparse. Every bit of help, helps.</p>"},{"location":"team/community/past-events/#2024","title":"2024","text":"<ul> <li>SuperComputing (SC24)</li> <li>All Things Open</li> <li>OpenLibreFree (OLF)</li> <li>Hacktoberfest</li> <li>Nerdearla 10th Anniversary</li> <li>Columbia LUG</li> <li>DevConfUS Boston incl Boston Python</li> <li>Flock to Fedora</li> <li>GUADEC</li> <li>SouthEast LinuxFest (SELF)</li> <li>LinuxFest Northwest (LFNW)</li> <li>Texas Linux Festival (TXLF)</li> <li>Southern California Linux Expo (SCaLE)</li> <li>HPC Energy Conference</li> <li>State of Open Con</li> <li>FOSDEM 2024 plus CentOS Connect Fringe Event</li> </ul>"},{"location":"team/community/past-events/#2023","title":"2023","text":"<ul> <li>Rockmas - Rocky's online celebration of community</li> <li>SuperComputing (SC23)</li> <li>OpenLibreFree (OLF)</li> <li>Greater Toronto Area LUG (online)</li> <li>Flock to Fedora</li> <li>SouthEast LinuxFest (SELF)</li> <li>Write the Docs Portland</li> <li>FOSDEM</li> </ul>"},{"location":"team/community/roadmap/","title":"Roadmap","text":""},{"location":"team/community/roadmap/#roadmap","title":"Roadmap","text":""},{"location":"team/community/roadmap/#community-initiatives","title":"Community Initiatives","text":"<ul> <li>Community Health Check</li> <li>Project viability - Onboarding information for general, for each team, and for each SIG - IN PROGRESS<ul> <li>Growth of community - Clarify how to become a contributor</li> </ul> </li> <li>Project maturity - Enhance community page on wiki - IN PROGRESS</li> <li>Growth of community - Role definitions: Define what the board does, what a team does, what a SIG does. - IN PROGRESS</li> <li>Flesh out the Rocky Linux YouTube channel</li> <li>Develop overall marketing strategy</li> <li>Grow project sponsorship and processes for sponsors</li> </ul>"},{"location":"team/community/roadmap/#completed-initiatives","title":"Completed Initiatives","text":"<ul> <li>Project maturity - Code of Conduct - FINISHED</li> </ul>"},{"location":"team/community/event-reports/23SELF/","title":"SouthEast LinuxFest \u201823","text":""},{"location":"team/community/event-reports/23SELF/#event-report","title":"Event Report","text":"<p>SELF is a long-running regional Linux festival for homelab enthusiasts, held annually in Charlotte, North Carolina. </p> <p>Rocky Linux made its second annual appearance this year, hosting a table and sponsoring after-hours parties both nights of the festival, including food and a local craft beer share. It was a great chance to network and grow the community.</p> <p>We gave away Rocky swag including stickers, tees, and koozies throughout the event. We promoed a slide show.</p> <p>Several key team members attended, including Louis, Ben, Krista, Pablo, Skip, Neil, and Taylor. This allowed us to answer lots of questions about Rocky, the RESF, and the relationship between the two. </p> <p>Neil gave a talk about Peridot Build System, teasing several features of the completely overhauled v2.</p> <p>Having so many team members in one place for a few days created some great synergy. Louis celebrated that, \u201cThe real win of the South East Linux Fest isn't that all of us were here... it's that we A) solved two package build issues and B) solved MTU problems, with Skip, Neil, Pablo, and Taylor all in person at the booth with some folks witnessing it in person.\u201d</p> <p>Various posts about the event from our socials and individual team members:</p> <p>Traveling to the event</p> <p>Arrived!</p> <p>Neil and Fred</p> <p>Sunday morning Facebook</p> <p>General post on Mastodon</p> <p>One of the questions we heard a lot this weekend was, \u201cWhat makes Rocky Linux stand out?\u201d As a bug-for-bug compatible RHEL clone, in some ways it\u2019s just a matter of preference. One strength of open source is in its diverse solutions. </p> <p>But on the other hand, we think this community is something special. We formed around the shared purpose of providing and maintaining a stable Enterprise Linux solution with a commitment to keeping the promise of a ten-year release cycle, in a way that ensures control of it can never be taken from the community by a single person or corporation. And we\u2019ve kept going through the shared value of collaboration, and staying focused on the goal.</p> <p>In two and a half years we have encountered tricky problems, and shed a little blood, sweat, and tears together to find solutions. We have weathered setbacks and come back stronger each time. We\u2019ve learned from each other, pushed each other to be better, and developed enduring friendships with people around the globe.</p> <p>As everyone headed home (or for some of us, onward to another event) at the end, the messages poured into the chat channel. </p> <p>From the airport Pablo sent, \u201cReally amazing to have been there, already at the airport waiting to go back. Hopefully we'll see each other gain soon.\u201d</p> <p>Neil reflected, \u201cso glad to have gotten us all together. I'm excited - our project is feeling so much more \"real\" now that so many of us have met in person. love y'all  and safe travels.\u201d</p> <p>Meanwhile when Skip got home he sent this message, \u201cSkip Grube has marked himself safe from the North Carolina freeway.\u201d</p> <p>Louis chimed in, \u201cLanded safely. Till we all meet again\u2026\u201d</p> <p>The Rocky Linux community intends to be around for the long haul, which means, relatively, we are still just getting started. There\u2019s still lots of room for more people to get involved! Whether you are a developer, a security expert, a graphic designer, or a technical writer; whether you\u2019re a seasoned genius or an enthusiastic baby beginner; whether your interest is in Rocky Linux itself or in how you can use it to pursue your own special interest project: we\u2019d love to meet you.</p> <p>You can meet Rocky community members in several channels, listed in the \u201ccommunity\u201d tab at RockyLinux.org. And maybe one of these days, we\u2019ll meet up with you at a conference, too!</p>"},{"location":"team/community/event-reports/24FOSDEM/","title":"FOSDEM 2024 with CentOS Connect","text":""},{"location":"team/community/event-reports/24FOSDEM/#submitted-by-krista-burdine","title":"Submitted by Krista Burdine","text":""},{"location":"team/community/event-reports/24FOSDEM/#fringe-event-details","title":"Fringe Event Details:","text":"<ul> <li>CentOS Connect: February 1-2, 2024</li> <li>Location: Radisson Hotel, Grand Place Brussels</li> <li>Type: Sponsor, Release Engineering mastermind </li> </ul>"},{"location":"team/community/event-reports/24FOSDEM/#main-event-details","title":"Main Event Details:","text":"<ul> <li>FOSDEM: February 3-4, 2024</li> <li>Location: ULB Solbosch Campus, Brussels, Belgium</li> <li>Type: Stand sponsor, Enterprise Linux hallway</li> </ul>"},{"location":"team/community/event-reports/24FOSDEM/#overview","title":"Overview:","text":"<p>First, this event included the CentOS Connect fringe event, which we sponsored. We used a two hour block of time during that event for the Release Engineering team to hold an annual planning meeting for the upcoming year. We also had the chance to mingle with other members of the Enterprise Linux (EL) ecosystem.</p> <p>FOSDEM is the biggest event the RESF has participated in. The first day\u2019s attendance this year reportedly outpaced attendance from last year\u2019s full two-day event. We gave away hundreds of stickers, a hundred tees to people who engaged with us in conversation, and a dozen mugs to people who were already part of the Rocky community or who joined the Mattermost server at this event.</p> <p>The Rocky contingent of 9 people was kept busy fielding questions, from which we have developed a new list of FAQs to mull over and propose answers for our website. Wale, Neil, Sherif, Antoine and I did most of the behind table work, with hallway support from Louis and Pablo.</p>"},{"location":"team/community/event-reports/24FOSDEM/#highlights","title":"Highlights:","text":"<ol> <li>The Release Engineering team used this event as a meetup to solve problems and chart a course for the year. Having so many members of the team together created big energy and </li> <li>We got to meet many curious and intelligent university students and explain Rocky to them. </li> <li>Antoine brought several French cheeses, French wine, and artisan bread for an epic meal to celebrate us all coming together. </li> </ol>"},{"location":"team/community/event-reports/24FOSDEM/#outcomes","title":"Outcomes:","text":"<p>Antoine and Pablo proved invaluable for translation services (French and Spanish), due to it being such an international crowd. </p> <p>Antoine and Wale provided great insight and emphasis on the importance of the documentation arm of the project.</p> <p>We needed many more stickers, better signage with information to carry away (or QR codes for online), and clear talking points.</p>"},{"location":"team/community/event-reports/24FOSDEM/#additional-resources","title":"Additional Resources:","text":"<p>FOSDEM is a free event for software developers to meet, share ideas, and collaborate. Dates for the next event are February 1-2, 2025 in Brussels, Belgium.</p> <p>CentOS Stream is a continuously delivered distro that tracks just ahead of Red Hat Enterprise Linux (RHEL), positioned as a midstream between Fedora and RHEL. The project is focused around the goal of providing a rich base platform for open source communities to build upon, and we are grateful to be able to support the project as a fellow resident of the EL ecosystem.</p> <p>Rocky\u2019s Linked In post about CentOS Connect. </p> <p>The CentOS Project celebrated its 20th birthday at their event, and we were honored to be invited to the party.</p> <p>Forrest is a brilliant young mind representing our sponsor, CIQ, who spoke for 10 densely packed minutes about Apptainer.</p> <p>Brian Phan, another articulate representative of CIQ, delivered a community update about Warewulf.</p>"},{"location":"team/community/event-reports/24FOSDEM/#did-we-meet-you-at-fosdem-add-your-name-below","title":"Did we meet you at FOSDEM? Add your name below.","text":"<p>You are invited to share any memories or links to social posts you made about the event.</p>"},{"location":"team/community/event-reports/24GUADEC/","title":"GUADEC (formerly GNOME Users and Developers European Conference)","text":""},{"location":"team/community/event-reports/24GUADEC/#event-details","title":"Event Details","text":"<ul> <li>Date: July 19-24, 2024</li> <li>Location: Denver, CO, USA</li> <li>Type: Lanyard Sponsor</li> </ul>"},{"location":"team/community/event-reports/24GUADEC/#overview","title":"Overview","text":"<p>According to the event description, \"GUADEC is the GNOME community\u2019s largest conference, bringing together hundreds of users, contributors, community members, and enthusiastic supporters for a week of talks and workshops.\"  The Rocky Linux community was delighted to sponsor this event and support the project, given that GNOME is the user interface that comes packaged with our operating system by default.  </p>"},{"location":"team/community/event-reports/24GUADEC/#highlights","title":"Highlights","text":"<ul> <li>A construction worker walked into a bar carrying two pieces of asphalt. He said to the bartender, \"I'll take two drinks please\u2014one for me, and one for the road.\" Community Team Lead Krista Burdine told a few bad construction jokes and spoke about \"Before they can come, you have to build it: making your project accessible to new contributors.\"</li> <li>As our first official connection with the GNOME community, we had a little introducing to do. A little charcuterie and drinks at a local eatery served as a great connecting point. Krista had the chance to attend a Diverse Women in Tech type after-hours dinner, and really enjoyed conversing with women of similar experience and interests.</li> <li>This was the first time Ryan Sipes has talked publicly about the rebirth of Thunderbird, since he and his team figured out how to engage the community to contribute to their continued existence. Truly one of the most inspiring keynotes that could have been presented in an open source community. It lit a fire for us to engage our community with the same enthusiasm. </li> </ul>"},{"location":"team/community/event-reports/24GUADEC/#outcome","title":"Outcome","text":"<p>This was the first time in a few years that the GNOME community had a meetup in the US, and we were pleased to be part of it. The purpose of the GNOME Foundation is to empower people with the technical tools to manage their personal computing experience. Our Community Team Lead contributed to that effort by speaking about making community accessible to new users.</p>"},{"location":"team/community/event-reports/24GUADEC/#additional-resources","title":"Additional Resources","text":"<ul> <li>GNOME Community)</li> <li>Krista Burdine LinkedIn post about the trip</li> </ul>"},{"location":"team/community/event-reports/24GUADEC/#did-we-meet-you-there","title":"Did we meet you there?","text":"<p>Please add your name, a link to your public posts about the event, your GitHub handle, or whatever other relevant information you want to include.</p>"},{"location":"team/community/event-reports/24SELF/","title":"Event Name: SouthEast LinuxFest (SELF)","text":""},{"location":"team/community/event-reports/24SELF/#event-details","title":"Event Details","text":"<ul> <li>Date: June 7-9, 2024</li> <li>Location: Sheraton Charlotte Airport Charlotte, NC</li> <li>Type: Sponsored</li> </ul>"},{"location":"team/community/event-reports/24SELF/#overview","title":"Overview","text":"<p>What is the SouthEast LinuxFest (SELF)?</p> <p>The SouthEast LinuxFest is a community event for anyone who wants to learn more about Linux and Open Source Software. It is part educational conference and part social gathering. Like Linux itself, it is shared with attendees of all skill levels to communicate tips and ideas, and to benefit all who use Linux and Open Source Software.  SELF is the place to learn, to make new friends, to network with new business partners, and most importantly, to have fun!   The most similar events to SELF are Linuxfest Northwest, Southern California Linux Expo, Penguicon, and Ohio Linuxfest.</p> <p>What makes SELF unique?</p> <p>While SELF is centered on Linux and Open Source, both desktop and enterprise, we are happy to explore related geeky areas.   We reliably have content on networking, programming, hardware, information security, amateur (\u201cham\u201d) radio, and similar areas.   We also have a /dev/random track, which has proven very popular, where all bets are off in terms of content.  We\u2019ve had everything from the Ukraine War to hardware computers used in WWI era battleships and their use in the Battle of Jutland to home automation.   Talks on these subjects are all day Friday, all day Saturday, and Sunday until after early afternoon.</p> <p>Rocky Linux is a Silver Sponsor of the event</p>"},{"location":"team/community/event-reports/24SELF/#highlights","title":"Highlights","text":"<p>Community Focus on Linux and Open Source: SELF is a community event designed for anyone interested in Linux and open source software, offering educational sessions and networking opportunities for all skill levels.</p> <p>SouthEast LinuxFest (SELF)</p> <p>Wide Range of Topics: While focused on Linux and open source, SELF includes talks on related topics like networking, hardware, programming, information security, and amateur radio, with a flexible \"/dev/random\" track that covers diverse subjects.</p> <p>Social and Networking Events: SELF leans into social aspects, offering a lounge with recharge stations, a LAN party, tabletop games, and parties featuring a Craft Beer Bottle Share event, enhancing both learning and networking.</p> <p>Free to Attend: SELF is free for general attendees, with additional tiers for supporting attendees ($50), speakers, and sponsors, making it accessible while offering extra perks for those who want to support the event.</p> <p>Unique Geeks with Guns Event: SELF features a \"Geeks with Guns\" event at a nearby shooting range, adding a distinctive element of fun for participants, though it's a paid, optional activity.</p>"},{"location":"team/community/event-reports/24SELF/#outcome","title":"Outcome","text":"<p>opportunity for participants to expand their knowledge and skills in Linux and open source technologies, while also building valuable connections within the tech community</p>"},{"location":"team/community/event-reports/24SELF/#additional-resources","title":"Additional Resources","text":"<p>SELF Rocky Linux</p>"},{"location":"team/community/event-reports/24SELF/#did-we-meet-you-there","title":"Did we meet you there?","text":"<p>I did not attend the event Johnny Santamaria Github handle: @Johnny603</p>"},{"location":"team/community/event-reports/24flock/","title":"Flock to Fedora","text":""},{"location":"team/community/event-reports/24flock/#details","title":"Details:","text":"<ul> <li>Date: August 7-10, 2024</li> <li>Location: Rochester, New York, USA</li> <li>Sponsor: Gold Level</li> <li>Attended: Neil Hanlon (Infrastructure); Krista Burdine (Community)</li> </ul>"},{"location":"team/community/event-reports/24flock/#overview","title":"Overview:","text":"<p>Flock to Fedora is an annual event hosted by Fedora for the purpose of team building and community development. The event includes annual reports on the State of Fedora and What Does Red Hat Want, workshops hosted by different SIGs and working groups within the Fedora project to prepare for the upcoming year, keynotes and speakers on Fedora related topics, and nightly community building activities.</p> <p>Rocky Linux sponsors this event as part of our commitment to contribute upstream. As the ultimate enterprise Linux upstream, our support of Fedora can benefit the entire EL neighborhood which includes CentOS Stream, Red Hat Enterprise Linux, and any downstream projects of all three.</p>"},{"location":"team/community/event-reports/24flock/#highlights","title":"Highlights:","text":"<ul> <li>From the Main Stage: We enjoyed hearing from Joseph Gayoso about Marketing Team Hopes &amp; Dreams, including the plan and execution of growing the Fedora channel on Mastodon.</li> <li>Hackfests:  Neil attended the Infra and Releng Hackfest.  Krista attended the Fedora DEI Team Hackfest and participated in plans for the upcoming Week of Diversity event in March 2025.</li> <li>After Hours: Nighttime events always seem to provide the best memories. National Museum of Play: Each attendee was given tokens to play in the arcade. Connecting after hours in a place that celebrates play. Rocky Social: Krista and Neil connected with some Rocky fans; over a few beers we brainstormed expanding the Rocky footprint in new directions.</li> </ul>"},{"location":"team/community/event-reports/24flock/#outcome","title":"Outcome:","text":"<p>It\u2019s no secret that the first few years of Rocky\u2019s existence, creating space for a new community-driven EL in an established landscape, have included some fractious moments. The challenges made us dig into what fosters a community that can achieve the most good.</p> <p>Our conclusion has been to lean into our place within the Enterprise Linux neighborhood of open source projects, and serve our community while being the best neighbor possible. We realized we need to be more transparent about our upstream support, through being contributors of the upstream projects, calling out issues and bug reports submitted from our project maintainers, and through straight-up financial support of events like Flock and the recurring CentOS Connect conference.</p> <p>Flock to Fedora provides a neutral location to rub shoulders IRL with other members of the downstream EL community. When we interact in person it becomes easier to realize we are working toward a similar goal of providing a quality open source product that is supported by the community but suitable for enterprise use. Our various projects are not opponents to be pitted against one another, but co-laborers supporting the value of Enterprise Linux.</p> <p>The Rocky Linux team leads appreciated the networking, support, and respect shared by the Fedora community. So long, Rochester. Until next time, fellow Fedorans.</p>"},{"location":"team/community/event-reports/24flock/#additional-resources","title":"Additional Resources:","text":"<p>Flock to Fedora main page Upcoming Rocky Linux Events</p>"},{"location":"team/community/event-reports/24hacktoberfest/","title":"Hacktoberfest 2024","text":""},{"location":"team/community/event-reports/24hacktoberfest/#event-details","title":"Event Details","text":"<ul> <li>Date: October 1-13, 2024</li> <li>Location: Rocky Linux repositories on GitHub:</li> <li>rockylinux.org</li> <li>documentation</li> <li>wiki.rockylinux.org</li> <li>Type: Online Event</li> </ul>"},{"location":"team/community/event-reports/24hacktoberfest/#overview","title":"Overview","text":"<p>GitHub says this about Hacktoberfest: \"Open-source projects, maintained by community-minded coders, make the modern internet function. Supporting that essential work, and the folks behind it, is what Hacktoberfest is all about.\" Participants are encouraged to submit at least four high-quality Pull Requests during the month of October, to any of the many hundreds of thousands of public repositories hosted on GitHub or GitLab.</p> <p>Rocky Linux is pleased to make several of our GitHub repositories available to participants. Approved repos have been given the label 'hacktoberfest'. To support Rocky Linux as part of your Hacktoberfeset experience, visit the repos linked above and start by looking at the open Issues for ones labeled for 'hacktoberfest'. Check out the contribution guide for each repo (they are all a little different), then choose an Issue, work through the steps to resolve it, open a PR, and stick with it until we get it merged!</p> <p>You are also invited to submit an original PR. Just make sure we know to label it for Hacktoberfest. When PRs are closed successfully, they should be given a final tag of \"Hacktoberfest-approved\".</p>"},{"location":"team/community/event-reports/24hacktoberfest/#highlights","title":"Highlights","text":"<p>Almost all of our highlighted requests are considered Good First Issues to resolve. - The rockylinux.org repo houses aspects related to website functionality and content. Request for a photo gallery feature to be added to a specific location on the website. More issues may be added during the month. - The documentation repo houses books, guides, tutorials, and labs of Linux-related processes framed for Rocky Linux. We have several requested tutorials including networking, hardware troubleshooting, and desktop applications. Participants are also invited to submit tutorials on whatever topic inspires them. - The community team, housed within the wiki.rockylinux.org repo, is currently building out its documentation and requests help in the area of event reports and social media posts.</p>"},{"location":"team/community/event-reports/24hacktoberfest/#outcomes","title":"Outcomes","text":"<p>This will be updated after the event.</p>"},{"location":"team/community/event-reports/24hacktoberfest/#additional-resources","title":"Additional Resources","text":"<ul> <li>Hacktoberfest on GitHub</li> <li>Rocky Linux original call to action</li> </ul>"},{"location":"team/community/event-reports/24hacktoberfest/#hacktoberfest-participants","title":"Hacktoberfest Participants","text":"<p>Please add your name, a link to your public posts about the event, your GitHub handle, or whatever other relevant information you want to include.</p> <p>\ud83d\udc49 Panayiotis Georgiou @georgioupanayiotis - Facebook Post</p> <p>\ud83d\udc49 Andrew Scott @andcscott - LinkedIn Post</p> <p>\ud83d\udc49 Joey Brinkman@j0eybrinkman - Linkedin Post</p> <p>\ud83d\udc49 Kartik Bhatt [@kartikbhatt] (https://github.com/kartik-212004) - mastodon.social Post</p> <p>\ud83d\udc49 Johnny Santamariajohnny603 - Linkedin Post</p>"},{"location":"team/community/event-reports/24nerdearla/","title":"NERDEARLA \u201824 10mo Aniversario","text":""},{"location":"team/community/event-reports/24nerdearla/#event-details","title":"Event Details:","text":"<ul> <li>Date: September 26-28, 2024</li> <li>Location: Buenos Aires, Argentina</li> <li>Type: Bronze Sponsor, Speaker for Open Source track</li> </ul>"},{"location":"team/community/event-reports/24nerdearla/#overview","title":"Overview:","text":"<p>Nerdearla, translated literally as, \u201cNerd it up!\u201d is the largest science and technology event in Latin America. From its origins in Argentina, it has spread to Chile and Mexico, with further plans for expansion in the works. This particular event was the 10th anniversary edition, in the flagship location of Buenos Aires. About 10,000 attendees came in-person last year. This year we saw 10,000 or more each day. The event celebrates all things science and technology, and promotes educating and supporting people through opportunities for job interviews as well as being accessible for children and young people to have positive experiences and develop STEM type interests.</p> <p>The purpose of Rocky Linux presence in Buenos Aires was to recognize existing fans and users of RL in the Spanish-speaking world, to answer questions about RL as a distribution, and to build goodwill and develop the LATAM community connected to Rocky Linux. </p>"},{"location":"team/community/event-reports/24nerdearla/#highlights","title":"Highlights:","text":"<ul> <li>Krista gave a project tour of Rocky Linux on Thursday as part of the Open Source track. </li> <li>Alexia delivered a Lightning Talk about the local Women in Tech (MET - Mujeres en Technolog\u00eda) chapter, encouraged people to join the RL community via Mattermost, promoted the Espa\u00f1ol channel, and advertised that there would be future BA Rocky Linux pizza nights.</li> <li>We gave away almost 1,000 stickers.</li> <li>Rocky Linux showed support for a special event that is culturally relevant to an enormous audience that we have minimal previous connection with.</li> </ul>"},{"location":"team/community/event-reports/24nerdearla/#outcome","title":"Outcome:","text":"<p>The onsite Rocky team saw and engaged with the LATAM audience. Going forward, we expressed intention to visit South America at least once a year. When not possible, we may need to become more assertive about supporting and sending remote speakers to increase our global footprint.</p> <p>To improve our reach and connect with booth visitors, we have already begun to develop a streamlined single-link landing page that we can share a QR code link to at events, that explains what Rocky Linux is, casts the vision for purpose, addresses some FAQs, shows off our sponsors and supporters, and provides various paths into the project including Mattermost sign up, documentation starting point, YT link to a presentation of the project tour, and whatever else encapsulates the project.</p> <p>In addition to these empowering outcomes, this event brought the two community leads together in person, which inspired both leaders with ideas and excitement for future development within the community.</p>"},{"location":"team/community/event-reports/24nerdearla/#additional-resources","title":"Additional Resources:","text":"<ul> <li>NERDEARLA - South America\u2019s biggest science and technology event</li> <li>Prepare to be Assimilated - Krista Burdine led a behind the scenes tour of the Rocky Linux Project</li> <li>Alexia Stein spoke from stage about Mujeres en Tecnolog\u00eda.</li> <li>Our favorite speaker of NERDEARLA, Ken Thompson</li> <li>Collected posts from Nerdearla:<ul> <li>Nerdearla on Linked In</li> <li>Rocky Linux on Instagram </li> <li>Krista Burdine on X</li> </ul> </li> </ul>"},{"location":"team/community/event-reports/24nerdearla/#did-we-meet-you-there","title":"Did we meet you there?","text":"<p>Please add your name, a link to your posts about the event, your GitHub handle, or whatever other relevant information you want to include.</p>"},{"location":"team/community/event-reports/FOSDEM_2024/","title":"CentOS Connect &amp; FOSDEM 2024","text":"<p>(adapted with love from Fedora's event page</p>"},{"location":"team/community/event-reports/FOSDEM_2024/#about","title":"About","text":""},{"location":"team/community/event-reports/FOSDEM_2024/#centos-connect","title":"CentOS Connect","text":"<p>CentOS Connect is the contributor conference for CentOS, focusing on CentOS Stream, Special Interest Groups, and the entire Enterprise Linux ecosystem. CentOS Connect at FOSDEM happens February 1-2, 2024, as part of the FOSDEM Fringe.</p> <ul> <li>Website: connect.centos.org</li> <li>Location: Raddison Collection Hotel, Grand Place - Royal Room</li> <li>47 Rue du Foss\u00e9 aux Loups, Brussels,1000,Belgium </li> <li>Time Zone: Central European Time (CET), or UTC+1</li> <li>Schedule: https://connect.centos.org/</li> <li>Rocky Talks / Events: Releng Meetup, see below</li> <li>Format: In-person participation only, live-streaming available</li> </ul>"},{"location":"team/community/event-reports/FOSDEM_2024/#fosdem-2024","title":"FOSDEM 2024","text":"<p>FOSDEM is a free event for software developers to meet, share ideas, and collaborate. Every year, thousands of developers of free and open source software from all over the world gather at the event in Brussels. You don't need to register. Just turn up and join in! FOSDEM 2024 will be held on 3-4 February 2024.</p> <ul> <li>Website: fosdem.org/2024/</li> <li>Location: ULB Campus Solbosh, Avenue Franklin D. Roosevelt, 50, 1050 Bruxelles</li> <li>Time Zone: Central European Time (CET), or UTC+1</li> <li>Schedule: fosdem.org/2024/schedule/</li> <li>Rocky Talks / Events: See below</li> <li>Format: In-person participation only, live-streaming available</li> </ul> <p>First time at FOSDEM? Read the FOSDEM practical info guide to learn more.</p>"},{"location":"team/community/event-reports/FOSDEM_2024/#timing-and-location","title":"Timing and Location","text":"<p>The events are easily reachable by public transportation. For details, see below. If you are afraid of getting lost, the following links might help you:</p>"},{"location":"team/community/event-reports/FOSDEM_2024/#centos-connect-raddison-collection-hotel-grand-place-royal-room","title":"CentOS Connect - Raddison Collection Hotel, Grand Place (Royal Room)","text":"<ul> <li>OpenStreetMap</li> <li>Google Maps</li> </ul>"},{"location":"team/community/event-reports/FOSDEM_2024/#fodsem-2024-ulb-campus","title":"FODSEM 2024 - ULB Campus","text":"<ul> <li>OpenStreetMap</li> <li>Google Maps</li> </ul>"},{"location":"team/community/event-reports/FOSDEM_2024/#hotel","title":"Hotel","text":"<p>Most of the Rocky folks attending are staying in the Marriot Renaissance Brussels Hotel, or the Marriot Executive Apartments, which are directly next door.</p> <p>This hotel is roughly half way between the Grand Place (city center) and the ULB campus, where the CentOS Connect and FOSDEM events are being held, respectively.</p> <p>As we're all staying in the same place, we can travel in groups as needed.</p>"},{"location":"team/community/event-reports/FOSDEM_2024/#schedule-at-a-glance","title":"Schedule at-a-glance","text":""},{"location":"team/community/event-reports/FOSDEM_2024/#thursday-1-february","title":"Thursday, 1 February","text":"<ul> <li>CentOS Connect Meetups (morning) and presentations (afternoon)</li> <li>Arrival time: 08:30 - 09:00</li> <li>Rocky Releng Planning &amp; Meetup scheduled<ul> <li>Begins at 09:00 in Oslo room </li> </ul> </li> <li>Conference programming: 09:00 - 13:00 (Meetups), 14:00-16:00 (Sessions)</li> <li>Evening reception hosted by CentOS celebrating 20 years of CentOS</li> <li>Location TBD</li> </ul>"},{"location":"team/community/event-reports/FOSDEM_2024/#friday-2-february","title":"Friday, 2 February","text":"<ul> <li>CentOS Connect presentations continue</li> <li>Arrival time: 08:30 - 09:00</li> <li>Arrival time: 08:30</li> <li>Conference programming: 09:00 - 18:30</li> <li>Rocky Contributor Dinner: 19:30 - ???</li> <li>Location TBD </li> </ul>"},{"location":"team/community/event-reports/FOSDEM_2024/#saturday-3-february","title":"Saturday, 3 February","text":"<ul> <li>FOSDEM - ULB Campus</li> <li>Arrival Time: 09:30 - 10:30</li> <li>Conference programming: 10:30 - 19:00</li> </ul>"},{"location":"team/community/event-reports/FOSDEM_2024/#sunday-4-february","title":"Sunday, 4 February","text":"<ul> <li>FOSDEM - ULB Campus</li> <li>Arrival Time: 08:30 - 09:00</li> <li>Conference programming: 09:00 - 17:00</li> </ul>"},{"location":"team/community/event-reports/FOSDEM_2024/#rocky-presence","title":"Rocky presence","text":"<p>If you are a Rocky Contributor or Community member planning on attending FOSDEM or CentOS Connect, we would love for you to add your name to the list and come introduce yourself! Use the comments column to specify your role in the Rocky community.</p> No Name RAS Thu, 1 Feb Fri, 2 Feb Sat, 3 Feb Sun, 4 Feb Languages Comments 1 Neil Hanlon neil \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f en, bad fr Rocky Infrastructure Lead, RESF Founder 2 Louis Abel label \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f x en, bad es Rocky Linux Release Engineering Lead, RESF Founder 3 Sherif Nagy sherif \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f en, ar, bad de Rocky Linux Release Engineering member, RESF board member 4 Krista Burdine grammaresque \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f en, sp RESF Community Manager 5 Antoine Le Morvan alemorvan \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f fr, bad en RESF Member, Documentation Author &amp; Translation Lead 6 Brian Phan bphan \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f en, bad fr Rocky Community Member 7 Forrest Burt fburt \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f en Rocky Community Member 8 Pablo Greco pgreco \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f en, sp, it Rocky Linux Release Engineering member, altarch guru"},{"location":"team/community/event-reports/FOSDEM_2024/#speakers-events","title":"Speakers / Events","text":"No Name Date Time Speaker(s) Location Description 1 Rocky Linux Release Engineering - Meetup and Planning Thursday, 1 February TBD Neil Hanlon, Louis Abel CentOS Connect - Meetups Join members of the Rocky Linux Release Engineering team as we work to plan the road ahead for Peridot, the build system built specifically to enable Rocky Linux and its Special Interest Groups (SIGs). This meetup offers a platform for the Peridot developers and release engineering teams, as well as other interested parties to come together to analyze, plan, organize, and pave the way for a more efficient and streamlined release process for the core Operating System and SIGs. All are welcome to join this conversation regardless of your familiarity with Peridot or the Rocky Linux project! 2 Warewulf: an overview, new features, and community updates Saturday, 3 February 14:10 - 14:20 UA2.118 Brian Phan Warewulf is a simple, lightweight, stateless cluster provisioning tool. This talk will cover a high-level overview of Warewulf and its features. It will also provide a sneak peak into features coming in version 4.5 such as grub netboot and disk provisioning with Ignition. Finally, we will provide some organizational updates within the project such as formalization of community engagement, establishment of a technical steering group, and how you can get involved in the project today. 3 Updates and Innovations with the Apptainer Platform Saturday, 3 February 14:45 - 14:55 UA2.118 Forrest Burt Apptainer, an open-source containerization software built for HPC and used by over 25,000 computing sites worldwide, entered the Linux Foundation about two years ago. This was accompanied by a rebasing in version and a fresh roadmap of features for the software project moving forward. A significant amount of development has happened both on these features and on methods of utilizing Apptainer itself for greater efficiency in HPC since this changeover. This talk will explain these developments, including new support for fully rootless builds and installs of Apptainer, ways Apptainer now leverages the Linux user namespace for some of its features, innovations in using Apptainers with MPI and fabric adaptors, and the usefulness of ORAS protocol in software supply chain management and its current state of integration with OCI registries."},{"location":"team/community/event-reports/FOSDEM_2024/#goals-messaging","title":"Goals &amp; Messaging","text":"<p>Stub, fill in - mostly around SIGs and supporting the community in a variety of facets.</p>"},{"location":"team/design/","title":"Design Team","text":""},{"location":"team/design/#about","title":"About","text":"<p>The Design team handles Rocky Linux branding and design.</p>"},{"location":"team/design/#management","title":"Management","text":"<p>This team is lead by Michael Kinder.</p>"},{"location":"team/design/#contact","title":"Contact","text":""},{"location":"team/design/#email","title":"Email","text":"<p>design@rockylinux.org</p>"},{"location":"team/design/#mattermost","title":"Mattermost","text":"<p>Design</p>"},{"location":"team/design/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Design Team Lead Michael Kinder mkinder@rockylinux.org @ressonix ressonix"},{"location":"team/design/#join-team","title":"Join Team","text":"<p>If you are interested in joining the Design Team as a Deputy, we ask that you start making contributions, engaging with the lead in the Mattermost channel, and engaging with the community.</p>"},{"location":"team/design/branding/","title":"Branding","text":""},{"location":"team/design/branding/#brand-kit","title":"Brand Kit","text":"<p>Download</p> <p>Please refer to the included Brand &amp; Trademark Usage Guide to ensure that you follow our brand and trademark policies. If you have questions, concerns, or comments, please send an email to design@rockylinux.org.</p>"},{"location":"team/design/branding/#trademark-usage-policy","title":"Trademark Usage Policy","text":"<p>This is a statement of Rocky Enterprise Software Foundation's (RESF) trademarks and its policy and guidelines relating to use of trademarks owned by RESF and used by projects under RESF.</p> <p>For purposes of this document, references to trademarks or marks include all trade and service marks and logos owned by the RESF legal entity. Projects operating as separately incorporated entities managed by RESF have their own trademarks, policies and usage guidelines.</p>"},{"location":"team/design/branding/#rocky-enterprise-software-foundations-trademarks","title":"Rocky Enterprise Software Foundation's Trademarks","text":"<p>Rocky Enterprise Software Foundation has registrations pending or trademarks in use for the following marks in the United States and/or other countries:</p> <ul> <li>Rocky Enterprise Software Foundation\u2122</li> <li>RESF\u2122</li> <li>Rocky Linux\u2122</li> </ul>"},{"location":"team/design/branding/#resf-trademark-usage-guidelines","title":"RESF Trademark Usage Guidelines","text":"<p>Trademarks are used to provide assurance to the community of consistency with respect to the quality of products or services with which the mark is associated. This policy attempts to strike the proper balance between two competing interests: 1) the need of the RESF to ensure that its trademarks remain reliable indicators of the qualities that they have been created to preserve and 2) the need of RESF to ensure that community members are able to discuss the projects with which RESF is associated and to accurately describe the relationship between RESF and the products and services offered by others.</p> <p>A trademark provides the owner with an exclusive right to authorize or control the use of the mark. Your right to use a mark of RESF is provided for in this policy and in the statement of permitted use, if any, that may accompany the trademark notice displayed on the website dedicated to the project. A copyright license, even an open source copyright license, does not include an implied right or license to use a trademark that may be related to the project developing the licensed software or other materials. Because open source licenses permit unrestricted modification of the copyrighted software, and RESF has no intention of interfering with that right, your right to use any specific trademark of RESF is not determined by your use of software made available under an open source license. Your right to use a mark is conditioned upon conforming to other requirements that are directly related to the qualities that the specific mark has been created to preserve.</p> <p>Proper use of RESF trademarks by following these trademark guidelines protects the value of RESF trademarks. Any use of or reference to RESF trademarks that is inconsistent with this trademark policy, or use of marks that are confusingly similar to trademarks of RESF, is prohibited. All uses of RESF trademarks, and all goodwill associated therewith, will inure solely to the benefit of RESF.</p>"},{"location":"team/design/branding/#rules-that-apply-to-trademarks-in-general","title":"Rules That Apply to Trademarks in General","text":"<p>There are some basic rules that apply to any use of any trade or service mark that you do not own, including any mark of RESF, without the express permission of the owner.</p> <ul> <li>A trademark should never be used as a verb or a noun. A trademark should be used only as an adjective followed by the generic name/noun.</li> <li>A trademark should not be used in the plural or possessive form.</li> <li>A trademark should not be altered or amended in any way. A mark should not be combined with any other mark, hyphenated, abbreviated or displayed in parts. A trademark that is depicted as two or more words should not be compressed into one word. A logo should not be displayed with color variations, or with other elements superimposed on top of the logo.</li> <li>A trademark should not be used as your domain name or as part of your domain name.</li> <li>A trademark should not be incorporated into your company\u2019s logos or designs.</li> <li>A trademark notice should be used on the most prominent and/or first appearance of each mark of RESF, and a trademark notice should not be changed. In particular, a \u2122 should not be changed to a \u00ae in a trademark notice by anyone other than the owner. Alternatively, or as a supplement to the \u00ae, \u2122, or common law notices, a footnote or text notice with one of the alternative statutory notices is good practice: \u201cX is a trademark of the Rocky Enterprise Software Foundation.\u201d If you are unsure about whether a mark of RESF is registered in your country, please contact us for additional guidance as to what trademark symbol you should use.</li> </ul> <p>There are also some basic rights that everyone has to use any trademark, which are often referred to as \"fair use,\" and RESF does not intend to restrict those rights. You may make fair use of word marks to make true factual statements. But fair use does not permit you to state or imply that the owner of a mark products, endorses, or supports your company, products, or services. Even when making fair use of a trademark, you should acknowledge the owner of the trademark with a trademark notice, such as the notice displayed on RESF project websites.</p>"},{"location":"team/design/branding/#rules-and-policies-applicable-to-marks-owned-by-resf","title":"Rules and Policies Applicable to Marks Owned by RESF","text":"<p>In addition to the generally applicable rules discussed above, there are a few specific rules that we ask everyone to follow when using trademarks owned by RESF.</p> <ul> <li>Use the full form of any trademark (e.g., \u201cRocky Enterprise Software Foundation\u201d) in the first reference in all documents of mass communication, including marketing collateral and web pages. You may then use any abbreviated or short form references (e.g. \u201cRESF\u201d) within the same document where the full form has already been used.</li> <li>Use RESF\u2019s trademarks in a form that distinguishes them from the text around them, such as by capitalization, bold or italic fonts, or with quotation marks. Any use of unregistered trademarks as listed in the Trademark List above should include a \u2122 immediately after the first usage (e.g., \u201cThe Rocky Linux\u2122 community seeks to secure\u2026\u201d)</li> <li>Do not use RESF trademarks in a manner that would disparage RESF or its projects (e.g., untruthful advertising, false/misleading promotional materials, etc.).</li> <li>Do not use a RESF logo on the cover of a book or magazine without written permission from RESF.</li> <li>Do not use a logo of RESF on posters, brochures, signs, websites, or other marketing materials to promote your events, products or services without written permission from RESF.</li> <li>Do not refer to a product or service as being certified under any of RESF\u2019s marks unless your company has successfully undergone the requisite compliance testing and has explicit authorization to use such terms from RESF.</li> <li>Do not attempt to claim or assert any ownership rights in any mark of RESF and do not attempt to register any RESF trademark as a trademark, trade name, domain name, or \u201cdoing business as\u201d name, alone or (unless specifically licensed) in combination with your own trademarks.</li> <li>Do not use any RESF trademark in metatags, search fields, hidden text, or any other form that has the purpose or effect of diverting or confusing consumers without RESF\u2019s prior written permission.</li> <li>Do not adopt marks or logos that are confusingly similar to any RESF trademarks.</li> <li>Do not use RESF trademarks for products or services for which they were not originally intended.</li> <li>Do not alter a RESF trademark in any way.</li> </ul> <p>RESF marks have been created and their use is expressly permitted for a specific purpose. Do not use logos or names of RESF in any commercial or marketing context other than as expressly permitted in this policy unless you have obtained explicit written permission from RESF to do so. RESF permits the use of its trademarks for private and personal use to make t-shirts, stickers, and caps for yourself and your friends (meaning people from whom you don't receive anything of value in return) in a manner that is consistent with the preservation of the goodwill and value of the mark. The goodwill, if any, derived from your use of any RESF trademarks exclusively inures to the benefit of and belongs to the RESF.</p> <p>You are also allowed to use a trademark or logo of RESF as a link to the home page of the applicable project or to a web page on the RESF web site that is relevant to the reference so long as the link is in a manner that is consistent with the preservation of the goodwill and value of the mark. The link and all other usage of a logo of RESF shall be done using the official versions of RESF logos obtained from RESF or its projects.</p> <p>For examples of incorrect uses of a logo of RESF, please refer to Section 1.3 (Logo Misuse) of our Brand &amp; Trademark Usage Guide (included in our Brand Kit).</p> <p>Certain marks of RESF have been created to enable you to communicate compatibility or interoperability of software or products. In addition to the requirement that any use of a mark to make an assertion of compatibility must, of course, be accurate, the use of these marks must avoid confusion regarding RESF's association with the product. The use of the mark cannot imply that RESF or its projects are sponsoring or endorsing the product. The following are examples of proper and improper usage of these trademarks of RESF:</p> <pre><code>Correct: &lt;your product name&gt; for &lt;RESF mark&gt;\nCorrect: &lt;your product/company name&gt; plug-in for &lt;RESF mark&gt;\nCorrect: &lt;your product name&gt; compatible with &lt;RESF mark&gt;\nCorrect: &lt;your product name&gt; for use with &lt;RESF mark&gt;\nCorrect: Quick Start for &lt;RESF mark&gt; by &lt;your company name&gt;\nCorrect: &lt;non-trademarked industry term&gt; Day featuring &lt;RESF mark&gt;\nCorrect: &lt;non-trademarked industry term&gt; Day with &lt;RESF mark&gt;\nCorrect: &lt;non-trademarked industry term&gt; Day including &lt;RESF mark&gt;\n\nIncorrect: &lt;RESF mark&gt; &lt;your product name&gt;\nIncorrect: &lt;RESF mark&gt; by &lt;your company name&gt;\nIncorrect: &lt;RESF mark&gt; - &lt;your product name&gt;\nIncorrect: &lt;your product/company name&gt; - &lt;RESF mark&gt;\nIncorrect: &lt;RESF mark&gt; Quick Start by &lt;your company name&gt;\nIncorrect: &lt;RESF mark&gt; Day\nIncorrect: &lt;RESF mark&gt; Day by &lt;your company name&gt;\nIncorrect: &lt;non-trademarked industry term&gt; Day brought to you by &lt;RESF mark&gt;\n</code></pre>"},{"location":"team/design/branding/#questions-comments-concerns","title":"Questions, Comments, Concerns","text":"<p>We look to our community to help us retain the value of RESF's trade and service marks. If you have questions with respect to these guidelines or to report concerns regarding the use or misuse of a trademark of RESF, or to obtain written permission for a proposed use of RESF trademarks, contact: design@rockylinux.org.</p>"},{"location":"team/design/branding/#disclaimer","title":"Disclaimer","text":"<p>RESF does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p>"},{"location":"team/design/branding/#updates","title":"Updates","text":"<p>RESF may release new versions of RESF trademark policy or statements of permitted use of RESF marks without notice.</p> <p>This work is inspired by the Mozilla Foundation Trademark Policy and the GNOME Trademark Licensing. It is licensed under a Creative Commons Attribution 4.0 International license (\"CC-BY-4.0\", available at https://creativecommons.org/licenses/by/4.0).</p>"},{"location":"team/documentation/","title":"Documentation Team","text":"<p>The Documentation Team manages the Rocky Linux Documentation site.</p> <p>The primary contact email is docs@rockylinux.org</p> <p>The primary Mattermost channel is <code>~Documentation</code>.</p> <p>To contribute to the documentation, please see the official Contribution Guide.</p>"},{"location":"team/documentation/#members","title":"Members","text":"Role Name Email Mattermost Name Documentation Lead Wale Soyinka wale@rockylinux.org @wale Documentation Lead Steven Spencer sspencer@rockylinux.org @sspencer"},{"location":"team/infrastructure/","title":"Infrastructure Team","text":"<p>This section is primarily for general documentation as it pertains to the Infrastructure that runs Rocky Linux and RESF activities.</p> <p>For more detailed documentation, SOP's, and guidelines, see the Infrastructure Wiki</p> <p>The primary contact email is infrastructure@rockylinux.org</p> <p>The primary mattermost channel is <code>~Infrastructure</code> with its bridged IRC channel <code>#rockylinux-infra</code>.</p>"},{"location":"team/infrastructure/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Infrastructure Lead Neil Hanlon neil@resf.org @neil neil Infrastructure Lead Taylor Goodwill tg@resf.org @tgo tg Identity Management &amp; Release Engineering Louis Abel label@rockylinux.org @nazunalika Sokel/label/Sombra Infrastructure Randolph @meltro N/A Infrastructure Patrick Roberts @preachermanx N/A"},{"location":"team/infrastructure/idm_pdr/","title":"PDR Delete Request","text":"<p>As a user within the Rocky Linux and Rocky Enterprise Software Foundation ecosystem, you have a right to request your account be disabled and information removed. This page will guide you in requesting a PDR Delete Request for us to process.</p>"},{"location":"team/infrastructure/idm_pdr/#contact-information","title":"Contact Information","text":"Owner Infrastructure Team &amp; Identity Management Team Email Contact infrastructure@rockylinux.org Email Contact identitymanagement@rockylinux.org Mattermost Contacts <code>@label</code> <code>@neil</code> <code>@tgo</code> Mattermost Channels <code>~Infrastructure</code>"},{"location":"team/infrastructure/idm_pdr/#general-information","title":"General Information","text":"<p>When you request a PDR Delete Request, please note that the following will occur during processing:</p> <ul> <li>Your personal data and information will be removed from your account</li> <li>You will be removed from all relevant groups in Account Services</li> <li>Your account will be set to <code>private</code> in Account Services</li> <li>Your account in Account Services will be disabled</li> </ul> <p>If your intention is to keep your account active and hide your personal information, you may set your profile to \"private\" in Account Services by:</p> <ol> <li>Click <code>Edit Profile</code></li> <li>Select the checkbox for <code>Private</code></li> <li>Save.</li> </ol>"},{"location":"team/infrastructure/idm_pdr/#mattermost-accounts","title":"Mattermost Accounts","text":"<p>While we are working to integrate Mattermost with Rocky Account Services, at this time, Mattermost accounts are still separate and are not included in a typical PDR Delete Request. If you wish to have your Mattermost account removed, you may follow the instructions below and indicate which account you would like to be removed. If submitting via email, please send from the address associated with the account you wish to have removed. If a different email address is used, the request will need to be validated with the account's proper address prior to actioning the request. For security reasons, we are not able to reveal the email address associated with any account name.</p>"},{"location":"team/infrastructure/idm_pdr/#submitting-a-request","title":"Submitting a Request","text":"<p>To submit a request, you may either email us, open a ticket at our Bug Tracker, or at our Infrastructure Meta.</p>"},{"location":"team/infrastructure/idm_pdr/#ticket-request","title":"Ticket Request","text":"<p>Click the following link to open our bug tracker.</p> <ol> <li>Open our Bug Tracker and login with your account (You can do this by clicking \"anonymous\" and click logout)</li> <li>In the top left corner, click the drop down next to your login name</li> <li>Select \"Account Services\" as the project.</li> <li>Click \"Report Issue\"</li> <li>Set category to <code>Account Requests - Personal Data Request</code></li> <li>Set summary as <code>PDR - Delete Request</code></li> <li>Above the description box, click the snippets drop down and select <code>PDR Request - Remove Personal Information</code></li> <li>Fill out the form appropriately. Do not remove data that starts that contains <code>{}</code> and ensure you have read the \"Information\" section. You may fill in comments as you see fit.</li> <li>Click <code>Submit Issue</code> at the bottom</li> </ol>"},{"location":"team/infrastructure/idm_pdr/#alternative-ticket-process","title":"Alternative Ticket Process","text":"<p>The bug tracker above provides a private way to ask for account deletion. For any account-related actions, up to and including deletion, we also welcome tickets to be created on the infrastructure/meta issue tracker on git.resf.org. You may sign-in with keycloak to this service using your Rocky Account Services account, which we can additionally use to validate your ownership of the account. When creating a new issue, you may select the 'Account Requests - Personal Data Request' as the template.</p>"},{"location":"team/infrastructure/idm_pdr/#email-request","title":"Email Request","text":"<p>Click the following link to open an email draft to us to start the process.</p>"},{"location":"team/release_engineering/","title":"Release Engineering Team","text":"<p>The Rocky Linux Release Engineering Team dedicates themselves to the development, building, management, production, and release of Rocky Linux. This team combines development and infrastruture into a single, cohesive unit that ultimately makes the distribution happen.</p> <p>The team has a detailed wiki which can be found here.</p>"},{"location":"team/release_engineering/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Identity Management &amp; Release Engineering Lead Louis Abel label@rockylinux.org @nazunalika Sokel/label/Sombra Release Engineering Co-Lead Mustafa Gezen mustafa@rockylinux.org @mustafa mstg Release Engineering and Development Skip Grube skip@rockylinux.org @skip77 skip77 Release Engineering and Development Sherif Nagy sherif@rockylinux.org @sherif SheriF Release Engineering and Development Pablo Greco pgreco@rockylinux.org @pgreco pgreco Infrastructure &amp; Release Engineering Neil Hanlon neil@resf.org @neil neil Infrastructure Taylor Goodwill tg@resf.org @tgo tg"},{"location":"team/release_engineering/legacy/","title":"Legacy","text":"<p>Originally, the legacy documentation existed here. It has been moved to another wiki.</p>"},{"location":"team/testing/","title":"QA Testing Team","text":""},{"location":"team/testing/#team-members","title":"Team Members","text":"Role Name Email Mattermost Name IRC Name Testing Lead Chris Stackpole stack@rockylinux.org @stack Testing Team Al Bowles @raktajino raktajino Testing Team Trevor Cooper tcooper@rockylinux.org @tcooper Testing Team Lukas Magauer lukas@magauer.eu @lumarel Testing Team Alan Marshall @alangm alangm"},{"location":"team/testing/#responsibilities","title":"Responsibilities","text":"<p>The Testing Team handles testing and QA for Rocky Linux.</p> Additional Information ContactDisclaimerLicense <p>If you have questions with respect to this content or to report concerns regarding the use or misuse content please do not hesitate to contact us at info@rockylinux.org.</p> <p>Rocky Linux and the Rocky Enterprise Software Foundation (RESF) does not make any express or implied warranties, including but not limited to the warranties of non-infringement of any third party intellectual property rights. RESF does not warrant that any pending trademark applications for trademarks of RESF will result in any granted trademark protection. RESF shall not be liable for any claims relating to user's activities falling within the scope of the permission and user hereby agrees to indemnify, defend and hold RESF and its contributors harmless against any such claim.</p> <p>This content is licensed under under Attribution-Share Alike 4.0 International license unless otherwise noted.</p>"},{"location":"team/web/","title":"Web Team","text":""},{"location":"team/web/#about","title":"About","text":"<p>The Web team handles Rocky Linux web presence &amp; development.</p>"},{"location":"team/web/#management","title":"Management","text":"<p>This team is lead by Michael Kinder.</p>"},{"location":"team/web/#contact","title":"Contact","text":""},{"location":"team/web/#email","title":"Email","text":"<p>web@rockylinux.org</p>"},{"location":"team/web/#mattermost","title":"Mattermost","text":"<p>Web</p>"},{"location":"team/web/#members","title":"Members","text":"Role Name Email Mattermost Name IRC Name Web Team Lead Michael Kinder mkinder@rockylinux.org @ressonix ressonix"},{"location":"team/web/#join-team","title":"Join Team","text":"<p>If you are interested in joining the Web Team as a Deputy, we ask that you start making contributions, engaging with the lead in the Mattermost channel, and engaging with the community.</p>"}]}